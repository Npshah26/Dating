{"version":3,"file":"static/js/7008.b6f15243.chunk.js","mappings":"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","sources":["components/PageTitleWrapper/index.tsx","content/Loader.tsx","content/setAPI/Setting.tsx"],"sourcesContent":["import { FC, ReactNode } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Box, Container, styled } from '@mui/material';\r\n\r\nconst PageTitle = styled(Box)(\r\n  ({ theme }) => `\r\n        padding: ${theme.spacing(1)};\r\n`\r\n);\r\n\r\ninterface PageTitleWrapperProps {\r\n  children?: ReactNode;\r\n}\r\n\r\nconst PageTitleWrapper: FC<PageTitleWrapperProps> = ({ children }) => {\r\n  return (\r\n    <PageTitle className=\"MuiPageTitle-wrapper\">\r\n      <Container maxWidth=\"lg\">{children}</Container>\r\n    </PageTitle>\r\n  );\r\n};\r\n\r\nPageTitleWrapper.propTypes = {\r\n  children: PropTypes.node.isRequired\r\n};\r\n\r\nexport default PageTitleWrapper;\r\n","import React from 'react';\r\nimport './Loader.css';\r\n\r\ninterface Props {\r\n  title: string;\r\n}\r\n\r\nconst Loader1 = (props: Props) => {\r\n  const { title } = props;\r\n  return (\r\n    // <div className=\"loader\">\r\n    //     <img className=\"img\" src={loader} alt=\"\" />\r\n    //     <span>{title}</span>\r\n    // </div>\r\n    <div className=\"spinner-container\">\r\n      <div className=\"loading-spinner\"></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loader1;\r\n","import { ChangeEvent, useEffect, useState } from 'react';\r\nimport {\r\n  Box,\r\n  Breadcrumbs,\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  Container,\r\n  Grid,\r\n  TableContainer,\r\n  Typography,\r\n  Stack,\r\n  Tooltip,\r\n  Switch,\r\n  TextField,\r\n  IconButton,\r\n  InputAdornment,\r\n  FormGroup,\r\n  Select,\r\n  MenuItem,\r\n  Checkbox,\r\n  ListItemText,\r\n  FormControl,\r\n  FormHelperText\r\n} from '@mui/material';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport PageTitleWrapper from 'src/components/PageTitleWrapper';\r\nimport APIservice from 'src/utils/APIservice';\r\nimport HomeIcon from '@mui/icons-material/Home';\r\nimport VisibilityIcon from '@mui/icons-material/Visibility';\r\nimport InfoIcon from '@mui/icons-material/Info';\r\nimport VisibilityOffIcon from '@mui/icons-material/VisibilityOff';\r\nimport Tab from '@mui/material/Tab';\r\nimport TabPanel from '@mui/lab/TabPanel';\r\nimport TabContext from '@mui/lab/TabContext';\r\nimport TabList from '@mui/lab/TabList';\r\nimport { Form, InputGroup } from 'react-bootstrap';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport Loader1 from '../Loader';\r\nimport { Helmet } from 'react-helmet-async';\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\nimport './Setting.css';\r\nimport checkIsDemoUser from 'src/utils/IsDemoUserCheck';\r\nimport { useSnackbar } from '../useSnackbar';\r\n\r\nconst modules = {\r\n  toolbar: {\r\n    container: [\r\n      [{ header: [1, 2, false] }],\r\n      ['bold', 'italic', 'underline', 'strike'],\r\n      [{ list: 'ordered' }, { list: 'bullet' }],\r\n      ['link', 'image']\r\n    ]\r\n  }\r\n};\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n      width: 250\r\n    }\r\n  }\r\n};\r\n\r\nconst Setting = () => {\r\n  const [list, setList] = useState<any[]>([]);\r\n  const [groupflag, setGroupFlag] = useState([]);\r\n  const [value, setValue] = useState('0');\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  let [credentail, setCredentail] = useState<any>();\r\n\r\n  const [isReadPermission, setIsReadPermission] = useState(true);\r\n  const [isWritePermission, setIsWritePermission] = useState(true);\r\n  const [isEditPermission, setIsEditPermission] = useState(true);\r\n  const [isDeletePermission, setIsDeletePermission] = useState(true);\r\n  const navigate = useNavigate();\r\n  const { showSnackBar, SnackbarComponent } = useSnackbar();\r\n\r\n  let [apiUrl, setApiUrl] = useState<any>();\r\n\r\n  // window.onpopstate = () => {\r\n  //   navigate(-1);\r\n  // }\r\n\r\n  useEffect(() => {\r\n    let cred = JSON.parse(localStorage.getItem('Credentials'));\r\n    setCredentail(cred);\r\n    //getData();\r\n    if (cred) {\r\n      if (cred.roleId != 1) {\r\n        let ind = cred.pagePermissions.findIndex(\r\n          (c: any) => c.title === 'Block Users'\r\n        );\r\n        if (ind >= 0) {\r\n          setIsReadPermission(cred.pagePermissions[ind].isReadPermission);\r\n          setIsWritePermission(cred.pagePermissions[ind].isAddPermission);\r\n          setIsEditPermission(cred.pagePermissions[ind].isEditPermission);\r\n          setIsDeletePermission(cred.pagePermissions[ind].isDeletePermission);\r\n\r\n          if (cred.pagePermissions[ind].isReadPermission) getData();\r\n          loadjson();\r\n        }\r\n      } else {\r\n        getData();\r\n        loadjson();\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  const loadjson = async () => {\r\n    let res = await fetch('/admin/variable.json'); // Adjust the file path as needed\r\n    let url = await res.json();\r\n    setApiUrl(url);\r\n    apiUrl = url;\r\n  };\r\n\r\n  const getData = async () => {\r\n    setIsLoading(true);\r\n    const token = localStorage.getItem('SessionToken');\r\n    const refreshToken = localStorage.getItem('RefreshToken');\r\n    let response = await APIservice.httpPost(\r\n      '/api/admin/systemflags/getAdminSystemFlagSetting',\r\n      {},\r\n      token,\r\n      refreshToken\r\n    );\r\n    let _data = response.recordList;\r\n    if (_data && _data.length > 0) {\r\n      for (let i = 0; i < _data.length; i++) {\r\n        for (let j = 0; j < _data[i].group.length; j++) {\r\n          for (let k = 0; k < _data[i].group[j].systemFlag.length; k++) {\r\n            if (_data[i].group[j].systemFlag[k].valueTypeId === 9) {\r\n              if (_data[i].group[j].systemFlag[k].value)\r\n                _data[i].group[j].systemFlag[k].value =\r\n                  _data[i].group[j].systemFlag[k].value;\r\n            }\r\n          }\r\n        }\r\n        for (let j = 0; j < _data[i].systemFlag.length; j++) {\r\n          if (_data[i].systemFlag[j].valueTypeId === 9) {\r\n            if (_data[i].systemFlag[j].value)\r\n              _data[i].systemFlag[j].value = _data[i].systemFlag[j].value;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    setList(_data);\r\n    let data = _data[0].systemFlag[0].value;\r\n    localStorage.setItem('DateFormat', data);\r\n    setIsLoading(false);\r\n  };\r\n\r\n  const handleEditorChange = (\r\n    value: string,\r\n    id: number,\r\n    flagGroup: any,\r\n    childGroup: any,\r\n    pSystemFlag: any\r\n  ) => {\r\n    // setContent(value);\r\n    // onChange(value);\r\n    let changeFlag = false;\r\n    console.log('value');\r\n    let fGroups = JSON.parse(JSON.stringify(list));\r\n    if (flagGroup && flagGroup.id) {\r\n      let ind = fGroups.findIndex((c) => c.id == flagGroup.id);\r\n      if (ind >= 0) {\r\n        if (childGroup && childGroup.id) {\r\n          let cInd = fGroups[ind].group.findIndex((c) => c.id == childGroup.id);\r\n          if (cInd >= 0) {\r\n            let sInd = fGroups[ind].group[cInd].systemFlag.findIndex(\r\n              (c) => c.id == parseInt(id + '')\r\n            );\r\n            if (sInd >= 0) {\r\n              if (fGroups[ind].group[cInd].systemFlag[sInd].value != value) {\r\n                fGroups[ind].group[cInd].systemFlag[sInd].value = value;\r\n                changeFlag = true;\r\n              }\r\n              let childFlags =\r\n                fGroups[ind].group[cInd].systemFlag[sInd].childSystemFlag;\r\n              if (childFlags && childFlags.length > 0) {\r\n                for (\r\n                  let i = 0;\r\n                  i <\r\n                  fGroups[ind].group[cInd].systemFlag[sInd].childSystemFlag\r\n                    .length;\r\n                  i++\r\n                ) {\r\n                  if (\r\n                    fGroups[ind].group[cInd].systemFlag[sInd].childSystemFlag[i]\r\n                      .parentFlagValue ==\r\n                    fGroups[ind].group[cInd].systemFlag[sInd].value\r\n                  ) {\r\n                    fGroups[ind].group[cInd].systemFlag[sInd].childSystemFlag[\r\n                      i\r\n                    ].autoRender = 1;\r\n                  } else {\r\n                    fGroups[ind].group[cInd].systemFlag[sInd].childSystemFlag[\r\n                      i\r\n                    ].autoRender = 0;\r\n                  }\r\n                }\r\n              }\r\n            }\r\n            if (pSystemFlag && pSystemFlag.id) {\r\n              let psind = fGroups[ind].group[cInd].systemFlag.findIndex(\r\n                (c) => c.id == pSystemFlag.id\r\n              );\r\n              let csInd = fGroups[ind].group[cInd].systemFlag[\r\n                psind\r\n              ].childSystemFlag.findIndex((c) => c.id == parseInt(id + ''));\r\n              if (csInd >= 0) {\r\n                fGroups[ind].group[cInd].systemFlag[psind].childSystemFlag[\r\n                  csInd\r\n                ].value = value;\r\n              }\r\n            }\r\n          }\r\n        } else {\r\n          let sInd = fGroups[ind].systemFlag.findIndex(\r\n            (c) => c.id == parseInt(id + '')\r\n          );\r\n          if (sInd >= 0) {\r\n            if (fGroups[ind].systemFlag[sInd].value != value) {\r\n              fGroups[ind].systemFlag[sInd].value = value;\r\n              changeFlag = true;\r\n            }\r\n            let childFlags = fGroups[ind].systemFlag[sInd].childSystemFlag;\r\n            if (childFlags && childFlags.length > 0) {\r\n              for (\r\n                let i = 0;\r\n                i < fGroups[ind].systemFlag[sInd].childSystemFlag.length;\r\n                i++\r\n              ) {\r\n                if (\r\n                  fGroups[ind].systemFlag[sInd].childSystemFlag[i]\r\n                    .parentFlagValue == fGroups[ind].systemFlag[sInd].value\r\n                ) {\r\n                  fGroups[ind].systemFlag[sInd].childSystemFlag[\r\n                    i\r\n                  ].autoRender = 1;\r\n                } else {\r\n                  fGroups[ind].systemFlag[sInd].childSystemFlag[\r\n                    i\r\n                  ].autoRender = 0;\r\n                }\r\n              }\r\n            }\r\n          }\r\n\r\n          if (pSystemFlag && pSystemFlag.id) {\r\n            let psind = fGroups[ind].systemFlag.findIndex(\r\n              (c) => c.id == pSystemFlag.id\r\n            );\r\n            let csInd = fGroups[ind].systemFlag[\r\n              psind\r\n            ].childSystemFlag.findIndex((c) => c.id == parseInt(id + ''));\r\n            if (csInd >= 0) {\r\n              fGroups[ind].systemFlag[psind].childSystemFlag[csInd].value =\r\n                value;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    if (changeFlag) setList(fGroups);\r\n  };\r\n\r\n  const handleflagChange = (\r\n    e: ChangeEvent<HTMLInputElement>,\r\n    flagGroup: any,\r\n    childGroup: any,\r\n    pSystemFlag: any\r\n  ) => {\r\n    debugger;\r\n    //let flagGroup = JSON.parse(JSON.stringify(list));\r\n    let fGroups = JSON.parse(JSON.stringify(list));\r\n    if (flagGroup && flagGroup.id) {\r\n      let ind = fGroups.findIndex((c) => c.id == flagGroup.id);\r\n      if (ind >= 0) {\r\n        if (childGroup && childGroup.id) {\r\n          let cInd = fGroups[ind].group.findIndex((c) => c.id == childGroup.id);\r\n          if (cInd >= 0) {\r\n            let sInd = fGroups[ind].group[cInd].systemFlag.findIndex(\r\n              (c) => c.id == parseInt(e.target.name)\r\n            );\r\n            if (sInd >= 0) {\r\n              if (fGroups[ind].group[cInd].systemFlag[sInd].valueTypeId === 7) {\r\n                // let res = fGroups[ind].group[cInd].systemFlag[sInd].value\r\n                // res === 0 ? 1 : 0\r\n                fGroups[ind].group[cInd].systemFlag[sInd].value =\r\n                  fGroups[ind].group[cInd].systemFlag[sInd].value === '1' ||\r\n                  fGroups[ind].group[cInd].systemFlag[sInd].value === true\r\n                    ? true\r\n                    : false;\r\n                fGroups[ind].group[cInd].systemFlag[sInd].value =\r\n                  !fGroups[ind].group[cInd].systemFlag[sInd].value;\r\n              } else {\r\n                fGroups[ind].group[cInd].systemFlag[sInd].value =\r\n                  e.target.value;\r\n              }\r\n\r\n              let childFlags =\r\n                fGroups[ind].group[cInd].systemFlag[sInd].childSystemFlag;\r\n              if (childFlags && childFlags.length > 0) {\r\n                for (\r\n                  let i = 0;\r\n                  i <\r\n                  fGroups[ind].group[cInd].systemFlag[sInd].childSystemFlag\r\n                    .length;\r\n                  i++\r\n                ) {\r\n                  if (\r\n                    fGroups[ind].group[cInd].systemFlag[sInd].childSystemFlag[i]\r\n                      .parentFlagValue ==\r\n                    fGroups[ind].group[cInd].systemFlag[sInd].value\r\n                  ) {\r\n                    fGroups[ind].group[cInd].systemFlag[sInd].childSystemFlag[\r\n                      i\r\n                    ].autoRender = 1;\r\n\r\n                    if (\r\n                      fGroups[ind].group[cInd].systemFlag[sInd].childSystemFlag[\r\n                        i\r\n                      ].valueTypeId === 7\r\n                    ) {\r\n                      fGroups[ind].group[cInd].systemFlag[sInd].childSystemFlag[\r\n                        i\r\n                      ].value =\r\n                        fGroups[ind].group[cInd].systemFlag[sInd]\r\n                          .childSystemFlag[i].value === '1' ||\r\n                        fGroups[ind].group[cInd].systemFlag[sInd]\r\n                          .childSystemFlag[i].value === true\r\n                          ? true\r\n                          : false;\r\n                      fGroups[ind].group[cInd].systemFlag[sInd].childSystemFlag[\r\n                        i\r\n                      ].value =\r\n                        !fGroups[ind].group[cInd].systemFlag[sInd]\r\n                          .childSystemFlag[i].value;\r\n                    }\r\n                  } else {\r\n                    fGroups[ind].group[cInd].systemFlag[sInd].childSystemFlag[\r\n                      i\r\n                    ].autoRender = 0;\r\n                  }\r\n                }\r\n              }\r\n            }\r\n            if (pSystemFlag && pSystemFlag.id) {\r\n              let psind = fGroups[ind].group[cInd].systemFlag.findIndex(\r\n                (c) => c.id == pSystemFlag.id\r\n              );\r\n              let csInd = fGroups[ind].group[cInd].systemFlag[\r\n                psind\r\n              ].childSystemFlag.findIndex(\r\n                (c) => c.id == parseInt(e.target.name)\r\n              );\r\n              if (csInd >= 0) {\r\n                if (\r\n                  fGroups[ind].group[cInd].systemFlag[psind].childSystemFlag[\r\n                    csInd\r\n                  ].valueTypeId === 7\r\n                ) {\r\n                  // let res = fGroups[ind].group[cInd].systemFlag[sInd].value\r\n                  // res === 0 ? 1 : 0\r\n                  fGroups[ind].group[cInd].systemFlag[psind].childSystemFlag[\r\n                    csInd\r\n                  ].value =\r\n                    fGroups[ind].group[cInd].systemFlag[psind].childSystemFlag[\r\n                      csInd\r\n                    ].value === '1' ||\r\n                    fGroups[ind].group[cInd].systemFlag[psind].childSystemFlag[\r\n                      csInd\r\n                    ].value === true\r\n                      ? true\r\n                      : false;\r\n                  fGroups[ind].group[cInd].systemFlag[psind].childSystemFlag[\r\n                    csInd\r\n                  ].value =\r\n                    !fGroups[ind].group[cInd].systemFlag[psind].childSystemFlag[\r\n                      csInd\r\n                    ].value;\r\n                } else {\r\n                  fGroups[ind].group[cInd].systemFlag[psind].childSystemFlag[\r\n                    csInd\r\n                  ].value = e.target.value;\r\n                }\r\n              }\r\n            }\r\n          }\r\n        } else {\r\n          let sInd = fGroups[ind].systemFlag.findIndex(\r\n            (c) => c.id == parseInt(e.target.name)\r\n          );\r\n          if (sInd >= 0) {\r\n            if (fGroups[ind].systemFlag[sInd].valueTypeId === 7) {\r\n              fGroups[ind].systemFlag[sInd].value =\r\n                fGroups[ind].systemFlag[sInd].value === '1' ||\r\n                fGroups[ind].systemFlag[sInd].value === true\r\n                  ? true\r\n                  : false;\r\n              fGroups[ind].systemFlag[sInd].value =\r\n                !fGroups[ind].systemFlag[sInd].value;\r\n              if (\r\n                fGroups[ind].systemFlag[sInd].id == 41 &&\r\n                !fGroups[ind].systemFlag[sInd].value\r\n              ) {\r\n                let rewardInd = fGroups[ind].systemFlag.findIndex(\r\n                  (c) => c.id == 42\r\n                );\r\n                if (\r\n                  rewardInd >= 0 &&\r\n                  fGroups[ind].systemFlag[rewardInd].valueTypeId === 7\r\n                ) {\r\n                  fGroups[ind].systemFlag[rewardInd].value = false;\r\n                }\r\n              }\r\n            } else {\r\n              fGroups[ind].systemFlag[sInd].value = e.target.value;\r\n            }\r\n\r\n            let childFlags = fGroups[ind].systemFlag[sInd].childSystemFlag;\r\n            if (childFlags && childFlags.length > 0) {\r\n              for (\r\n                let i = 0;\r\n                i < fGroups[ind].systemFlag[sInd].childSystemFlag.length;\r\n                i++\r\n              ) {\r\n                if (\r\n                  fGroups[ind].systemFlag[sInd].childSystemFlag[i]\r\n                    .parentFlagValue == fGroups[ind].systemFlag[sInd].value\r\n                ) {\r\n                  fGroups[ind].systemFlag[sInd].childSystemFlag[\r\n                    i\r\n                  ].autoRender = 1;\r\n\r\n                  if (\r\n                    fGroups[ind].systemFlag[sInd].childSystemFlag[i]\r\n                      .valueTypeId === 7\r\n                  ) {\r\n                    fGroups[ind].systemFlag[sInd].childSystemFlag[i].value =\r\n                      fGroups[ind].systemFlag[sInd].childSystemFlag[i].value ===\r\n                        '1' ||\r\n                      fGroups[ind].systemFlag[sInd].childSystemFlag[i].value ===\r\n                        true\r\n                        ? true\r\n                        : false;\r\n                    fGroups[ind].systemFlag[sInd].childSystemFlag[i].value =\r\n                      !fGroups[ind].systemFlag[sInd].childSystemFlag[i].value;\r\n                  }\r\n                } else {\r\n                  fGroups[ind].systemFlag[sInd].childSystemFlag[\r\n                    i\r\n                  ].autoRender = 0;\r\n                }\r\n              }\r\n            }\r\n          }\r\n          if (pSystemFlag && pSystemFlag.id) {\r\n            let psind = fGroups[ind].systemFlag.findIndex(\r\n              (c) => c.id == pSystemFlag.id\r\n            );\r\n            let csInd = fGroups[ind].systemFlag[\r\n              psind\r\n            ].childSystemFlag.findIndex((c) => c.id == parseInt(e.target.name));\r\n            if (csInd >= 0) {\r\n              if (\r\n                fGroups[ind].systemFlag[psind].childSystemFlag[csInd]\r\n                  .valueTypeId === 7\r\n              ) {\r\n                // let res = fGroups[ind].group[cInd].systemFlag[sInd].value\r\n                // res === 0 ? 1 : 0\r\n                fGroups[ind].systemFlag[psind].childSystemFlag[csInd].value =\r\n                  fGroups[ind].systemFlag[psind].childSystemFlag[csInd]\r\n                    .value === '1' ||\r\n                  fGroups[ind].systemFlag[psind].childSystemFlag[csInd]\r\n                    .value === true\r\n                    ? true\r\n                    : false;\r\n                fGroups[ind].systemFlag[psind].childSystemFlag[csInd].value =\r\n                  !fGroups[ind].systemFlag[psind].childSystemFlag[csInd].value;\r\n              } else {\r\n                fGroups[ind].systemFlag[psind].childSystemFlag[csInd].value =\r\n                  e.target.value;\r\n              }\r\n            }\r\n          }\r\n        }\r\n\r\n        let checkindex = fGroups[ind].systemFlag.findIndex(\r\n          (c) => c.value === 'PreFix' || c.value === 'PostFix'\r\n        );\r\n        // if (checkindex >= 0) {\r\n        //   setIsPreOrPost(true);\r\n        // } else {\r\n        //   setIsPreOrPost(false);\r\n        // }\r\n      }\r\n    }\r\n\r\n    //show child flag on condition\r\n    // let value: any\r\n    // if (e.target.value === '1' || e.target.value === '0' || e.target.value === 'true' || e.target.value === 'false') {\r\n    //   //store opposite boolean value in value\r\n    //   value = (e.target.value === '1' || e.target.value === 'true') ? 0 : 1;\r\n    // } else {\r\n    //   value = e.target.value\r\n    // }\r\n    // if (fGroups && fGroups.length > 0) {\r\n    //   if (fGroups && fGroups.length > 0) {\r\n    //     debugger\r\n    //     for (let i = 0; i < fGroups.length; i++) {\r\n    //       for (let j = 0; j < fGroups[i].group.length; j++) {\r\n\r\n    //         let matchingIndices = fGroups[i].group[j].systemFlag\r\n    //           .map((c: any, index: number) => ({ ...c, index }))  // Map to objects with value and index\r\n    //           .filter((c: any) => c.parentFlagId == parseInt(e.target.name))  // Filter those that match the condition\r\n    //           .map((c: any) => c.index);\r\n\r\n    //         if (matchingIndices && matchingIndices.length > 0) {\r\n    //           for (let index of matchingIndices) {\r\n    //             if (fGroups[i].group[j].systemFlag[index].parentFlagValue == value) {\r\n    //               fGroups[i].group[j].systemFlag[index].autoRender = true;\r\n    //               if (fGroups[i].group[j].systemFlag[index].valueTypeId === 7) {\r\n\r\n    //                 fGroups[i].group[j].systemFlag[index].value = (fGroups[i].group[j].systemFlag[index].value === '1' || fGroups[i].group[j].systemFlag[index].value === true) ? true : false;\r\n    //                 fGroups[i].group[j].systemFlag[index].value = !(\r\n    //                   fGroups[i].group[j].systemFlag[index].value\r\n    //                 );\r\n    //               }\r\n    //             } else {\r\n    //               fGroups[i].group[j].systemFlag[index].autoRender = false;\r\n    //             }\r\n    //           }\r\n    //         }\r\n    //       }\r\n    //     }\r\n    //     for (let i = 0; i < fGroups.length; i++) {\r\n    //       for (let j = 0; j < fGroups[i].systemFlag.length; j++) {\r\n\r\n    //         // let childSysFlagInd = fGroups[i].systemFlag.findIndex((c: any) => (c.parentFlagId == parseInt(e.target.name)) && (c.parentFlagValue == value));\r\n\r\n    //         let matchingIndices = fGroups[i].systemFlag\r\n    //           .map((c: any, index: number) => ({ ...c, index }))  // Map to objects with value and index\r\n    //           .filter((c: any) => c.parentFlagId == parseInt(e.target.name))  // Filter those that match the condition\r\n    //           .map((c: any) => c.index);\r\n\r\n    //         if (matchingIndices && matchingIndices.length > 0) {\r\n    //           for (let index of matchingIndices) {\r\n    //             if (fGroups[i].systemFlag[index].parentFlagValue == value) {\r\n    //               fGroups[i].systemFlag[index].autoRender = 1;\r\n    //               if (fGroups[i].systemFlag[index].valueTypeId === 7) {\r\n    //                 fGroups[i].systemFlag[index].value = (fGroups[i].systemFlag[index].value === '1' || fGroups[i].systemFlag[index].value === true) ? true : false;\r\n    //                 fGroups[i].systemFlag[index].value = !(\r\n    //                   fGroups[i].systemFlag[index].value\r\n    //                 );\r\n    //               }\r\n    //             } else {\r\n    //               fGroups[i].systemFlag[index].autoRender = 0;\r\n    //             }\r\n    //           }\r\n    //         }\r\n\r\n    //       }\r\n    //     }\r\n    //   }\r\n    // }\r\n\r\n    setList(fGroups);\r\n  };\r\n\r\n  // const validateForm = () => {\r\n  //   let flag = true;\r\n  //   if (isPrePostFixError) {\r\n  //     flag = false;\r\n  //   }\r\n  //   return flag\r\n  // }\r\n\r\n  const handleClick = async (e: any) => {\r\n    debugger;\r\n    // var flag = validateForm();\r\n    // if (flag) {\r\n    const token = localStorage.getItem('SessionToken');\r\n    const refreshToken = localStorage.getItem('RefreshToken');\r\n    let nameList = new Array<string>();\r\n    let valueList = new Array<string>();\r\n    let autoRenderList = new Array<any>();\r\n    for (let i = 0; i < list.length; i++) {\r\n      if (list[i].systemFlag && list[i].systemFlag.length > 0) {\r\n        for (let k = 0; k < list[i].systemFlag.length; k++) {\r\n          if (list[i].systemFlag[k].valueTypeId == 10)\r\n            list[i].systemFlag[k].value = Array.isArray(\r\n              list[i].systemFlag[k].value\r\n            )\r\n              ? list[i].systemFlag[k].value.join(';')\r\n              : list[i].systemFlag[k].value;\r\n\r\n          nameList.push(list[i].systemFlag[k].name);\r\n          valueList.push(list[i].systemFlag[k].value);\r\n          autoRenderList.push(list[i].systemFlag[k].autoRender);\r\n          localStorage.setItem('DateFormat', valueList[0]);\r\n          if (list[i].systemFlag[k].name == 'isUserProfilePicApprove')\r\n            localStorage.setItem(\r\n              'isUserProfilePicApprove',\r\n              list[i].systemFlag[k].value\r\n            );\r\n\r\n          if (\r\n            list[i].systemFlag[k].childSystemFlag &&\r\n            list[i].systemFlag[k].childSystemFlag.length > 0\r\n          ) {\r\n            for (\r\n              let l = 0;\r\n              l < list[i].systemFlag[k].childSystemFlag.length;\r\n              k++\r\n            ) {\r\n              if (list[i].systemFlag[k].childSystemFlag[l].valueTypeId == 10)\r\n                list[i].systemFlag[k].childSystemFlag[l].value = Array.isArray(\r\n                  list[i].systemFlag[k].value\r\n                )\r\n                  ? list[i].systemFlag[k].childSystemFlag[l].value.join(';')\r\n                  : list[i].systemFlag[k].childSystemFlag[l].value;\r\n              nameList.push(list[i].systemFlag[k].childSystemFlag[l].name);\r\n              valueList.push(list[i].systemFlag[k].childSystemFlag[l].value);\r\n              autoRenderList.push(\r\n                list[i].systemFlag[k].childSystemFlag[l].autoRender\r\n              );\r\n              localStorage.setItem('DateFormat', valueList[0]);\r\n              if (\r\n                list[i].systemFlag[k].childSystemFlag[l].name ==\r\n                'isUserProfilePicApprove'\r\n              )\r\n                localStorage.setItem(\r\n                  'isUserProfilePicApprove',\r\n                  list[i].systemFlag[k].childSystemFlag[l].value\r\n                );\r\n            }\r\n          }\r\n        }\r\n      }\r\n      if (list[i].group && list[i].group.length > 0) {\r\n        for (let j = 0; j < list[i].group.length; j++) {\r\n          if (\r\n            list[i].group[j].systemFlag &&\r\n            list[i].group[j].systemFlag.length > 0\r\n          ) {\r\n            for (let k = 0; k < list[i].group[j].systemFlag.length; k++) {\r\n              if (list[i].group[j].systemFlag[k].valueTypeId == 10)\r\n                list[i].group[j].systemFlag[k].value = Array.isArray(\r\n                  list[i].group[j].systemFlag[k].value\r\n                )\r\n                  ? list[i].group[j].systemFlag[k].value.join(';')\r\n                  : list[i].group[j].systemFlag[k].value;\r\n\r\n              if (list[i].group[j].systemFlag[k].valueTypeId === 7) {\r\n                nameList.push(list[i].group[j].systemFlag[k].name);\r\n                // list[i].group[j].systemFlag[k].value = !list[i].group[j].systemFlag[k].value\r\n                valueList.push(list[i].group[j].systemFlag[k].value);\r\n                autoRenderList.push(list[i].group[j].systemFlag[k].autoRender);\r\n              } else {\r\n                nameList.push(list[i].group[j].systemFlag[k].name);\r\n                valueList.push(list[i].group[j].systemFlag[k].value);\r\n                autoRenderList.push(list[i].group[j].systemFlag[k].autoRender);\r\n              }\r\n              if (\r\n                list[i].group[j].systemFlag[k].childSystemFlag &&\r\n                list[i].group[j].systemFlag[k].childSystemFlag.length > 0\r\n              ) {\r\n                for (\r\n                  let l = 0;\r\n                  l < list[i].group[j].systemFlag[k].childSystemFlag.length;\r\n                  l++\r\n                ) {\r\n                  if (\r\n                    list[i].group[j].systemFlag[k].childSystemFlag[l]\r\n                      .valueTypeId == 10\r\n                  )\r\n                    list[i].group[j].systemFlag[k].childSystemFlag[l].value =\r\n                      Array.isArray(\r\n                        list[i].group[j].systemFlag[k].childSystemFlag[l].value\r\n                      )\r\n                        ? list[i].group[j].systemFlag[k].childSystemFlag[\r\n                            l\r\n                          ].value.join(';')\r\n                        : list[i].group[j].systemFlag[k].childSystemFlag[l]\r\n                            .value;\r\n\r\n                  if (\r\n                    list[i].group[j].systemFlag[k].childSystemFlag[l]\r\n                      .valueTypeId === 7\r\n                  ) {\r\n                    nameList.push(\r\n                      list[i].group[j].systemFlag[k].childSystemFlag[l].name\r\n                    );\r\n                    // list[i].group[j].systemFlag[k].value = !list[i].group[j].systemFlag[k].value\r\n                    valueList.push(\r\n                      list[i].group[j].systemFlag[k].childSystemFlag[l].value\r\n                    );\r\n                    autoRenderList.push(\r\n                      list[i].group[j].systemFlag[k].childSystemFlag[l]\r\n                        .autoRender\r\n                    );\r\n                  } else {\r\n                    nameList.push(\r\n                      list[i].group[j].systemFlag[k].childSystemFlag[l].name\r\n                    );\r\n                    valueList.push(\r\n                      list[i].group[j].systemFlag[k].childSystemFlag[l].value\r\n                    );\r\n                    autoRenderList.push(\r\n                      list[i].group[j].systemFlag[k].childSystemFlag[l]\r\n                        .autoRender\r\n                    );\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    let obj = {\r\n      nameList: nameList,\r\n      valueList: valueList,\r\n      autoRenderList: autoRenderList\r\n    };\r\n    let res = await APIservice.httpPost(\r\n      '/api/admin/systemflags/updateSystemFlagByName',\r\n      obj,\r\n      token,\r\n      refreshToken\r\n    );\r\n\r\n    if (res && res.status == 200) {\r\n      toast.success('Update Successfully', {\r\n        autoClose: 6000,\r\n        hideProgressBar: true,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: 'colored',\r\n        position: toast.POSITION.TOP_RIGHT\r\n      });\r\n    } else if (res.status == 401) {\r\n      localStorage.clear();\r\n      navigate('/admin');\r\n    } else if (res.status == 400) {\r\n      toast.error(res.message, {\r\n        autoClose: 6000,\r\n        hideProgressBar: true,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: 'colored',\r\n        position: toast.POSITION.TOP_RIGHT\r\n      });\r\n    } else if (res.status == 500) {\r\n      toast.error(res.message, {\r\n        autoClose: 6000,\r\n        hideProgressBar: true,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: 'colored',\r\n        position: toast.POSITION.TOP_RIGHT\r\n      });\r\n    } else if (res.status == 300) {\r\n      toast.error(res.message, {\r\n        autoClose: 6000,\r\n        hideProgressBar: true,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: 'colored',\r\n        position: toast.POSITION.TOP_RIGHT\r\n      });\r\n    } else if (res.status == 404) {\r\n      toast.error(res.message, {\r\n        autoClose: 6000,\r\n        hideProgressBar: true,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: 'colored',\r\n        position: toast.POSITION.TOP_RIGHT\r\n      });\r\n    }\r\n    // }\r\n  };\r\n\r\n  const handleChange = (event: React.SyntheticEvent, newValue: string) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  const onFileChange = (e: any, flagGroup: any, childGroup: any) => {\r\n    debugger;\r\n    const file = e.target.files[0];\r\n    const reader = new FileReader();\r\n\r\n    reader.onload = () => {\r\n      //setImage(reader.result.toString());\r\n      let fGroups = JSON.parse(JSON.stringify(list));\r\n      if (flagGroup && flagGroup.id) {\r\n        let ind = fGroups.findIndex((c) => c.id == flagGroup.id);\r\n        if (ind >= 0) {\r\n          if (childGroup && childGroup.id) {\r\n            let cInd = fGroups[ind].group.findIndex(\r\n              (c) => c.id == childGroup.id\r\n            );\r\n            if (cInd >= 0) {\r\n              let sInd = fGroups[ind].group[cInd].systemFlag.findIndex(\r\n                (c) => c.id == parseInt(e.target.name)\r\n              );\r\n              if (sInd >= 0) {\r\n                if (\r\n                  fGroups[ind].group[cInd].systemFlag[sInd].valueTypeId === 7\r\n                ) {\r\n                  fGroups[ind].group[cInd].systemFlag[sInd].value = !parseInt(\r\n                    fGroups[ind].group[cInd].systemFlag[sInd].value\r\n                  );\r\n                } else {\r\n                  fGroups[ind].group[cInd].systemFlag[sInd].value =\r\n                    reader.result.toString();\r\n                }\r\n              }\r\n            }\r\n          } else {\r\n            let sInd = fGroups[ind].systemFlag.findIndex(\r\n              (c) => c.id == parseInt(e.target.name)\r\n            );\r\n            if (sInd >= 0) {\r\n              fGroups[ind].systemFlag[sInd].value = reader.result.toString();\r\n            }\r\n          }\r\n        }\r\n      }\r\n      setList(fGroups);\r\n    };\r\n    reader.readAsDataURL(file);\r\n  };\r\n\r\n  console.log('list------------->', list);\r\n\r\n  return (\r\n    <>\r\n      <SnackbarComponent />\r\n      <ToastContainer\r\n        style={{ top: '10%', left: '80%' }}\r\n        autoClose={6000}\r\n        hideProgressBar={true}\r\n        newestOnTop={false}\r\n        closeOnClick\r\n        rtl={false}\r\n        pauseOnFocusLoss\r\n        draggable\r\n        pauseOnHover\r\n      />\r\n      <Helmet>\r\n        <title>Setting</title>\r\n      </Helmet>\r\n      <PageTitleWrapper>\r\n        <Box py={1.9} pl={1}>\r\n          <Grid container justifyContent=\"space-between\" alignItems=\"center\">\r\n            <Grid item>\r\n              <Stack alignItems=\"left\" justifyContent=\"space-between\">\r\n                <Breadcrumbs aria-label=\"breadcrumb\">\r\n                  <Link\r\n                    to=\"/admin/dashboard\"\r\n                    style={{ display: 'flex', color: 'black' }}\r\n                  >\r\n                    <HomeIcon />\r\n                  </Link>\r\n                  <Typography\r\n                    variant=\"subtitle2\"\r\n                    color=\"inherit\"\r\n                    fontWeight=\"bold\"\r\n                  >\r\n                    Setting\r\n                  </Typography>\r\n                </Breadcrumbs>\r\n              </Stack>\r\n            </Grid>\r\n          </Grid>\r\n        </Box>\r\n      </PageTitleWrapper>\r\n      <div>\r\n        <div>\r\n          <Container maxWidth=\"lg\">\r\n            <Grid\r\n              container\r\n              direction=\"row\"\r\n              justifyContent=\"center\"\r\n              alignItems=\"stretch\"\r\n              spacing={3}\r\n            >\r\n              <Grid item xs={12}>\r\n                <Card style={{ marginBottom: '10px' }}>\r\n                  <CardContent>\r\n                    <Box sx={{ width: '100%', typography: 'body1' }}>\r\n                      <TabContext value={value}>\r\n                        <Box\r\n                          sx={{\r\n                            borderBottom: 1,\r\n                            borderColor: 'divider',\r\n                            padding: '16px',\r\n                            paddingLeft: '0px',\r\n                            overflowX: 'auto'\r\n                          }}\r\n                        >\r\n                          <TabList\r\n                            onChange={handleChange}\r\n                            variant=\"scrollable\"\r\n                            aria-label=\"lab API tabs example\"\r\n                          >\r\n                            {list.map((resp: any, index: number) => (\r\n                              <Tab\r\n                                key={index}\r\n                                label={resp.flagGroupName}\r\n                                value={index + ''}\r\n                              />\r\n                            ))}\r\n                          </TabList>\r\n                        </Box>\r\n                        <div>\r\n                          {isLoading ? (\r\n                            <Loader1 title=\"Loading...\" />\r\n                          ) : (\r\n                            <>\r\n                              <TableContainer>\r\n                                {list.map((resp: any, index: number) => (\r\n                                  <TabPanel\r\n                                    key={index + ''}\r\n                                    value={index + ''}\r\n                                    className=\"p-0\"\r\n                                  >\r\n                                    <div className=\"mt-3\">\r\n                                      {resp.systemFlag.map(\r\n                                        (sysflag: any, sIndex: number) => (\r\n                                          <div\r\n                                            className=\"mb-3\"\r\n                                            key={sysflag.id}\r\n                                          >\r\n                                            {sysflag.autoRender == 1 && (\r\n                                              <>\r\n                                                <label className=\"form-label text-capitalize\">\r\n                                                  {sysflag.displayName}\r\n                                                </label>\r\n                                                {sysflag.description && (\r\n                                                  <Tooltip\r\n                                                    title={sysflag.description}\r\n                                                    arrow\r\n                                                  >\r\n                                                    <InfoIcon\r\n                                                      sx={{\r\n                                                        'font-size':\r\n                                                          '16px!important'\r\n                                                      }}\r\n                                                      style={{\r\n                                                        marginRight: '5px',\r\n                                                        marginLeft: '5px'\r\n                                                      }}\r\n                                                    />\r\n                                                  </Tooltip>\r\n                                                )}\r\n                                                {sysflag.valueTypeName ==\r\n                                                  'Text' && (\r\n                                                  <>\r\n                                                    <input\r\n                                                      type=\"text\"\r\n                                                      className=\"form-control\"\r\n                                                      required\r\n                                                      name={sysflag.id + ''}\r\n                                                      onChange={(e) =>\r\n                                                        handleflagChange(\r\n                                                          e,\r\n                                                          resp,\r\n                                                          null,\r\n                                                          null\r\n                                                        )\r\n                                                      }\r\n                                                      value={sysflag.value}\r\n                                                    />\r\n                                                  </>\r\n                                                )}\r\n                                                {sysflag.valueTypeName ==\r\n                                                  'Number' && (\r\n                                                  <input\r\n                                                    type=\"number\"\r\n                                                    className=\"form-control\"\r\n                                                    required\r\n                                                    name={sysflag.id + ''}\r\n                                                    onChange={(e) =>\r\n                                                      handleflagChange(\r\n                                                        e,\r\n                                                        resp,\r\n                                                        null,\r\n                                                        null\r\n                                                      )\r\n                                                    }\r\n                                                    value={sysflag.value}\r\n                                                  />\r\n                                                )}\r\n                                                {sysflag.valueTypeName ==\r\n                                                  'DropDownList' && (\r\n                                                  <Form.Select\r\n                                                    name={sysflag.id + ''}\r\n                                                    value={sysflag.value}\r\n                                                    onChange={(e: any) =>\r\n                                                      handleflagChange(\r\n                                                        e,\r\n                                                        resp,\r\n                                                        null,\r\n                                                        null\r\n                                                      )\r\n                                                    }\r\n                                                  >\r\n                                                    {sysflag.valueList\r\n                                                      .split(';')\r\n                                                      .map((arr: any) => (\r\n                                                        <option\r\n                                                          key={arr}\r\n                                                          value={arr}\r\n                                                        >\r\n                                                          {arr}\r\n                                                        </option>\r\n                                                      ))}\r\n                                                  </Form.Select>\r\n                                                )}\r\n                                                {sysflag.valueTypeName ==\r\n                                                  'Html' && (\r\n                                                  <ReactQuill\r\n                                                    theme=\"snow\"\r\n                                                    value={sysflag.value}\r\n                                                    onChange={(e) => {\r\n                                                      handleEditorChange(\r\n                                                        e,\r\n                                                        sysflag.id,\r\n                                                        resp,\r\n                                                        null,\r\n                                                        null\r\n                                                      );\r\n                                                    }}\r\n                                                    modules={modules}\r\n                                                  />\r\n                                                )}\r\n                                                {sysflag.valueTypeName ==\r\n                                                  'Disabled' && (\r\n                                                  <input\r\n                                                    type=\"text\"\r\n                                                    className=\"form-control\"\r\n                                                    required\r\n                                                    name={sysflag.id + ''}\r\n                                                    onChange={(e) =>\r\n                                                      handleflagChange(\r\n                                                        e,\r\n                                                        resp,\r\n                                                        null,\r\n                                                        null\r\n                                                      )\r\n                                                    }\r\n                                                    disabled={true}\r\n                                                    value={sysflag.value}\r\n                                                  />\r\n                                                )}\r\n                                                {sysflag.valueTypeName ==\r\n                                                  'Email' && (\r\n                                                  <input\r\n                                                    type=\"email\"\r\n                                                    className=\"form-control\"\r\n                                                    required\r\n                                                    name={sysflag.id + ''}\r\n                                                    onChange={(e) =>\r\n                                                      handleflagChange(\r\n                                                        e,\r\n                                                        resp,\r\n                                                        null,\r\n                                                        null\r\n                                                      )\r\n                                                    }\r\n                                                    value={sysflag.value}\r\n                                                  />\r\n                                                )}\r\n                                                {sysflag.valueTypeName ==\r\n                                                  'Boolean' && (\r\n                                                  <>\r\n                                                    <Tooltip\r\n                                                      title={\r\n                                                        sysflag.value === '0' ||\r\n                                                        !sysflag.value\r\n                                                          ? 'Inactive'\r\n                                                          : 'Active'\r\n                                                      }\r\n                                                      arrow\r\n                                                    >\r\n                                                      <>\r\n                                                        <Switch\r\n                                                          sx={{\r\n                                                            '& .MuiSwitch-switchBase':\r\n                                                              {\r\n                                                                '& .MuiSwitch-input':\r\n                                                                  {\r\n                                                                    left: '0px'\r\n                                                                  }\r\n                                                              }\r\n                                                          }}\r\n                                                          name={sysflag.id + ''}\r\n                                                          value={sysflag.value}\r\n                                                          checked={\r\n                                                            sysflag.value ===\r\n                                                              '1' ||\r\n                                                            (sysflag.value\r\n                                                              ? sysflag.value ===\r\n                                                                '0'\r\n                                                                ? false\r\n                                                                : true\r\n                                                              : false)\r\n                                                          }\r\n                                                          onChange={(e: any) =>\r\n                                                            checkIsDemoUser(\r\n                                                              () =>\r\n                                                                handleflagChange(\r\n                                                                  e,\r\n                                                                  resp,\r\n                                                                  null,\r\n                                                                  null\r\n                                                                ),\r\n                                                              showSnackBar\r\n                                                            )()\r\n                                                          }\r\n                                                          inputProps={{\r\n                                                            'aria-label':\r\n                                                              'controlled'\r\n                                                          }}\r\n                                                          // disabled={credentail?.isDemoUser}\r\n                                                        />\r\n                                                        {sysflag.id == 41 ? (\r\n                                                          <span>\r\n                                                            (\r\n                                                            <span\r\n                                                              style={{\r\n                                                                fontSize:\r\n                                                                  '11px',\r\n                                                                color: '#ff0000'\r\n                                                              }}\r\n                                                            >\r\n                                                              {' '}\r\n                                                              If the wallet\r\n                                                              feature is\r\n                                                              enabled, you can\r\n                                                              activate 'Reward\r\n                                                              and Earn'\r\n                                                              functionality. If\r\n                                                              the wallet is\r\n                                                              disabled, the\r\n                                                              'Refer and Earn'\r\n                                                              feature will\r\n                                                              automatically be\r\n                                                              disabled as well.\r\n                                                            </span>\r\n                                                            )\r\n                                                          </span>\r\n                                                        ) : (\r\n                                                          ''\r\n                                                        )}\r\n                                                      </>\r\n                                                    </Tooltip>\r\n                                                  </>\r\n                                                )}\r\n                                                {sysflag.valueTypeName ==\r\n                                                  'Password' && (\r\n                                                  <InputGroup>\r\n                                                    <Form.Control\r\n                                                      type={\r\n                                                        showPassword === true\r\n                                                          ? 'text'\r\n                                                          : 'password'\r\n                                                      }\r\n                                                      className=\"form-control\"\r\n                                                      required\r\n                                                      name={sysflag.id + ''}\r\n                                                      onChange={(\r\n                                                        e: ChangeEvent<HTMLInputElement>\r\n                                                      ) =>\r\n                                                        handleflagChange(\r\n                                                          e,\r\n                                                          resp,\r\n                                                          null,\r\n                                                          null\r\n                                                        )\r\n                                                      }\r\n                                                      value={\r\n                                                        credentail?.isDemoUser\r\n                                                          ? '******'\r\n                                                          : sysflag.value\r\n                                                      }\r\n                                                    />\r\n                                                    <InputGroup.Text\r\n                                                      onClick={() =>\r\n                                                        setShowPassword(\r\n                                                          !showPassword\r\n                                                        )\r\n                                                      }\r\n                                                    >\r\n                                                      {showPassword === true ? (\r\n                                                        <VisibilityIcon />\r\n                                                      ) : (\r\n                                                        <VisibilityOffIcon />\r\n                                                      )}\r\n                                                    </InputGroup.Text>\r\n                                                  </InputGroup>\r\n                                                )}\r\n                                                {sysflag.valueTypeName ==\r\n                                                  'Image' && (\r\n                                                  <FormGroup\r\n                                                    style={{\r\n                                                      alignItems: 'center',\r\n                                                      marginBottom: '10px'\r\n                                                    }}\r\n                                                  >\r\n                                                    <input\r\n                                                      style={{\r\n                                                        display: 'none'\r\n                                                      }}\r\n                                                      id={`icon-button-file-${sysflag.id}`}\r\n                                                      type=\"file\"\r\n                                                      accept=\"image/*\"\r\n                                                      name={sysflag.id + ''}\r\n                                                      // value = {userValue.image}\r\n                                                      onChange={(e) => {\r\n                                                        onFileChange(\r\n                                                          e,\r\n                                                          resp,\r\n                                                          null\r\n                                                        );\r\n                                                        handleflagChange(\r\n                                                          e,\r\n                                                          resp,\r\n                                                          null,\r\n                                                          null\r\n                                                        );\r\n                                                      }}\r\n                                                      className=\"upload-button\"\r\n                                                    />\r\n                                                    <label\r\n                                                      htmlFor={`icon-button-file-${sysflag.id}`}\r\n                                                    >\r\n                                                      {sysflag.value ? (\r\n                                                        <img\r\n                                                          src={sysflag.value}\r\n                                                          alt=\"notification Url\"\r\n                                                          style={{\r\n                                                            height: '130px',\r\n                                                            width: 'auto'\r\n                                                            // borderRadius: '50%',\r\n                                                          }}\r\n                                                        />\r\n                                                      ) : (\r\n                                                        <img\r\n                                                          src=\"/dummy.png\"\r\n                                                          alt=\"notification Url\"\r\n                                                          style={{\r\n                                                            height: '130px',\r\n                                                            width: 'auto'\r\n                                                            // borderRadius: '50%',\r\n                                                          }}\r\n                                                        />\r\n                                                      )}\r\n                                                    </label>\r\n                                                  </FormGroup>\r\n                                                )}\r\n                                                {sysflag.valueTypeName ==\r\n                                                  'MultipleDropDownList' && (\r\n                                                  <>\r\n                                                    <FormControl\r\n                                                      sx={{\r\n                                                        width: { lg: '100%' }\r\n                                                      }}\r\n                                                    >\r\n                                                      <Select\r\n                                                        name={sysflag.id + ''}\r\n                                                        id={sysflag.id + ''}\r\n                                                        multiple\r\n                                                        value={sysflag.value}\r\n                                                        onChange={(e: any) =>\r\n                                                          handleflagChange(\r\n                                                            e,\r\n                                                            resp,\r\n                                                            null,\r\n                                                            null\r\n                                                          )\r\n                                                        }\r\n                                                        renderValue={(\r\n                                                          selected\r\n                                                        ) =>\r\n                                                          selected.join(', ')\r\n                                                        }\r\n                                                        MenuProps={MenuProps}\r\n                                                      >\r\n                                                        {sysflag.valueList\r\n                                                          .split(';')\r\n                                                          .map((name) => (\r\n                                                            <MenuItem\r\n                                                              key={name}\r\n                                                              value={name}\r\n                                                            >\r\n                                                              <Checkbox\r\n                                                                checked={\r\n                                                                  sysflag.value.indexOf(\r\n                                                                    name\r\n                                                                  ) > -1\r\n                                                                }\r\n                                                              />\r\n                                                              <ListItemText\r\n                                                                primary={name}\r\n                                                              />\r\n                                                            </MenuItem>\r\n                                                          ))}\r\n                                                      </Select>\r\n                                                    </FormControl>\r\n                                                    {/* // <Form.Select\r\n                                              //   name={sysflag.id + \"\"}\r\n                                              //   value={sysflag.value}\r\n                                              //   onChange={(e: any) =>\r\n                                              //     handleflagChange(\r\n                                              //       e,\r\n                                              //       resp,\r\n                                              //       null\r\n                                              //     )\r\n                                              //   }\r\n                                              // >\r\n                                              //   {sysflag.valueList\r\n                                              //     .split(';')\r\n                                              //     .map((arr: any) => (\r\n                                              //       <option\r\n                                              //         key={arr}\r\n                                              //         value={arr}\r\n                                              //       >\r\n                                              //         {arr}\r\n                                              //       </option>\r\n                                              //     ))}\r\n                                              // </Form.Select> */}\r\n                                                  </>\r\n                                                )}\r\n                                              </>\r\n                                            )}\r\n\r\n                                            <div className=\"mt-3\">\r\n                                              {sysflag.childSystemFlag &&\r\n                                                sysflag.childSystemFlag.map(\r\n                                                  (\r\n                                                    childsysflag: any,\r\n                                                    sIndex: number\r\n                                                  ) => (\r\n                                                    <div\r\n                                                      className=\"mb-3\"\r\n                                                      key={childsysflag.id}\r\n                                                      style={{\r\n                                                        paddingLeft: '20px'\r\n                                                      }}\r\n                                                    >\r\n                                                      {childsysflag.autoRender ==\r\n                                                        1 && (\r\n                                                        <>\r\n                                                          <label className=\"form-label text-capitalize\">\r\n                                                            {\r\n                                                              childsysflag.displayName\r\n                                                            }\r\n                                                          </label>\r\n                                                          {childsysflag.description && (\r\n                                                            <Tooltip\r\n                                                              title={\r\n                                                                childsysflag.description\r\n                                                              }\r\n                                                              arrow\r\n                                                            >\r\n                                                              <InfoIcon\r\n                                                                sx={{\r\n                                                                  'font-size':\r\n                                                                    '16px!important'\r\n                                                                }}\r\n                                                                style={{\r\n                                                                  marginRight:\r\n                                                                    '5px',\r\n                                                                  marginLeft:\r\n                                                                    '5px'\r\n                                                                }}\r\n                                                              />\r\n                                                            </Tooltip>\r\n                                                          )}\r\n                                                          {childsysflag.valueTypeName ==\r\n                                                            'Text' && (\r\n                                                            <>\r\n                                                              <input\r\n                                                                type=\"text\"\r\n                                                                className=\"form-control\"\r\n                                                                required\r\n                                                                name={\r\n                                                                  childsysflag.id +\r\n                                                                  ''\r\n                                                                }\r\n                                                                onChange={(e) =>\r\n                                                                  handleflagChange(\r\n                                                                    e,\r\n                                                                    resp,\r\n                                                                    null,\r\n                                                                    sysflag\r\n                                                                  )\r\n                                                                }\r\n                                                                value={\r\n                                                                  childsysflag.value\r\n                                                                }\r\n                                                              />\r\n                                                            </>\r\n                                                          )}\r\n                                                          {childsysflag.valueTypeName ==\r\n                                                            'Number' && (\r\n                                                            <input\r\n                                                              type=\"number\"\r\n                                                              className=\"form-control\"\r\n                                                              required\r\n                                                              name={\r\n                                                                childsysflag.id +\r\n                                                                ''\r\n                                                              }\r\n                                                              onChange={(e) =>\r\n                                                                handleflagChange(\r\n                                                                  e,\r\n                                                                  resp,\r\n                                                                  null,\r\n                                                                  sysflag\r\n                                                                )\r\n                                                              }\r\n                                                              value={\r\n                                                                childsysflag.value\r\n                                                              }\r\n                                                            />\r\n                                                          )}\r\n                                                          {childsysflag.valueTypeName ==\r\n                                                            'DropDownList' && (\r\n                                                            <Form.Select\r\n                                                              name={\r\n                                                                childsysflag.id +\r\n                                                                ''\r\n                                                              }\r\n                                                              value={\r\n                                                                childsysflag.value\r\n                                                              }\r\n                                                              onChange={(\r\n                                                                e: any\r\n                                                              ) =>\r\n                                                                handleflagChange(\r\n                                                                  e,\r\n                                                                  resp,\r\n                                                                  null,\r\n                                                                  sysflag\r\n                                                                )\r\n                                                              }\r\n                                                            >\r\n                                                              {childsysflag.valueList\r\n                                                                .split(';')\r\n                                                                .map(\r\n                                                                  (\r\n                                                                    arr: any\r\n                                                                  ) => (\r\n                                                                    <option\r\n                                                                      key={arr}\r\n                                                                      value={\r\n                                                                        arr\r\n                                                                      }\r\n                                                                    >\r\n                                                                      {arr}\r\n                                                                    </option>\r\n                                                                  )\r\n                                                                )}\r\n                                                            </Form.Select>\r\n                                                          )}\r\n                                                          {childsysflag.valueTypeName ==\r\n                                                            'Html' && (\r\n                                                            <ReactQuill\r\n                                                              theme=\"snow\"\r\n                                                              value={\r\n                                                                childsysflag.value\r\n                                                              }\r\n                                                              onChange={(e) => {\r\n                                                                handleEditorChange(\r\n                                                                  e,\r\n                                                                  childsysflag.id,\r\n                                                                  resp,\r\n                                                                  null,\r\n                                                                  sysflag\r\n                                                                );\r\n                                                              }}\r\n                                                              modules={modules}\r\n                                                            />\r\n                                                          )}\r\n                                                          {childsysflag.valueTypeName ==\r\n                                                            'Disabled' && (\r\n                                                            <input\r\n                                                              type=\"text\"\r\n                                                              className=\"form-control\"\r\n                                                              required\r\n                                                              name={\r\n                                                                childsysflag.id +\r\n                                                                ''\r\n                                                              }\r\n                                                              onChange={(e) =>\r\n                                                                handleflagChange(\r\n                                                                  e,\r\n                                                                  resp,\r\n                                                                  null,\r\n                                                                  sysflag\r\n                                                                )\r\n                                                              }\r\n                                                              disabled={true}\r\n                                                              value={\r\n                                                                childsysflag.value\r\n                                                              }\r\n                                                            />\r\n                                                          )}\r\n                                                          {childsysflag.valueTypeName ==\r\n                                                            'Email' && (\r\n                                                            <input\r\n                                                              type=\"email\"\r\n                                                              className=\"form-control\"\r\n                                                              required\r\n                                                              name={\r\n                                                                childsysflag.id +\r\n                                                                ''\r\n                                                              }\r\n                                                              onChange={(e) =>\r\n                                                                handleflagChange(\r\n                                                                  e,\r\n                                                                  resp,\r\n                                                                  null,\r\n                                                                  sysflag\r\n                                                                )\r\n                                                              }\r\n                                                              value={\r\n                                                                childsysflag.value\r\n                                                              }\r\n                                                            />\r\n                                                          )}\r\n                                                          {childsysflag.valueTypeName ==\r\n                                                            'Boolean' && (\r\n                                                            <>\r\n                                                              <Tooltip\r\n                                                                title={\r\n                                                                  childsysflag.value ===\r\n                                                                    '0' ||\r\n                                                                  !childsysflag.value\r\n                                                                    ? 'Inactive'\r\n                                                                    : 'Active'\r\n                                                                }\r\n                                                                arrow\r\n                                                              >\r\n                                                                <>\r\n                                                                  <Switch\r\n                                                                    sx={{\r\n                                                                      '& .MuiSwitch-switchBase':\r\n                                                                        {\r\n                                                                          '& .MuiSwitch-input':\r\n                                                                            {\r\n                                                                              left: '0px'\r\n                                                                            }\r\n                                                                        }\r\n                                                                    }}\r\n                                                                    name={\r\n                                                                      childsysflag.id +\r\n                                                                      ''\r\n                                                                    }\r\n                                                                    value={\r\n                                                                      childsysflag.value\r\n                                                                    }\r\n                                                                    checked={\r\n                                                                      childsysflag.value ===\r\n                                                                        '1' ||\r\n                                                                      (childsysflag.value\r\n                                                                        ? childsysflag.value ===\r\n                                                                          '0'\r\n                                                                          ? false\r\n                                                                          : true\r\n                                                                        : false)\r\n                                                                    }\r\n                                                                    onChange={(\r\n                                                                      e: any\r\n                                                                    ) =>\r\n                                                                      handleflagChange(\r\n                                                                        e,\r\n                                                                        resp,\r\n                                                                        null,\r\n                                                                        sysflag\r\n                                                                      )\r\n                                                                    }\r\n                                                                    inputProps={{\r\n                                                                      'aria-label':\r\n                                                                        'controlled'\r\n                                                                    }}\r\n                                                                  />\r\n                                                                  {childsysflag.id ==\r\n                                                                  41 ? (\r\n                                                                    <span>\r\n                                                                      (\r\n                                                                      <span\r\n                                                                        style={{\r\n                                                                          fontSize:\r\n                                                                            '11px',\r\n                                                                          color:\r\n                                                                            '#ff0000'\r\n                                                                        }}\r\n                                                                      >\r\n                                                                        {' '}\r\n                                                                        If the\r\n                                                                        wallet\r\n                                                                        feature\r\n                                                                        is\r\n                                                                        enabled,\r\n                                                                        you can\r\n                                                                        activate\r\n                                                                        'Reward\r\n                                                                        and\r\n                                                                        Earn'\r\n                                                                        functionality.\r\n                                                                        If the\r\n                                                                        wallet\r\n                                                                        is\r\n                                                                        disabled,\r\n                                                                        the\r\n                                                                        'Refer\r\n                                                                        and\r\n                                                                        Earn'\r\n                                                                        feature\r\n                                                                        will\r\n                                                                        automatically\r\n                                                                        be\r\n                                                                        disabled\r\n                                                                        as well.\r\n                                                                      </span>\r\n                                                                      )\r\n                                                                    </span>\r\n                                                                  ) : (\r\n                                                                    ''\r\n                                                                  )}\r\n                                                                </>\r\n                                                              </Tooltip>\r\n                                                            </>\r\n                                                          )}\r\n                                                          {childsysflag.valueTypeName ==\r\n                                                            'Password' && (\r\n                                                            <InputGroup>\r\n                                                              <Form.Control\r\n                                                                type={\r\n                                                                  showPassword ===\r\n                                                                  true\r\n                                                                    ? 'text'\r\n                                                                    : 'password'\r\n                                                                }\r\n                                                                className=\"form-control\"\r\n                                                                required\r\n                                                                name={\r\n                                                                  childsysflag.id +\r\n                                                                  ''\r\n                                                                }\r\n                                                                onChange={(\r\n                                                                  e: ChangeEvent<HTMLInputElement>\r\n                                                                ) =>\r\n                                                                  handleflagChange(\r\n                                                                    e,\r\n                                                                    resp,\r\n                                                                    null,\r\n                                                                    sysflag\r\n                                                                  )\r\n                                                                }\r\n                                                                value={\r\n                                                                  childsysflag.value\r\n                                                                }\r\n                                                              />\r\n                                                              <InputGroup.Text\r\n                                                                onClick={() =>\r\n                                                                  setShowPassword(\r\n                                                                    !showPassword\r\n                                                                  )\r\n                                                                }\r\n                                                              >\r\n                                                                {showPassword ===\r\n                                                                true ? (\r\n                                                                  <VisibilityIcon />\r\n                                                                ) : (\r\n                                                                  <VisibilityOffIcon />\r\n                                                                )}\r\n                                                              </InputGroup.Text>\r\n                                                            </InputGroup>\r\n                                                          )}\r\n                                                          {childsysflag.valueTypeName ==\r\n                                                            'Image' && (\r\n                                                            <FormGroup\r\n                                                              style={{\r\n                                                                alignItems:\r\n                                                                  'center',\r\n                                                                marginBottom:\r\n                                                                  '10px'\r\n                                                              }}\r\n                                                            >\r\n                                                              <input\r\n                                                                style={{\r\n                                                                  display:\r\n                                                                    'none'\r\n                                                                }}\r\n                                                                id={`icon-button-file-${sysflag.id}`}\r\n                                                                type=\"file\"\r\n                                                                accept=\"image/*\"\r\n                                                                name={\r\n                                                                  childsysflag.id +\r\n                                                                  ''\r\n                                                                }\r\n                                                                // value = {userValue.image}\r\n                                                                onChange={(\r\n                                                                  e\r\n                                                                ) => {\r\n                                                                  onFileChange(\r\n                                                                    e,\r\n                                                                    resp,\r\n                                                                    null\r\n                                                                  );\r\n                                                                  handleflagChange(\r\n                                                                    e,\r\n                                                                    resp,\r\n                                                                    null,\r\n                                                                    sysflag\r\n                                                                  );\r\n                                                                }}\r\n                                                                className=\"upload-button\"\r\n                                                              />\r\n                                                              <label\r\n                                                                htmlFor={`icon-button-file-${sysflag.id}`}\r\n                                                              >\r\n                                                                {childsysflag.value ? (\r\n                                                                  <img\r\n                                                                    src={\r\n                                                                      childsysflag.value\r\n                                                                    }\r\n                                                                    alt=\"notification Url\"\r\n                                                                    style={{\r\n                                                                      height:\r\n                                                                        '130px',\r\n                                                                      width:\r\n                                                                        'auto'\r\n                                                                      // borderRadius: '50%',\r\n                                                                    }}\r\n                                                                  />\r\n                                                                ) : (\r\n                                                                  <img\r\n                                                                    src=\"/dummy.png\"\r\n                                                                    alt=\"notification Url\"\r\n                                                                    style={{\r\n                                                                      height:\r\n                                                                        '130px',\r\n                                                                      width:\r\n                                                                        'auto'\r\n                                                                      // borderRadius: '50%',\r\n                                                                    }}\r\n                                                                  />\r\n                                                                )}\r\n                                                              </label>\r\n                                                            </FormGroup>\r\n                                                          )}\r\n                                                          {childsysflag.valueTypeName ==\r\n                                                            'MultipleDropDownList' && (\r\n                                                            <>\r\n                                                              <FormControl\r\n                                                                sx={{\r\n                                                                  width: {\r\n                                                                    lg: '100%'\r\n                                                                  }\r\n                                                                }}\r\n                                                              >\r\n                                                                <Select\r\n                                                                  name={\r\n                                                                    childsysflag.id +\r\n                                                                    ''\r\n                                                                  }\r\n                                                                  id={\r\n                                                                    childsysflag.id +\r\n                                                                    ''\r\n                                                                  }\r\n                                                                  multiple\r\n                                                                  value={\r\n                                                                    childsysflag.value\r\n                                                                  }\r\n                                                                  onChange={(\r\n                                                                    e: any\r\n                                                                  ) =>\r\n                                                                    handleflagChange(\r\n                                                                      e,\r\n                                                                      resp,\r\n                                                                      null,\r\n                                                                      sysflag\r\n                                                                    )\r\n                                                                  }\r\n                                                                  renderValue={(\r\n                                                                    selected\r\n                                                                  ) =>\r\n                                                                    selected.join(\r\n                                                                      ', '\r\n                                                                    )\r\n                                                                  }\r\n                                                                  MenuProps={\r\n                                                                    MenuProps\r\n                                                                  }\r\n                                                                >\r\n                                                                  {childsysflag.valueList\r\n                                                                    .split(';')\r\n                                                                    .map(\r\n                                                                      (\r\n                                                                        name\r\n                                                                      ) => (\r\n                                                                        <MenuItem\r\n                                                                          key={\r\n                                                                            name\r\n                                                                          }\r\n                                                                          value={\r\n                                                                            name\r\n                                                                          }\r\n                                                                        >\r\n                                                                          <Checkbox\r\n                                                                            checked={\r\n                                                                              childsysflag.value.indexOf(\r\n                                                                                name\r\n                                                                              ) >\r\n                                                                              -1\r\n                                                                            }\r\n                                                                          />\r\n                                                                          <ListItemText\r\n                                                                            primary={\r\n                                                                              name\r\n                                                                            }\r\n                                                                          />\r\n                                                                        </MenuItem>\r\n                                                                      )\r\n                                                                    )}\r\n                                                                </Select>\r\n                                                              </FormControl>\r\n                                                            </>\r\n                                                          )}\r\n                                                          {childsysflag.valueTypeId ==\r\n                                                            11 && (\r\n                                                            // <input\r\n                                                            //   type=\"text\"\r\n                                                            //   className=\"form-control\"\r\n                                                            //   required\r\n                                                            //   name={childsysflag.id + \"\"}\r\n                                                            //   onChange={(e) => handleflagChange(e, resp, null, sysflag)}\r\n                                                            //   value={childsysflag.value}\r\n                                                            //   disabled\r\n                                                            // />\r\n                                                            <TextField\r\n                                                              id=\"outlined-multiline-static\"\r\n                                                              label=\"Description\"\r\n                                                              multiline\r\n                                                              fullWidth\r\n                                                              rows={4}\r\n                                                              defaultValue=\"\"\r\n                                                              name={\r\n                                                                sysflag.id + ''\r\n                                                              }\r\n                                                              onChange={(\r\n                                                                e: any\r\n                                                              ) =>\r\n                                                                handleflagChange(\r\n                                                                  e,\r\n                                                                  resp,\r\n                                                                  null,\r\n                                                                  sysflag\r\n                                                                )\r\n                                                              }\r\n                                                              value={\r\n                                                                childsysflag.value\r\n                                                              }\r\n                                                              required={true}\r\n                                                            />\r\n                                                          )}\r\n                                                        </>\r\n                                                      )}\r\n                                                    </div>\r\n                                                  )\r\n                                                )}\r\n                                            </div>\r\n                                          </div>\r\n                                        )\r\n                                      )}\r\n                                    </div>\r\n                                    {resp.group &&\r\n                                      resp.group.length > 0 &&\r\n                                      resp.group.map(\r\n                                        (group: any, gIndex: number) =>\r\n                                          group.systemFlag.length > 0 && (\r\n                                            <div key={group.id}>\r\n                                              <div className=\"mt-3\">\r\n                                                <label className=\"form-label text-capitalize\">\r\n                                                  <b>{group.flagGroupName}</b>\r\n                                                </label>\r\n                                                {group.detail && (\r\n                                                  <Tooltip\r\n                                                    title={group.detail}\r\n                                                    arrow\r\n                                                  >\r\n                                                    <InfoIcon\r\n                                                      sx={{\r\n                                                        'font-size':\r\n                                                          '16px!important'\r\n                                                      }}\r\n                                                      style={{\r\n                                                        marginRight: '5px',\r\n                                                        marginLeft: '5px'\r\n                                                      }}\r\n                                                    />\r\n                                                  </Tooltip>\r\n                                                )}\r\n                                              </div>\r\n                                              <div\r\n                                                style={{\r\n                                                  border: '1px solid #ddd',\r\n                                                  padding: '15px',\r\n                                                  borderRadius: '5px'\r\n                                                }}\r\n                                              >\r\n                                                {group.systemFlag.map(\r\n                                                  (\r\n                                                    sysflag: any,\r\n                                                    sIndex: number\r\n                                                  ) => (\r\n                                                    <div\r\n                                                      className=\"mb-3\"\r\n                                                      key={sysflag.id}\r\n                                                    >\r\n                                                      {sysflag.autoRender ==\r\n                                                        1 && (\r\n                                                        <>\r\n                                                          <label className=\"form-label text-capitalize\">\r\n                                                            {\r\n                                                              sysflag.displayName\r\n                                                            }\r\n                                                          </label>\r\n                                                          {sysflag.description && (\r\n                                                            <Tooltip\r\n                                                              title={\r\n                                                                sysflag.description\r\n                                                              }\r\n                                                              arrow\r\n                                                            >\r\n                                                              <InfoIcon\r\n                                                                sx={{\r\n                                                                  'font-size':\r\n                                                                    '16px!important'\r\n                                                                }}\r\n                                                                style={{\r\n                                                                  marginRight:\r\n                                                                    '5px',\r\n                                                                  marginLeft:\r\n                                                                    '5px'\r\n                                                                }}\r\n                                                              />\r\n                                                            </Tooltip>\r\n                                                          )}\r\n                                                          {sysflag.valueTypeName ==\r\n                                                            'Text' && (\r\n                                                            <input\r\n                                                              type=\"text\"\r\n                                                              className=\"form-control\"\r\n                                                              required\r\n                                                              name={\r\n                                                                sysflag.id + ''\r\n                                                              }\r\n                                                              onChange={(e) =>\r\n                                                                handleflagChange(\r\n                                                                  e,\r\n                                                                  resp,\r\n                                                                  group,\r\n                                                                  null\r\n                                                                )\r\n                                                              }\r\n                                                              value={ credentail?.isDemoUser ? \"******\":\r\n                                                                sysflag.value\r\n                                                              }\r\n                                                            />\r\n                                                          )}\r\n                                                          {sysflag.valueTypeName ==\r\n                                                            'Number' && (\r\n                                                            <input\r\n                                                              type=\"number\"\r\n                                                              className=\"form-control\"\r\n                                                              required\r\n                                                              name={\r\n                                                                sysflag.id + ''\r\n                                                              }\r\n                                                              onChange={(e) =>\r\n                                                                handleflagChange(\r\n                                                                  e,\r\n                                                                  resp,\r\n                                                                  group,\r\n                                                                  null\r\n                                                                )\r\n                                                              }\r\n                                                              value={\r\n                                                                sysflag.value\r\n                                                              }\r\n                                                            />\r\n                                                          )}\r\n                                                          {sysflag.valueTypeName ==\r\n                                                            'DropDownList' && (\r\n                                                            <Form.Select\r\n                                                              name={\r\n                                                                sysflag.id + ''\r\n                                                              }\r\n                                                              value={\r\n                                                                sysflag.value\r\n                                                              }\r\n                                                              onChange={(\r\n                                                                e: any\r\n                                                              ) =>\r\n                                                                handleflagChange(\r\n                                                                  e,\r\n                                                                  resp,\r\n                                                                  group,\r\n                                                                  null\r\n                                                                )\r\n                                                              }\r\n                                                            >\r\n                                                              {sysflag.valueList\r\n                                                                .split(';')\r\n                                                                .map(\r\n                                                                  (\r\n                                                                    arr: any\r\n                                                                  ) => (\r\n                                                                    <option\r\n                                                                      key={arr}\r\n                                                                      value={\r\n                                                                        arr\r\n                                                                      }\r\n                                                                    >\r\n                                                                      {arr}\r\n                                                                    </option>\r\n                                                                  )\r\n                                                                )}\r\n                                                            </Form.Select>\r\n                                                          )}\r\n                                                          {sysflag.valueTypeName ==\r\n                                                            'Html' && (\r\n                                                            <ReactQuill\r\n                                                              theme=\"snow\"\r\n                                                              value={\r\n                                                                sysflag.value\r\n                                                              }\r\n                                                              onChange={(e) => {\r\n                                                                handleEditorChange(\r\n                                                                  e,\r\n                                                                  sysflag.id,\r\n                                                                  resp,\r\n                                                                  group,\r\n                                                                  null\r\n                                                                );\r\n                                                              }}\r\n                                                              modules={modules}\r\n                                                            />\r\n                                                          )}\r\n                                                          {sysflag.valueTypeName ==\r\n                                                            'Disabled' && (\r\n                                                            <input\r\n                                                              type=\"text\"\r\n                                                              className=\"form-control\"\r\n                                                              required\r\n                                                              name={\r\n                                                                sysflag.id + ''\r\n                                                              }\r\n                                                              onChange={(e) =>\r\n                                                                handleflagChange(\r\n                                                                  e,\r\n                                                                  resp,\r\n                                                                  group,\r\n                                                                  null\r\n                                                                )\r\n                                                              }\r\n                                                              value={\r\n                                                                sysflag.value\r\n                                                              }\r\n                                                              disabled\r\n                                                            />\r\n                                                          )}\r\n                                                          {sysflag.valueTypeName ==\r\n                                                            'Email' && (\r\n                                                            <input\r\n                                                              type=\"email\"\r\n                                                              className=\"form-control\"\r\n                                                              required\r\n                                                              name={\r\n                                                                sysflag.id + ''\r\n                                                              }\r\n                                                              onChange={(e) =>\r\n                                                                handleflagChange(\r\n                                                                  e,\r\n                                                                  resp,\r\n                                                                  group,\r\n                                                                  null\r\n                                                                )\r\n                                                              }\r\n                                                              value={\r\n                                                                sysflag.value\r\n                                                              }\r\n                                                            />\r\n                                                          )}\r\n                                                          {sysflag.valueTypeName ==\r\n                                                            'Boolean' && (\r\n                                                            <>\r\n                                                              {/* {sysflag.value === '1' ? ( */}\r\n                                                              <Tooltip\r\n                                                                title={\r\n                                                                  sysflag.value ===\r\n                                                                    '0' ||\r\n                                                                  !sysflag.value\r\n                                                                    ? 'Inactive'\r\n                                                                    : 'Active'\r\n                                                                }\r\n                                                                arrow\r\n                                                              >\r\n                                                                <Switch\r\n                                                                  name={\r\n                                                                    sysflag.id +\r\n                                                                    ''\r\n                                                                  }\r\n                                                                  value={\r\n                                                                    sysflag.value\r\n                                                                  }\r\n                                                                  checked={\r\n                                                                    sysflag.value ===\r\n                                                                      '1' ||\r\n                                                                    (sysflag.value\r\n                                                                      ? sysflag.value ===\r\n                                                                        '0'\r\n                                                                        ? false\r\n                                                                        : true\r\n                                                                      : false)\r\n                                                                  }\r\n                                                                  onChange={(\r\n                                                                    e: any\r\n                                                                  ) =>\r\n                                                                    checkIsDemoUser(\r\n                                                                      () =>\r\n                                                                        handleflagChange(\r\n                                                                          e,\r\n                                                                          resp,\r\n                                                                          group,\r\n                                                                          null\r\n                                                                        ),\r\n                                                                      showSnackBar\r\n                                                                    )()\r\n                                                                  }\r\n                                                                  inputProps={{\r\n                                                                    'aria-label':\r\n                                                                      'controlled'\r\n                                                                  }}\r\n                                                                />\r\n                                                              </Tooltip>\r\n                                                              {/* ) : (\r\n                                                            <Tooltip\r\n                                                              title={sysflag.value === '0' ? 'Inactive' : 'Active'}\r\n                                                              arrow\r\n                                                            >\r\n                                                              <Switch\r\n                                                                name={sysflag.id + \"\"}\r\n                                                                value={sysflag.value}\r\n                                                                // checked={sysflag.value}\r\n                                                                onChange={(e: any) => handleflagChange(e, resp, group)}\r\n                                                                inputProps={{\r\n                                                                  'aria-label': 'controlled'\r\n                                                                }}\r\n                                                              />\r\n                                                            </Tooltip>\r\n                                                          )} */}\r\n                                                            </>\r\n                                                          )}\r\n                                                          {sysflag.valueTypeName ==\r\n                                                            'Password' && (\r\n                                                            <>\r\n                                                              <InputGroup>\r\n                                                                <Form.Control\r\n                                                                  type={\r\n                                                                    showPassword ===\r\n                                                                    true\r\n                                                                      ? 'text'\r\n                                                                      : 'password'\r\n                                                                  }\r\n                                                                  className=\"form-control\"\r\n                                                                  required\r\n                                                                  name={\r\n                                                                    sysflag.id +\r\n                                                                    ''\r\n                                                                  }\r\n                                                                  onChange={(\r\n                                                                    e: ChangeEvent<HTMLInputElement>\r\n                                                                  ) =>\r\n                                                                    handleflagChange(\r\n                                                                      e,\r\n                                                                      resp,\r\n                                                                      group,\r\n                                                                      null\r\n                                                                    )\r\n                                                                  }\r\n                                                                  value={\r\n                                                                    credentail?.isDemoUser\r\n                                                                      ? '******'\r\n                                                                      : sysflag.value\r\n                                                                  }\r\n                                                                />\r\n                                                                <InputGroup.Text\r\n                                                                  onClick={() =>\r\n                                                                    setShowPassword(\r\n                                                                      !showPassword\r\n                                                                    )\r\n                                                                  }\r\n                                                                >\r\n                                                                  {showPassword ===\r\n                                                                  true ? (\r\n                                                                    <VisibilityIcon />\r\n                                                                  ) : (\r\n                                                                    <VisibilityOffIcon />\r\n                                                                  )}\r\n                                                                </InputGroup.Text>\r\n                                                              </InputGroup>\r\n                                                            </>\r\n                                                          )}\r\n\r\n                                                          {sysflag.valueTypeName ==\r\n                                                            'Image' && (\r\n                                                            <FormGroup\r\n                                                              style={{\r\n                                                                alignItems:\r\n                                                                  'center',\r\n                                                                marginBottom:\r\n                                                                  '10px'\r\n                                                              }}\r\n                                                            >\r\n                                                              <input\r\n                                                                style={{\r\n                                                                  display:\r\n                                                                    'none'\r\n                                                                }}\r\n                                                                id={`icon-button-file-${sysflag.id}`}\r\n                                                                type=\"file\"\r\n                                                                accept=\"image/*\"\r\n                                                                name={\r\n                                                                  sysflag.id +\r\n                                                                  ''\r\n                                                                }\r\n                                                                // value = {userValue.image}\r\n                                                                onChange={(\r\n                                                                  e\r\n                                                                ) => {\r\n                                                                  onFileChange(\r\n                                                                    e,\r\n                                                                    resp,\r\n                                                                    group\r\n                                                                  );\r\n                                                                  handleflagChange(\r\n                                                                    e,\r\n                                                                    resp,\r\n                                                                    group,\r\n                                                                    null\r\n                                                                  );\r\n                                                                }}\r\n                                                                className=\"upload-button\"\r\n                                                              />\r\n                                                              <label\r\n                                                                htmlFor={`icon-button-file-${sysflag.id}`}\r\n                                                              >\r\n                                                                {sysflag.value ? (\r\n                                                                  <img\r\n                                                                    src={\r\n                                                                      sysflag.value\r\n                                                                    }\r\n                                                                    alt=\"notification Url\"\r\n                                                                    style={{\r\n                                                                      height:\r\n                                                                        '130px',\r\n                                                                      width:\r\n                                                                        'auto'\r\n                                                                    }}\r\n                                                                  />\r\n                                                                ) : (\r\n                                                                  <img\r\n                                                                    src=\"/dummy.png\"\r\n                                                                    alt=\"notification Url\"\r\n                                                                    style={{\r\n                                                                      height:\r\n                                                                        '130px',\r\n                                                                      width:\r\n                                                                        'auto'\r\n                                                                    }}\r\n                                                                  />\r\n                                                                )}\r\n                                                              </label>\r\n                                                            </FormGroup>\r\n                                                          )}\r\n                                                          {sysflag.valueTypeName ==\r\n                                                            'MultipleDropDownList' && (\r\n                                                            <>\r\n                                                              <FormControl\r\n                                                                sx={{\r\n                                                                  width: {\r\n                                                                    lg: '100%'\r\n                                                                  }\r\n                                                                }}\r\n                                                              >\r\n                                                                <Select\r\n                                                                  id={\r\n                                                                    sysflag.id +\r\n                                                                    ''\r\n                                                                  }\r\n                                                                  name={\r\n                                                                    sysflag.id +\r\n                                                                    ''\r\n                                                                  }\r\n                                                                  multiple\r\n                                                                  value={\r\n                                                                    sysflag.value\r\n                                                                  }\r\n                                                                  onChange={(\r\n                                                                    e: any\r\n                                                                  ) =>\r\n                                                                    handleflagChange(\r\n                                                                      e,\r\n                                                                      resp,\r\n                                                                      group,\r\n                                                                      null\r\n                                                                    )\r\n                                                                  }\r\n                                                                  renderValue={(\r\n                                                                    selected\r\n                                                                  ) =>\r\n                                                                    selected.join(\r\n                                                                      ', '\r\n                                                                    )\r\n                                                                  }\r\n                                                                  MenuProps={\r\n                                                                    MenuProps\r\n                                                                  }\r\n                                                                >\r\n                                                                  {sysflag.valueList\r\n                                                                    .split(';')\r\n                                                                    .map(\r\n                                                                      (\r\n                                                                        name\r\n                                                                      ) => (\r\n                                                                        <MenuItem\r\n                                                                          key={\r\n                                                                            name\r\n                                                                          }\r\n                                                                          value={\r\n                                                                            name\r\n                                                                          }\r\n                                                                        >\r\n                                                                          <Checkbox\r\n                                                                            checked={\r\n                                                                              sysflag.value.indexOf(\r\n                                                                                name\r\n                                                                              ) >\r\n                                                                              -1\r\n                                                                            }\r\n                                                                          />\r\n                                                                          <ListItemText\r\n                                                                            primary={\r\n                                                                              name\r\n                                                                            }\r\n                                                                          />\r\n                                                                        </MenuItem>\r\n                                                                      )\r\n                                                                    )}\r\n                                                                </Select>\r\n                                                              </FormControl>\r\n                                                              {/* <Form.Select\r\n                                                            name={sysflag.id + \"\"}\r\n                                                            value={sysflag.value}\r\n                                                            onChange={(e: any) =>\r\n                                                              handleflagChange(\r\n                                                                e,\r\n                                                                resp,\r\n                                                                group\r\n                                                              )\r\n                                                            }\r\n                                                          >\r\n                                                            {sysflag.valueList\r\n                                                              .split(';')\r\n                                                              .map((arr: any) => (\r\n                                                                <option\r\n                                                                  key={arr}\r\n                                                                  value={arr}\r\n                                                                >\r\n                                                                  {arr}\r\n                                                                </option>\r\n                                                              ))}\r\n                                                          </Form.Select> */}\r\n                                                            </>\r\n                                                          )}\r\n\r\n                                                          {sysflag.valueTypeId ==\r\n                                                            11 && (\r\n                                                            <TextField\r\n                                                              id=\"outlined-multiline-static\"\r\n                                                              label=\"Description\"\r\n                                                              multiline\r\n                                                              fullWidth\r\n                                                              rows={4}\r\n                                                              defaultValue=\"\"\r\n                                                              name={\r\n                                                                sysflag.id + ''\r\n                                                              }\r\n                                                              onChange={(\r\n                                                                e: any\r\n                                                              ) =>\r\n                                                                handleflagChange(\r\n                                                                  e,\r\n                                                                  resp,\r\n                                                                  group,\r\n                                                                  null\r\n                                                                )\r\n                                                              }\r\n                                                              value={\r\n                                                                sysflag.value\r\n                                                              }\r\n                                                              required={true}\r\n                                                            />\r\n                                                            //   <ReactQuill\r\n                                                            //   theme=\"snow\"\r\n                                                            //   value={sysflag.value}\r\n                                                            //   onChange={(e) => { handleEditorChange(e, sysflag.id, resp, group, null) }}\r\n                                                            //   modules={modules}\r\n                                                            // />\r\n                                                          )}\r\n                                                        </>\r\n                                                      )}\r\n\r\n                                                      <div className=\"mt-3\">\r\n                                                        {sysflag.childSystemFlag &&\r\n                                                          sysflag.childSystemFlag.map(\r\n                                                            (\r\n                                                              childsysflag: any,\r\n                                                              sIndex: number\r\n                                                            ) => (\r\n                                                              <div\r\n                                                                className=\"mb-3\"\r\n                                                                key={\r\n                                                                  childsysflag.id\r\n                                                                }\r\n                                                                style={{\r\n                                                                  paddingLeft:\r\n                                                                    '20px'\r\n                                                                }}\r\n                                                              >\r\n                                                                {childsysflag.autoRender ==\r\n                                                                  1 && (\r\n                                                                  <>\r\n                                                                    <label className=\"form-label text-capitalize\">\r\n                                                                      {\r\n                                                                        childsysflag.displayName\r\n                                                                      }\r\n                                                                    </label>\r\n                                                                    {childsysflag.description && (\r\n                                                                      <Tooltip\r\n                                                                        title={\r\n                                                                          childsysflag.description\r\n                                                                        }\r\n                                                                        arrow\r\n                                                                      >\r\n                                                                        <InfoIcon\r\n                                                                          sx={{\r\n                                                                            'font-size':\r\n                                                                              '16px!important'\r\n                                                                          }}\r\n                                                                          style={{\r\n                                                                            marginRight:\r\n                                                                              '5px',\r\n                                                                            marginLeft:\r\n                                                                              '5px'\r\n                                                                          }}\r\n                                                                        />\r\n                                                                      </Tooltip>\r\n                                                                    )}\r\n                                                                    {childsysflag.valueTypeName ==\r\n                                                                      'Text' && (\r\n                                                                      <>\r\n                                                                        <input\r\n                                                                          type=\"text\"\r\n                                                                          className=\"form-control\"\r\n                                                                          required\r\n                                                                          name={\r\n                                                                            childsysflag.id +\r\n                                                                            ''\r\n                                                                          }\r\n                                                                          onChange={(\r\n                                                                            e\r\n                                                                          ) =>\r\n                                                                            handleflagChange(\r\n                                                                              e,\r\n                                                                              resp,\r\n                                                                              group,\r\n                                                                              sysflag\r\n                                                                            )\r\n                                                                          }\r\n                                                                          value={\r\n                                                                            childsysflag.value\r\n                                                                          }\r\n                                                                        />\r\n                                                                      </>\r\n                                                                    )}\r\n                                                                    {childsysflag.valueTypeName ==\r\n                                                                      'Number' && (\r\n                                                                      <input\r\n                                                                        type=\"number\"\r\n                                                                        className=\"form-control\"\r\n                                                                        required\r\n                                                                        name={\r\n                                                                          childsysflag.id +\r\n                                                                          ''\r\n                                                                        }\r\n                                                                        onChange={(\r\n                                                                          e\r\n                                                                        ) =>\r\n                                                                          handleflagChange(\r\n                                                                            e,\r\n                                                                            resp,\r\n                                                                            group,\r\n                                                                            sysflag\r\n                                                                          )\r\n                                                                        }\r\n                                                                        value={\r\n                                                                          childsysflag.value\r\n                                                                        }\r\n                                                                      />\r\n                                                                    )}\r\n                                                                    {childsysflag.valueTypeName ==\r\n                                                                      'DropDownList' && (\r\n                                                                      <Form.Select\r\n                                                                        name={\r\n                                                                          childsysflag.id +\r\n                                                                          ''\r\n                                                                        }\r\n                                                                        value={\r\n                                                                          childsysflag.value\r\n                                                                        }\r\n                                                                        onChange={(\r\n                                                                          e: any\r\n                                                                        ) =>\r\n                                                                          handleflagChange(\r\n                                                                            e,\r\n                                                                            resp,\r\n                                                                            group,\r\n                                                                            sysflag\r\n                                                                          )\r\n                                                                        }\r\n                                                                      >\r\n                                                                        {childsysflag.valueList\r\n                                                                          .split(\r\n                                                                            ';'\r\n                                                                          )\r\n                                                                          .map(\r\n                                                                            (\r\n                                                                              arr: any\r\n                                                                            ) => (\r\n                                                                              <option\r\n                                                                                key={\r\n                                                                                  arr\r\n                                                                                }\r\n                                                                                value={\r\n                                                                                  arr\r\n                                                                                }\r\n                                                                              >\r\n                                                                                {\r\n                                                                                  arr\r\n                                                                                }\r\n                                                                              </option>\r\n                                                                            )\r\n                                                                          )}\r\n                                                                      </Form.Select>\r\n                                                                    )}\r\n                                                                    {childsysflag.valueTypeName ==\r\n                                                                      'Html' && (\r\n                                                                      <ReactQuill\r\n                                                                        theme=\"snow\"\r\n                                                                        value={\r\n                                                                          childsysflag.value\r\n                                                                        }\r\n                                                                        onChange={(\r\n                                                                          e\r\n                                                                        ) => {\r\n                                                                          handleEditorChange(\r\n                                                                            e,\r\n                                                                            childsysflag.id,\r\n                                                                            resp,\r\n                                                                            group,\r\n                                                                            sysflag\r\n                                                                          );\r\n                                                                        }}\r\n                                                                        modules={\r\n                                                                          modules\r\n                                                                        }\r\n                                                                      />\r\n                                                                    )}\r\n                                                                    {childsysflag.valueTypeName ==\r\n                                                                      'Disabled' && (\r\n                                                                      <input\r\n                                                                        type=\"text\"\r\n                                                                        className=\"form-control\"\r\n                                                                        required\r\n                                                                        name={\r\n                                                                          childsysflag.id +\r\n                                                                          ''\r\n                                                                        }\r\n                                                                        onChange={(\r\n                                                                          e\r\n                                                                        ) =>\r\n                                                                          handleflagChange(\r\n                                                                            e,\r\n                                                                            resp,\r\n                                                                            group,\r\n                                                                            sysflag\r\n                                                                          )\r\n                                                                        }\r\n                                                                        disabled={\r\n                                                                          true\r\n                                                                        }\r\n                                                                        value={\r\n                                                                          childsysflag.value\r\n                                                                        }\r\n                                                                      />\r\n                                                                    )}\r\n                                                                    {childsysflag.valueTypeName ==\r\n                                                                      'Email' && (\r\n                                                                      <input\r\n                                                                        type=\"email\"\r\n                                                                        className=\"form-control\"\r\n                                                                        required\r\n                                                                        name={\r\n                                                                          childsysflag.id +\r\n                                                                          ''\r\n                                                                        }\r\n                                                                        onChange={(\r\n                                                                          e\r\n                                                                        ) =>\r\n                                                                          handleflagChange(\r\n                                                                            e,\r\n                                                                            resp,\r\n                                                                            group,\r\n                                                                            sysflag\r\n                                                                          )\r\n                                                                        }\r\n                                                                        value={\r\n                                                                          childsysflag.value\r\n                                                                        }\r\n                                                                      />\r\n                                                                    )}\r\n                                                                    {childsysflag.valueTypeName ==\r\n                                                                      'Boolean' && (\r\n                                                                      <>\r\n                                                                        <Tooltip\r\n                                                                          title={\r\n                                                                            childsysflag.value ===\r\n                                                                              '0' ||\r\n                                                                            !childsysflag.value\r\n                                                                              ? 'Inactive'\r\n                                                                              : 'Active'\r\n                                                                          }\r\n                                                                          arrow\r\n                                                                        >\r\n                                                                          <>\r\n                                                                            <Switch\r\n                                                                              sx={{\r\n                                                                                '& .MuiSwitch-switchBase':\r\n                                                                                  {\r\n                                                                                    '& .MuiSwitch-input':\r\n                                                                                      {\r\n                                                                                        left: '0px'\r\n                                                                                      }\r\n                                                                                  }\r\n                                                                              }}\r\n                                                                              name={\r\n                                                                                childsysflag.id +\r\n                                                                                ''\r\n                                                                              }\r\n                                                                              value={\r\n                                                                                childsysflag.value\r\n                                                                              }\r\n                                                                              checked={\r\n                                                                                childsysflag.value ===\r\n                                                                                  '1' ||\r\n                                                                                (childsysflag.value\r\n                                                                                  ? childsysflag.value ===\r\n                                                                                    '0'\r\n                                                                                    ? false\r\n                                                                                    : true\r\n                                                                                  : false)\r\n                                                                              }\r\n                                                                              onChange={(\r\n                                                                                e: any\r\n                                                                              ) =>\r\n                                                                                checkIsDemoUser(\r\n                                                                                  () =>\r\n                                                                                    handleflagChange(\r\n                                                                                      e,\r\n                                                                                      resp,\r\n                                                                                      group,\r\n                                                                                      sysflag\r\n                                                                                    ),\r\n                                                                                  showSnackBar\r\n                                                                                )()\r\n                                                                              }\r\n                                                                              inputProps={{\r\n                                                                                'aria-label':\r\n                                                                                  'controlled'\r\n                                                                              }}\r\n                                                                            />\r\n                                                                            {childsysflag.id ==\r\n                                                                            41 ? (\r\n                                                                              <span>\r\n                                                                                (\r\n                                                                                <span\r\n                                                                                  style={{\r\n                                                                                    fontSize:\r\n                                                                                      '11px',\r\n                                                                                    color:\r\n                                                                                      '#ff0000'\r\n                                                                                  }}\r\n                                                                                >\r\n                                                                                  {' '}\r\n                                                                                  If\r\n                                                                                  the\r\n                                                                                  wallet\r\n                                                                                  feature\r\n                                                                                  is\r\n                                                                                  enabled,\r\n                                                                                  you\r\n                                                                                  can\r\n                                                                                  activate\r\n                                                                                  'Reward\r\n                                                                                  and\r\n                                                                                  Earn'\r\n                                                                                  functionality.\r\n                                                                                  If\r\n                                                                                  the\r\n                                                                                  wallet\r\n                                                                                  is\r\n                                                                                  disabled,\r\n                                                                                  the\r\n                                                                                  'Refer\r\n                                                                                  and\r\n                                                                                  Earn'\r\n                                                                                  feature\r\n                                                                                  will\r\n                                                                                  automatically\r\n                                                                                  be\r\n                                                                                  disabled\r\n                                                                                  as\r\n                                                                                  well.\r\n                                                                                </span>\r\n\r\n                                                                                )\r\n                                                                              </span>\r\n                                                                            ) : (\r\n                                                                              ''\r\n                                                                            )}\r\n                                                                          </>\r\n                                                                        </Tooltip>\r\n                                                                      </>\r\n                                                                    )}\r\n                                                                    {childsysflag.valueTypeName ==\r\n                                                                      'Password' && (\r\n                                                                      <InputGroup>\r\n                                                                        <Form.Control\r\n                                                                          type={\r\n                                                                            showPassword ===\r\n                                                                            true\r\n                                                                              ? 'text'\r\n                                                                              : 'password'\r\n                                                                          }\r\n                                                                          className=\"form-control\"\r\n                                                                          required\r\n                                                                          name={\r\n                                                                            childsysflag.id +\r\n                                                                            ''\r\n                                                                          }\r\n                                                                          onChange={(\r\n                                                                            e: ChangeEvent<HTMLInputElement>\r\n                                                                          ) =>\r\n                                                                            handleflagChange(\r\n                                                                              e,\r\n                                                                              resp,\r\n                                                                              group,\r\n                                                                              sysflag\r\n                                                                            )\r\n                                                                          }\r\n                                                                          value={\r\n                                                                            childsysflag.value\r\n                                                                          }\r\n                                                                        />\r\n                                                                        <InputGroup.Text\r\n                                                                          onClick={() =>\r\n                                                                            setShowPassword(\r\n                                                                              !showPassword\r\n                                                                            )\r\n                                                                          }\r\n                                                                        >\r\n                                                                          {showPassword ===\r\n                                                                          true ? (\r\n                                                                            <VisibilityIcon />\r\n                                                                          ) : (\r\n                                                                            <VisibilityOffIcon />\r\n                                                                          )}\r\n                                                                        </InputGroup.Text>\r\n                                                                      </InputGroup>\r\n                                                                    )}\r\n                                                                    {childsysflag.valueTypeName ==\r\n                                                                      'Image' && (\r\n                                                                      <FormGroup\r\n                                                                        style={{\r\n                                                                          alignItems:\r\n                                                                            'center',\r\n                                                                          marginBottom:\r\n                                                                            '10px'\r\n                                                                        }}\r\n                                                                      >\r\n                                                                        <input\r\n                                                                          style={{\r\n                                                                            display:\r\n                                                                              'none'\r\n                                                                          }}\r\n                                                                          id={`icon-button-file-${sysflag.id}`}\r\n                                                                          type=\"file\"\r\n                                                                          accept=\"image/*\"\r\n                                                                          name={\r\n                                                                            childsysflag.id +\r\n                                                                            ''\r\n                                                                          }\r\n                                                                          // value = {userValue.image}\r\n                                                                          onChange={(\r\n                                                                            e\r\n                                                                          ) => {\r\n                                                                            onFileChange(\r\n                                                                              e,\r\n                                                                              resp,\r\n                                                                              null\r\n                                                                            );\r\n                                                                            handleflagChange(\r\n                                                                              e,\r\n                                                                              resp,\r\n                                                                              group,\r\n                                                                              sysflag\r\n                                                                            );\r\n                                                                          }}\r\n                                                                          className=\"upload-button\"\r\n                                                                        />\r\n                                                                        <label\r\n                                                                          htmlFor={`icon-button-file-${sysflag.id}`}\r\n                                                                        >\r\n                                                                          {childsysflag.value ? (\r\n                                                                            <img\r\n                                                                              src={\r\n                                                                                childsysflag.value\r\n                                                                              }\r\n                                                                              alt=\"notification Url\"\r\n                                                                              style={{\r\n                                                                                height:\r\n                                                                                  '130px',\r\n                                                                                width:\r\n                                                                                  'auto'\r\n                                                                                // borderRadius: '50%',\r\n                                                                              }}\r\n                                                                            />\r\n                                                                          ) : (\r\n                                                                            <img\r\n                                                                              src=\"/dummy.png\"\r\n                                                                              alt=\"notification Url\"\r\n                                                                              style={{\r\n                                                                                height:\r\n                                                                                  '130px',\r\n                                                                                width:\r\n                                                                                  'auto'\r\n                                                                                // borderRadius: '50%',\r\n                                                                              }}\r\n                                                                            />\r\n                                                                          )}\r\n                                                                        </label>\r\n                                                                      </FormGroup>\r\n                                                                    )}\r\n                                                                    {childsysflag.valueTypeName ==\r\n                                                                      'MultipleDropDownList' && (\r\n                                                                      <>\r\n                                                                        <FormControl\r\n                                                                          sx={{\r\n                                                                            width:\r\n                                                                              {\r\n                                                                                lg: '100%'\r\n                                                                              }\r\n                                                                          }}\r\n                                                                        >\r\n                                                                          <Select\r\n                                                                            name={\r\n                                                                              childsysflag.id +\r\n                                                                              ''\r\n                                                                            }\r\n                                                                            id={\r\n                                                                              childsysflag.id +\r\n                                                                              ''\r\n                                                                            }\r\n                                                                            multiple\r\n                                                                            value={\r\n                                                                              childsysflag.value\r\n                                                                            }\r\n                                                                            onChange={(\r\n                                                                              e: any\r\n                                                                            ) =>\r\n                                                                              handleflagChange(\r\n                                                                                e,\r\n                                                                                resp,\r\n                                                                                group,\r\n                                                                                sysflag\r\n                                                                              )\r\n                                                                            }\r\n                                                                            renderValue={(\r\n                                                                              selected\r\n                                                                            ) =>\r\n                                                                              selected.join(\r\n                                                                                ', '\r\n                                                                              )\r\n                                                                            }\r\n                                                                            MenuProps={\r\n                                                                              MenuProps\r\n                                                                            }\r\n                                                                          >\r\n                                                                            {childsysflag.valueList\r\n                                                                              .split(\r\n                                                                                ';'\r\n                                                                              )\r\n                                                                              .map(\r\n                                                                                (\r\n                                                                                  name\r\n                                                                                ) => (\r\n                                                                                  <MenuItem\r\n                                                                                    key={\r\n                                                                                      name\r\n                                                                                    }\r\n                                                                                    value={\r\n                                                                                      name\r\n                                                                                    }\r\n                                                                                  >\r\n                                                                                    <Checkbox\r\n                                                                                      checked={\r\n                                                                                        childsysflag.value.indexOf(\r\n                                                                                          name\r\n                                                                                        ) >\r\n                                                                                        -1\r\n                                                                                      }\r\n                                                                                    />\r\n                                                                                    <ListItemText\r\n                                                                                      primary={\r\n                                                                                        name\r\n                                                                                      }\r\n                                                                                    />\r\n                                                                                  </MenuItem>\r\n                                                                                )\r\n                                                                              )}\r\n                                                                          </Select>\r\n                                                                        </FormControl>\r\n                                                                      </>\r\n                                                                    )}\r\n                                                                    {childsysflag.valueTypeId ==\r\n                                                                      11 && (\r\n                                                                      // <input\r\n                                                                      //   type=\"text\"\r\n                                                                      //   className=\"form-control\"\r\n                                                                      //   required\r\n                                                                      //   name={childsysflag.id + \"\"}\r\n                                                                      //   onChange={(e) => handleflagChange(e, resp, group, sysflag)}\r\n                                                                      //   value={childsysflag.value}\r\n                                                                      //   disabled\r\n                                                                      // />\r\n                                                                      <TextField\r\n                                                                        id=\"outlined-multiline-static\"\r\n                                                                        label=\"Description\"\r\n                                                                        multiline\r\n                                                                        fullWidth\r\n                                                                        rows={4}\r\n                                                                        defaultValue=\"\"\r\n                                                                        name={\r\n                                                                          childsysflag.id +\r\n                                                                          ''\r\n                                                                        }\r\n                                                                        onChange={(\r\n                                                                          e: any\r\n                                                                        ) =>\r\n                                                                          handleflagChange(\r\n                                                                            e,\r\n                                                                            resp,\r\n                                                                            group,\r\n                                                                            null\r\n                                                                          )\r\n                                                                        }\r\n                                                                        value={\r\n                                                                          childsysflag.value\r\n                                                                        }\r\n                                                                        required={\r\n                                                                          true\r\n                                                                        }\r\n                                                                      />\r\n                                                                    )}\r\n                                                                  </>\r\n                                                                )}\r\n                                                              </div>\r\n                                                            )\r\n                                                          )}\r\n                                                      </div>\r\n                                                    </div>\r\n                                                  )\r\n                                                )}\r\n                                              </div>\r\n                                            </div>\r\n                                          )\r\n                                      )}\r\n                                  </TabPanel>\r\n                                ))}\r\n                              </TableContainer>\r\n                            </>\r\n                          )}\r\n                        </div>\r\n                      </TabContext>\r\n                    </Box>\r\n                    {isEditPermission ? (\r\n                      <Button\r\n                        className=\"mt-3\"\r\n                        sx={{ mt: { xs: 2, md: 0 } }}\r\n                        variant=\"contained\"\r\n                        // disabled={credentail?.isDemoUser}\r\n                        onClick={() =>\r\n                          checkIsDemoUser(handleClick, showSnackBar)()\r\n                        }\r\n                      >\r\n                        Save\r\n                      </Button>\r\n                    ) : (\r\n                      <></>\r\n                    )}\r\n                  </CardContent>\r\n                </Card>\r\n              </Grid>\r\n            </Grid>\r\n          </Container>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Setting;\r\n"],"names":["PageTitle","styled","Box","_ref","theme","spacing","_ref2","children","_jsx","className","Container","maxWidth","props","title","modules","toolbar","container","header","list","MenuProps","PaperProps","style","maxHeight","ITEM_HEIGHT","width","Setting","setList","useState","groupflag","setGroupFlag","value","setValue","showPassword","setShowPassword","isLoading","setIsLoading","credentail","setCredentail","isReadPermission","setIsReadPermission","isWritePermission","setIsWritePermission","isEditPermission","setIsEditPermission","isDeletePermission","setIsDeletePermission","navigate","useNavigate","showSnackBar","SnackbarComponent","useSnackbar","apiUrl","setApiUrl","useEffect","cred","JSON","parse","localStorage","getItem","roleId","ind","pagePermissions","findIndex","c","isAddPermission","getData","loadjson","async","res","fetch","url","json","token","refreshToken","_data","APIservice","httpPost","recordList","length","i","j","group","k","systemFlag","valueTypeId","data","setItem","handleEditorChange","id","flagGroup","childGroup","pSystemFlag","changeFlag","console","log","fGroups","stringify","cInd","sInd","parseInt","childFlags","childSystemFlag","parentFlagValue","autoRender","psind","csInd","handleflagChange","e","target","name","rewardInd","handleClick","nameList","Array","valueList","autoRenderList","isArray","join","push","l","obj","status","toast","success","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","position","POSITION","TOP_RIGHT","clear","error","message","onFileChange","file","files","reader","FileReader","onload","result","toString","readAsDataURL","_jsxs","_Fragment","ToastContainer","top","left","newestOnTop","rtl","pauseOnFocusLoss","Helmet","PageTitleWrapper","py","pl","Grid","justifyContent","alignItems","item","Stack","Breadcrumbs","Link","to","display","color","HomeIcon","Typography","variant","fontWeight","direction","xs","Card","marginBottom","CardContent","sx","typography","TabContext","borderBottom","borderColor","padding","paddingLeft","overflowX","TabList","onChange","handleChange","event","newValue","map","resp","index","Tab","label","flagGroupName","Loader1","TableContainer","TabPanel","sysflag","sIndex","displayName","description","Tooltip","arrow","InfoIcon","marginRight","marginLeft","valueTypeName","type","required","Form","Select","split","arr","ReactQuill","disabled","Switch","checked","checkIsDemoUser","inputProps","fontSize","InputGroup","Control","isDemoUser","Text","onClick","VisibilityIcon","VisibilityOffIcon","FormGroup","accept","htmlFor","src","alt","height","FormControl","lg","multiple","renderValue","selected","MenuItem","Checkbox","indexOf","ListItemText","primary","childsysflag","TextField","multiline","fullWidth","rows","defaultValue","gIndex","detail","border","borderRadius","Button","mt","md"],"sourceRoot":""}