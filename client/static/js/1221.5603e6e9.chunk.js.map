{"version":3,"file":"static/js/1221.5603e6e9.chunk.js","mappings":"wKAIA,MAAMA,GAAYC,EAAAA,EAAAA,IAAOC,EAAAA,EAAPD,EAChBE,IAAA,IAAC,MAAEC,GAAOD,EAAA,MAAK,sBACEC,EAAMC,QAAQ,OAChC,IAmBD,EAZoDC,IAAmB,IAAlB,SAAEC,GAAUD,EAC/D,OACEE,EAAAA,EAAAA,KAACR,EAAS,CAACS,UAAU,uBAAsBF,UACzCC,EAAAA,EAAAA,KAACE,EAAAA,EAAS,CAACC,SAAS,KAAIJ,SAAEA,KAChB,C,4mBCsChB,MAAMK,GAAkBX,EAAAA,EAAAA,IAAOY,EAAAA,EAAPZ,EAAeE,IAAA,IAAC,MAAEC,GAAOD,EAAA,MAAM,CACrD,2BAA4B,CAC1BW,QAASV,EAAMC,QAAQ,IAEzB,2BAA4B,CAC1BS,QAASV,EAAMC,QAAQ,IAEzB,mBAAoB,CAClBU,OAAQ,SAEX,IAQD,SAASC,GAAqBC,GAC5B,MAAM,SAAEV,EAAQ,QAAEW,KAAYC,GAAUF,EAExC,OACEG,EAAAA,EAAAA,MAACC,EAAAA,EAAW,CACVC,GAAI,CAAEC,EAAG,EAAGC,EAAG,EAAGC,SAAU,OAAQC,WAAY,WAC5CP,EAAKZ,SAAA,CAERA,EACAW,GACCV,EAAAA,EAAAA,KAACmB,EAAAA,EAAU,CACT,aAAW,QACXC,QAASV,EACTI,GAAI,CACFO,SAAU,WACVC,MAAO,GACPC,IAAK,GACLC,MAAQ5B,GAAUA,EAAM6B,QAAQC,KAAK,MACrC3B,UAEFC,EAAAA,EAAAA,KAAC2B,EAAAA,EAAS,MAEV,OAGV,CAEA,MAAMC,GAAe,CACnBC,GAAI,EACJC,KAAM,GACNC,WAAY,GAKRC,GAAY,CAChBC,WAAY,CACVC,MAAO,CACLC,UAAWC,IACXC,MAAO,OAw9Bb,SAn9BA,WACE,MAAOC,EAAMC,IAAWC,EAAAA,EAAAA,UAAiB,IAClCC,EAAOC,IAAYF,EAAAA,EAAAA,UAAiB,KACpCG,EAAKC,KAAUJ,EAAAA,EAAAA,UAAiB,KAChCK,GAAaC,IAAkBC,EAAAA,SAAiC,KAChEC,GAAWC,IAAgBF,EAAAA,SAA2B,KACtDG,GAAIC,IAASJ,EAAAA,SAAoBnB,KACjCwB,GAAQC,IAAaN,EAAAA,UAAe,IACpCO,GAASC,KAAcf,EAAAA,EAAAA,WAAS,IAChCgB,GAAWC,KAAgBjB,EAAAA,EAAAA,WAAS,IACpCkB,GAAkBC,KAAqBnB,EAAAA,EAAAA,WAAS,IAChDoB,GAAmBC,KAAwBrB,EAAAA,EAAAA,UAAS,IAC3D,IAAKsB,GAAQC,KAAavB,EAAAA,EAAAA,UAAS,IACnC,MAAOwB,GAAiBC,KAAsBzB,EAAAA,EAAAA,WAAS,IAChD0B,GAAoBC,KAAyB3B,EAAAA,EAAAA,UAAS,IAEvD4B,IAAWC,EAAAA,EAAAA,OAEVC,GAAaC,KAAgB/B,EAAAA,EAAAA,WAAS,IACtCgC,GAAcC,KAAmBjC,EAAAA,EAAAA,UAAS,IACjD,IAAKkC,GAAYC,KAAiBnC,EAAAA,EAAAA,YAElC,MAAOoC,GAAkBC,KAAuBrC,EAAAA,EAAAA,WAAS,IAClDsC,GAAmBC,KAAwBvC,EAAAA,EAAAA,WAAS,IACpDwC,GAAkBC,KAAuBzC,EAAAA,EAAAA,WAAS,IAClD0C,GAAoBC,KAAyB3C,EAAAA,EAAAA,WAAS,IACvD,aAAE4C,GAAY,kBAAEC,KAAsBC,EAAAA,EAAAA,KAE5CvC,EAAAA,WAAgB,KACd,IAAIwC,EAAOC,KAAKC,MAAMC,aAAaC,QAAQ,gBAE3C,GADAhB,GAAcY,GACVA,EACF,GAAmB,GAAfA,EAAKK,OAAa,CACpB,IAAIC,EAAMN,EAAKO,gBAAgBC,WAC5BC,GAAuB,gBAAZA,EAAEC,QAEZJ,GAAO,IACThB,GAAoBU,EAAKO,gBAAgBD,GAAKjB,kBAC9CG,GAAqBQ,EAAKO,gBAAgBD,GAAKK,iBAC/CjB,GAAoBM,EAAKO,gBAAgBD,GAAKb,kBAC9CG,GAAsBI,EAAKO,gBAAgBD,GAAKX,oBAE5CK,EAAKO,gBAAgBD,GAAKjB,kBAAkBuB,KAEpD,MACEA,IAEJ,GACC,IAEH,MAAMA,GAAWC,gBACTC,WACAC,GAAQhE,EAAMG,GACpBY,IAAU,EAAM,EAGZkD,GAAM,IAAIC,OAAO,iBAsDjBC,GAA6BA,KACjCpD,IAAU,EAAM,EAGZqD,GAAmBN,UACvBjD,GAAMvB,IACNyB,IAAU,GACVkB,IAAa,GACbE,GAAgB,IAChBR,IAAmB,GACnBE,GAAsB,IACtBR,IAAkB,GAClBE,GAAqB,GAAG,EA4BpB8C,GAAcA,KAClBpD,IAAW,EAAM,EAqCb8C,GAAkBD,UACtB3C,IAAa,GACb,IACE,MAAMmD,EAAQlB,aAAaC,QAAQ,gBAC7BkB,EAAenB,aAAaC,QAAQ,gBACpCmB,QAAYC,EAAAA,EAAWC,SAC3B,kCACA,CACEC,UAAU,GAEZL,EACAC,GAEEC,GAAqB,KAAdA,EAAII,QACbzD,IAAa,GACbR,GAAa6D,EAAIK,cAEjB1D,IAAa,GACbR,GAAa,IAEjB,CAAE,MAAOmE,GACP3D,IAAa,GACb4D,EAAAA,GAAMD,MAAMA,EAAO,CACjBE,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,EACVhI,MAAO,UACPyB,SAAUgG,EAAAA,GAAMQ,SAASC,WAE7B,GAGIxB,GAAUF,MAAO2B,EAAoBC,KAEzC,IAEE,GADAvE,IAAa,GACTK,GAAQ,CACV,MAAM8C,EAAQlB,aAAaC,QAAQ,gBAC7BkB,EAAenB,aAAaC,QAAQ,gBAC1C,IAAIsC,EAAM,CACRF,WAAYA,EACZC,YAAaA,EACblG,KAAMgC,IAAkB,IAE1B,MAAMgD,QAAYC,EAAAA,EAAWC,SAC3B,oCACAiB,EACArB,EACAC,GAEF/D,GAAegE,EAAIK,YACnBvE,GAAOkE,EAAIoB,aACb,KAAO,CACLzE,IAAa,GACb,MAAMmD,EAAQlB,aAAaC,QAAQ,gBAC7BkB,EAAenB,aAAaC,QAAQ,gBAC1C,IAAIsC,EAAM,CACRF,WAAYA,EACZC,YAAaA,GAEf,MAAMlB,QAAYC,EAAAA,EAAWC,SAC3B,oCACAiB,EACArB,EACAC,GAEF/D,GAAegE,EAAIK,YACnBvE,GAAOkE,EAAIoB,cACPpB,GAAqB,KAAdA,EAAII,OACb7D,IAAU,GACa,KAAdyD,EAAII,QACb9C,GAAS,UACTsB,aAAayC,UACU,KAAdrB,EAAII,QAYU,KAAdJ,EAAII,QAYU,KAAdJ,EAAII,QAYU,KAAdJ,EAAII,UAnCb7D,IAAU,GACVgE,EAAAA,GAAMD,MAAMN,EAAIsB,QAAS,CACvBd,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,EACVhI,MAAO,UACPyB,SAAUgG,EAAAA,GAAMQ,SAASC,aAuC7BrE,IAAa,EACf,CACF,CAAE,MAAO2D,GACP3D,IAAa,GACb4D,EAAAA,GAAMD,MAAMA,EAAO,CACjBE,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,EACVhI,MAAO,UACPyB,SAAUgG,EAAAA,GAAMQ,SAASC,WAE7B,GAGIO,GAAgBjC,UACpB,IAAIkC,EAvPgBC,KACnB,OAADA,QAAC,IAADA,GAAAA,EAAGC,iBACH,IAAIF,GAAO,EAqBX,OApBKpF,GAAGpB,KAKFyE,GAAIkC,KAAKvF,GAAGpB,OACdyC,IAAa,GACbE,GAAgB,IAChB6D,GAAO,IAEP/D,IAAa,GACbE,GAAgB,8BAChB6D,GAAO,IAXT/D,IAAa,GACbE,GAAgB,yBAChB6D,GAAO,GAYJpF,GAAGnB,aACNkC,IAAmB,GACnBE,GAAsB,wBACtBmE,GAAO,GAEFA,CAAI,EAgOAI,CAAaH,GACxB,GAAID,EACF,IACE,GAAIpF,GAAGrB,GAAI,CACT,MAAM+E,EAAQlB,aAAaC,QAAQ,gBAC7BkB,EAAenB,aAAaC,QAAQ,gBAC1C,IAAIgD,EAAM,CACR9G,GAAIqB,GAAGrB,GACPC,KAAMoB,GAAGpB,KACTC,WAAYmB,GAAGnB,YAEjB,MAAM+E,QAAYC,EAAAA,EAAWC,SAC3B,6CACA2B,EACA/B,EACAC,GAEEC,GAAqB,KAAdA,EAAII,QACb7D,IAAU,GACViD,GAAQhE,EAAOG,EAAOA,IACC,KAAdqE,EAAII,QACb9C,GAAS,UACTsB,aAAayC,SACU,KAAdrB,EAAII,QAYU,KAAdJ,EAAII,QAYU,KAAdJ,EAAII,QAYU,KAAdJ,EAAII,QAnCb7D,IAAU,GACVgE,EAAAA,GAAMD,MAAMN,EAAIsB,QAAS,CACvBd,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,EACVhI,MAAO,UACPyB,SAAUgG,EAAAA,GAAMQ,SAASC,aAsCJ,KAAdhB,EAAII,SACbvD,IAAkB,GAClBE,GAAqB,6BAEzB,KAAO,CAEL,MAAM+C,EAAQlB,aAAaC,QAAQ,gBAC7BkB,EAAenB,aAAaC,QAAQ,gBACpCmB,QAAYC,EAAAA,EAAWC,SAC3B,6CACA9D,GACA0D,EACAC,GAEEC,GAAqB,KAAdA,EAAII,QACbZ,GAAQ,EAAG7D,GACXF,EAAQ,GACRc,IAAU,IACa,KAAdyD,EAAII,QACb9C,GAAS,UACTsB,aAAayC,SACU,KAAdrB,EAAII,QAYU,KAAdJ,EAAII,QAYU,KAAdJ,EAAII,QAYU,KAAdJ,EAAII,QAnCb7D,IAAU,GACVgE,EAAAA,GAAMD,MAAMN,EAAIsB,QAAS,CACvBd,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,EACVhI,MAAO,UACPyB,SAAUgG,EAAAA,GAAMQ,SAASC,aAsCJ,KAAdhB,EAAII,SACbvD,IAAkB,GAClBE,GAAqB,6BAEzB,CACF,CAAE,MAAOuD,GACPC,EAAAA,GAAMD,MAAMA,EAAO,CACjBE,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,EACVhI,MAAO,UACPyB,SAAUgG,EAAAA,GAAMQ,SAASC,WAE7B,CACF,EAoBIlI,IAAQgJ,EAAAA,EAAAA,KAEd,OACEhI,EAAAA,EAAAA,MAAAiI,EAAAA,SAAA,CAAA9I,SAAA,EACEC,EAAAA,EAAAA,KAACqF,GAAiB,KAClBrF,EAAAA,EAAAA,KAAC8I,EAAAA,GAAc,CACb5G,MAAO,CAAEX,IAAK,MAAOwH,KAAM,OAC3BzB,UAAW,IACXC,iBAAiB,EACjByB,aAAa,EACbxB,cAAY,EACZyB,KAAK,EACLC,kBAAgB,EAChBxB,WAAS,EACTD,cAAY,KAEdzH,EAAAA,EAAAA,KAACmJ,EAAAA,GAAM,CAAApJ,UACLC,EAAAA,EAAAA,KAAA,SAAAD,SAAO,iBAETC,EAAAA,EAAAA,KAACoJ,EAAAA,EAAgB,CAAArJ,UACfC,EAAAA,EAAAA,KAACN,EAAAA,EAAG,CAACsB,EAAG,EAAEjB,UACRa,EAAAA,EAAAA,MAACyI,EAAAA,GAAI,CAACC,WAAS,EAACC,eAAe,gBAAgBC,WAAW,SAAQzJ,SAAA,EAChEC,EAAAA,EAAAA,KAACqJ,EAAAA,GAAI,CAACI,MAAI,EAAA1J,UACRC,EAAAA,EAAAA,KAAC0J,EAAAA,EAAK,CAACF,WAAW,OAAOD,eAAe,gBAAexJ,UACrDa,EAAAA,EAAAA,MAAC+I,EAAAA,EAAW,CAAC,aAAW,aAAY5J,SAAA,EAClCC,EAAAA,EAAAA,KAAC4J,EAAAA,GAAI,CACHC,GAAG,mBACH3H,MAAO,CAAE4H,QAAS,OAAQtI,MAAO,SAAUzB,UAE3CC,EAAAA,EAAAA,KAAC+J,EAAAA,EAAQ,OAEX/J,EAAAA,EAAAA,KAACgK,EAAAA,EAAU,CACTC,QAAQ,YACRzI,MAAM,UACNN,WAAW,OAAMnB,SAClB,sBAMPC,EAAAA,EAAAA,KAACqJ,EAAAA,GAAI,CAACI,MAAI,EAAA1J,UACRa,EAAAA,EAAAA,MAACyI,EAAAA,GAAI,CAACC,WAAS,EAACzJ,QAAS,IAAIE,SAAA,EAC3BC,EAAAA,EAAAA,KAACqJ,EAAAA,GAAI,CAACI,MAAI,EAAA1J,SACP+E,IACClE,EAAAA,EAAAA,MAAAiI,EAAAA,SAAA,CAAA9I,SAAA,EACEa,EAAAA,EAAAA,MAACsJ,EAAAA,EAAM,CACLjK,UAAU,cACVa,GAAI,CACFqJ,GAAI,CAAEC,GAAI,EAAGC,GAAI,EAAG/J,QAAS,QAASiB,IAAK,OAC3CuI,QAAS,OACTN,WAAY,UAEdS,QAAQ,YACR7I,QAASsF,GACT4D,KAAK,QAAOvK,SAAA,EAEZC,EAAAA,EAAAA,KAACuK,EAAAA,EAAc,CAACtJ,SAAS,UAAU,wBAErCjB,EAAAA,EAAAA,KAACkK,EAAAA,EAAM,CACLjK,UAAU,SACVa,GAAI,CACFqJ,GAAI,CAAEC,GAAI,EAAGC,GAAI,EAAG/J,QAAS,QAASiB,IAAK,OAC3CuI,QAAS,OACTN,WAAY,UAEdS,QAAQ,YACR7I,QAASsF,GACT4D,KAAK,QAAOvK,UAEZC,EAAAA,EAAAA,KAACuK,EAAAA,EAAc,CAACtJ,SAAS,gBAI7BjB,EAAAA,EAAAA,KAAA6I,EAAAA,SAAA,OAGJ7I,EAAAA,EAAAA,KAACqJ,EAAAA,GAAI,CAACI,MAAI,EAAA1J,UACRC,EAAAA,EAAAA,KAACwK,EAAAA,EAAW,CACV1J,GAAI,CAAEqJ,GAAI,CAAEC,GAAI,GAAKC,GAAI,GAAKI,GAAI,GAAKC,GAAI,KAAQ3K,UAEnDC,EAAAA,EAAAA,KAAC2K,EAAAA,EAAS,CACR7I,KAAK,eACL8I,MAAO9G,GACP+G,SAAWtC,GArGXA,KAClBxE,GAAUwE,EAAEuC,OAAOF,OACnB9G,GAASyE,EAAEuC,OAAOF,MAClBtE,GAAQhE,EAAMG,EAAM,EAkGesI,CAAWxC,GAC5B1G,GAAG,iBACHmJ,MAAM,SACNf,QAAQ,WACRK,KAAK,QACLW,WAAY,CACVC,gBACElL,EAAAA,EAAAA,KAACmL,EAAAA,EAAc,CAAC9J,SAAS,QAAOtB,UAC9BC,EAAAA,EAAAA,KAACoL,EAAAA,EAAU,0BAYjCpL,EAAAA,EAAAA,KAACE,EAAAA,EAAS,CAACC,SAAS,KAAIJ,UACtBC,EAAAA,EAAAA,KAACqJ,EAAAA,GAAI,CACHC,WAAS,EACT+B,UAAU,MACV9B,eAAe,SACfC,WAAW,UACX3J,QAAS,EAAEE,UAEXC,EAAAA,EAAAA,KAACqJ,EAAAA,GAAI,CAACI,MAAI,EAACW,GAAI,GAAGrK,UAChBa,EAAAA,EAAAA,MAAAiI,EAAAA,SAAA,CAAA9I,SAAA,EACEC,EAAAA,EAAAA,KAACsL,EAAAA,EAAI,CAACrL,UAAU,gBAAeF,UAC7BC,EAAAA,EAAAA,KAAA,OAAAD,SACGyD,IACCxD,EAAAA,EAAAA,KAACuL,EAAAA,EAAO,CAACtF,MAAM,gBAEfrF,EAAAA,EAAAA,MAAAiI,EAAAA,SAAA,CAAA9I,SAAA,EACEC,EAAAA,EAAAA,KAACwL,EAAAA,EAAO,IACP3I,IAAeA,GAAY4I,OAAS,GACnC7K,EAAAA,EAAAA,MAAAiI,EAAAA,SAAA,CAAA9I,SAAA,EACEC,EAAAA,EAAAA,KAAC0L,EAAAA,EAAc,CAACzL,UAAU,0BAAyBF,UACjDa,EAAAA,EAAAA,MAAC+K,EAAAA,EAAK,CAACC,cAAY,EAAA7L,SAAA,EACjBC,EAAAA,EAAAA,KAAC6L,EAAAA,EAAS,CAAA9L,UACRa,EAAAA,EAAAA,MAACkL,EAAAA,EAAQ,CAAA/L,SAAA,EACPC,EAAAA,EAAAA,KAAC+L,EAAAA,EAAS,CAAAhM,UACRC,EAAAA,EAAAA,KAACgK,EAAAA,EAAU,CACTgC,QAAM,EACN9J,MAAO,CACLjB,SAAU,OACVC,WAAY,OACZ+K,aAAc,QACdlM,SACH,cAIHC,EAAAA,EAAAA,KAAC+L,EAAAA,EAAS,CAAAhM,UACRC,EAAAA,EAAAA,KAACgK,EAAAA,EAAU,CACTgC,QAAM,EACN9J,MAAO,CACLjB,SAAU,OACVC,WAAY,OACZ+K,aAAc,QACdlM,SACH,gBAIHC,EAAAA,EAAAA,KAAC+L,EAAAA,EAAS,CAAAhM,UACRC,EAAAA,EAAAA,KAACgK,EAAAA,EAAU,CACTgC,QAAM,EACN9J,MAAO,CACLjB,SAAU,OACVC,WAAY,OACZ+K,aAAc,QACdlM,SACH,iBAIHC,EAAAA,EAAAA,KAAC+L,EAAAA,EAAS,CAACG,MAAM,QAAOnM,UACtBC,EAAAA,EAAAA,KAACgK,EAAAA,EAAU,CACTgC,QAAM,EACN9J,MAAO,CACLjB,SAAU,OACVC,WAAY,OACZ+K,aAAc,QACdlM,SACH,oBAMPC,EAAAA,EAAAA,KAACmM,EAAAA,EAAS,CAAApM,SACP8C,GAAYuJ,KAAI,CAACC,EAAUC,KAExB1L,EAAAA,EAAAA,MAACkL,EAAAA,EAAQ,CAACS,OAAK,EAAAxM,SAAA,EACbC,EAAAA,EAAAA,KAAC+L,EAAAA,EAAS,CAAAhM,UACRC,EAAAA,EAAAA,KAACgK,EAAAA,EAAU,CACTC,QAAQ,QACR/I,WAAW,OACXM,MAAM,eACNgL,cAAY,EACZR,QAAM,EAAAjM,SAELuC,EAAOG,EAAQ6J,EAAQ,OAG5BtM,EAAAA,EAAAA,KAAC+L,EAAAA,EAAS,CAAAhM,UACRC,EAAAA,EAAAA,KAACgK,EAAAA,EAAU,CACTC,QAAQ,QACR/I,WAAW,OACXM,MAAM,eACNgL,cAAY,EACZR,QAAM,EACNlL,GAAI,CAAE2L,cAAe,cAAe1M,SAEnCsM,EAAIK,kBAGT1M,EAAAA,EAAAA,KAAC+L,EAAAA,EAAS,CAAAhM,UACRC,EAAAA,EAAAA,KAACgK,EAAAA,EAAU,CACTC,QAAQ,QACR/I,WAAW,OACXM,MAAM,eACNgL,cAAY,EACZR,QAAM,EACNlL,GAAI,CAAE2L,cAAe,cAAe1M,SAEnCsM,EAAIvK,UAIT9B,EAAAA,EAAAA,KAAC+L,EAAAA,EAAS,CAACG,MAAM,QAAOnM,SACrBiF,IACCpE,EAAAA,EAAAA,MAAAiI,EAAAA,SAAA,CAAA9I,SAAA,EACEC,EAAAA,EAAAA,KAAC2M,EAAAA,EAAO,CACN1G,MACmB,IAAjBoG,EAAIpF,SACA,WACA,SAEN2F,OAAK,EAAA7M,UAELC,EAAAA,EAAAA,KAAC6M,EAAAA,EACC,CACAC,QACmB,IAAjBT,EAAIpF,SAIN7F,QAAUmH,IACRwE,EAAAA,EAAAA,IACE,IA5lB7B3G,OAAOvE,EAAYqF,KAKtC/D,GAJU,CACRtB,GAAIA,EACJqF,OAAQA,IAGV3D,IAAW,EAAK,EAulBkCyJ,CACEX,EAAIxK,GACJwK,EAAIpF,WAER7B,GANF2H,GASFE,WAAY,CACV,aAAc,mBAIpBjN,EAAAA,EAAAA,KAAC2M,EAAAA,EAAO,CAAC1G,MAAM,OAAO2G,OAAK,EAAA7M,UACzBC,EAAAA,EAAAA,KAACmB,EAAAA,EACC,CACAL,GAAI,CACF,UAAW,CACToM,WACEtN,GAAMuN,OAAO/F,MAAMgG,SAEvB5L,MACE5B,GAAM6B,QAAQ4L,QAAQC,MAE1B9L,MAAM,UACN8I,KAAK,QACLlJ,QAAUmH,IACRgF,OAvoBrBC,EAwoBuBnB,EAAIxK,GAxoBf4L,EAyoBWpB,EAAIvK,KAzoBHC,EA0oBDsK,EAAItK,WApoBpDoB,GALU,CACRtB,GAAI2L,EACJ1L,KAAM2L,EACN1L,WAAYA,IAGdsB,IAAU,GACVkB,IAAa,GACbE,GAAgB,IAChBR,IAAmB,GACnBE,GAAsB,IACtBR,IAAkB,QAClBE,GAAqB,IAbG0J,IAACC,EAAYC,EAAY1L,CA4oBJ,EAAAhC,UAEDC,EAAAA,EAAAA,KAAC0N,EAAAA,EAAe,CAACzM,SAAS,kBAKhCjB,EAAAA,EAAAA,KAAA6I,EAAAA,SAAA,QAhGewD,EAAIxK,cAyGnC7B,EAAAA,EAAAA,KAACN,EAAAA,EAAG,CAACsB,EAAG,EAAEjB,UACRC,EAAAA,EAAAA,KAAC2N,EAAAA,EAAe,CACdC,UAAU,MACVC,MAAOlL,EACPmL,aA5SHC,CAACC,EAAYC,KACpC1L,EAAQ0L,GACR3H,GAAQ2H,EAAUxL,EAAOA,EAAM,EA2SLyL,oBAxSDF,IACzBtL,EAASyL,SAASH,EAAMlD,OAAOF,QAC/BrI,EAAQ,GACR+D,GAAQ,EAAG6H,SAASH,EAAMlD,OAAOF,OAAO,EAsSdtI,KAAMA,EACN8L,YAAa3L,EACb4L,mBAAoB,CAAC,GAAI,GAAI,GAAI,YAKvCrO,EAAAA,EAAAA,KAACsO,EAAAA,EAAK,CACJxN,GAAI,CACFgJ,QAAS,OACTP,eAAgB,SAChBC,WAAY,SACZ+E,UAAW,SACXC,cAAe,SACfC,UAAW,QAEbxO,UAAU,gBAAeF,UAEzBC,EAAAA,EAAAA,KAACgK,EAAAA,EAAU,CAACC,QAAQ,KAAKyE,WAAS,EAAA3O,SAAC,6BAS/CC,EAAAA,EAAAA,KAAA,OAAAD,UACEa,EAAAA,EAAAA,MAACP,EAAAA,EAAM,CACLsO,KAAMrL,GACN5C,QAASiG,GACTiI,WAAS,EACTzO,SAAS,KAAIJ,SAAA,EAEbC,EAAAA,EAAAA,KAACa,EAAAA,EAAW,CACVC,GAAI,CAAEC,EAAG,EAAGC,EAAG,EAAGC,SAAU,OAAQC,WAAY,UAAWnB,SAE5C,IAAdmD,GAAGgE,OAAe,WAAa,YAElClH,EAAAA,EAAAA,KAAC6O,EAAAA,EAAa,CAAA9O,UACZC,EAAAA,EAAAA,KAAC8O,EAAAA,EAAiB,CAChB5M,MAAO,CAAEjB,SAAU,OAAQ8N,cAAe,aAAchP,SAEzC,IAAdmD,GAAGgE,OACA,mCACA,0CAGRtG,EAAAA,EAAAA,MAACoO,EAAAA,EAAa,CAAAjP,SAAA,EACZC,EAAAA,EAAAA,KAACkK,EAAAA,EAAM,CACL9I,QAASuF,GACTsD,QAAQ,WACR/H,MAAO,CAAE+M,YAAa,QAASlP,SAChC,YAGDC,EAAAA,EAAAA,KAACkK,EAAAA,EAAM,CACLgF,SAAoB,OAAVxK,SAAU,IAAVA,QAAU,EAAVA,GAAYyK,YACtB/N,QA/rBMgF,UACxB,MAAMQ,EAAQlB,aAAaC,QAAQ,gBAC7BkB,EAAenB,aAAaC,QAAQ,gBAC1C,IAAIsC,EAAM,CACRpG,GAAIqB,GAAGrB,UAESkF,EAAAA,EAAWC,SAC3B,+CACAiB,EACArB,EACAC,GAEFtD,IAAW,GACX+C,GAAQhE,EAAOG,EAAOA,EAAM,EAmrBVwH,QAAQ,WACR/H,MAAO,CAAE+M,YAAa,QAASlP,SAChC,iBAOPa,EAAAA,EAAAA,MAAA,OAAAb,SAAA,EACEa,EAAAA,EAAAA,MAACR,EAAe,CACduO,KAAMvL,GACN1C,QAAS+F,GACTxE,WAAY,CAAEnB,GAAI,CAAEP,OAAQ,QAC5BqO,WAAS,EACTzO,SAAS,KAAIJ,SAAA,EAEbC,EAAAA,EAAAA,KAACQ,GAAoB,CACnBqB,GAAG,0BACHnB,QAAS+F,GAA2B1G,SAEnCmD,GAAGrB,GAAK,iBAAmB,mBAE9BjB,EAAAA,EAAAA,MAACiO,EAAAA,EAAa,CAACO,UAAQ,EAAArP,SAAA,EACrBa,EAAAA,EAAAA,MAAC4J,EAAAA,EAAW,CAAC1J,GAAI,CAAEuB,MAAO,CAAEoI,GAAI,SAAW1K,SAAA,EACzCC,EAAAA,EAAAA,KAACqP,EAAAA,EAAU,CAACxN,GAAG,2BAA0B9B,SAAC,gBAG1CC,EAAAA,EAAAA,KAACsP,EAAAA,EAAM,CACLC,QAAQ,2BACR1N,GAAG,qBACH2N,UAAU,EACV1N,KAAK,aACL8I,MAAO1H,GAAGnB,YAAc,GACxB8I,SAAWtC,IAxsBXA,KACpB,MAAM,KAAEzG,EAAI,MAAE8I,GAAUrC,EAAEuC,OAC1B3H,GAAM,IACDD,GACH,CAACpB,GAAO8I,GACR,EAosBoB6E,CAAalH,GApzBX8D,KACxB,MAAM,KAAEvK,EAAI,MAAE8I,GAAUyB,EAAIvB,OACxBF,GACF3G,IAAmB,GACnBE,GAAsB,MAEtBF,IAAmB,GACnBE,GAAsB,wBACxB,EA6yBsBuL,CAAiBnH,EAAE,EAErByC,MAAM,WACNhJ,UAAWA,GACX2N,UAAU,EAAK5P,SAEdiD,GAAUoJ,KAAKC,IACdrM,EAAAA,EAAAA,KAAC4P,EAAAA,EAAQ,CAAchF,MAAOyB,EAAIxK,GAAG9B,SAClCsM,EAAIvK,MADQuK,EAAIxK,YAMzB7B,EAAAA,EAAAA,KAAC6P,EAAAA,EAAc,CAAC3N,MAAO,CAAEV,MAAO,MAAOjB,OAAQ,QAASR,SACrDiE,IAAmBE,MAEtBlE,EAAAA,EAAAA,KAAC2K,EAAAA,EAAS,CACRmF,WAAS,EACTC,OAAO,QACPlO,GAAG,OACHmJ,MAAM,YACNgF,KAAK,OACLpB,WAAS,EACT3E,QAAQ,WACRnI,KAAK,OACL8I,MAAO1H,GAAGpB,KACV+I,SAAWwB,IAzuBJA,KACzB,MAAM,KAAEvK,EAAI,MAAE8I,GAAUyB,EAAIvB,OAC5B3H,GAAM,IAAKD,GAAI,CAACpB,GAAO8I,GAAQ,EAwuBXqF,CAAkB5D,GAh2BlBA,KACpB,MAAM,KAAEvK,EAAI,MAAE8I,GAAUyB,EAAIvB,OACxBF,EACErE,GAAIkC,KAAK4D,EAAIvB,OAAOF,QACtBrG,IAAa,GACbE,GAAgB,MAEhBF,IAAa,GACbE,GAAgB,gCAGlBF,IAAa,GACbE,GAAgB,yBAClB,EAo1BoByL,CAAa7D,EAAI,EAEnBsD,UAAU,KAEZ3P,EAAAA,EAAAA,KAAC6P,EAAAA,EAAc,CAAC3N,MAAO,CAAEV,MAAO,MAAOjB,OAAQ,QAASR,SACrDuE,IAAeE,SAGpB5D,EAAAA,EAAAA,MAAClB,EAAAA,EAAG,CACFoB,GAAI,CACFgJ,QAAS,OACTP,eAAgB,gBAChBvI,EAAG,OACHjB,SAAA,EAEFC,EAAAA,EAAAA,KAAC6P,EAAAA,EAAc,CACb3N,MAAO,CACLV,MAAO,MACPjB,OAAQ,OACRwP,OAAQ,OACRzP,QAAS,WACTP,SAED2D,IAAoBE,MAEvBhD,EAAAA,EAAAA,MAACoJ,EAAAA,EAAU,CAAAjK,SAAA,EACTC,EAAAA,EAAAA,KAACkK,EAAAA,EAAM,CACL9I,QAASqF,GACTwD,QAAQ,WACR/H,MAAO,CAAE+M,YAAa,QAASlP,SAChC,YAGDC,EAAAA,EAAAA,KAACkK,EAAAA,EACC,CACA9I,QAASA,KACP2L,EAAAA,EAAAA,GAAgB1E,GAAejD,GAA/B2H,GAEF9C,QAAQ,WACR/H,MAAO,CAAE+M,YAAa,QAASlP,SAChC,mBAMPC,EAAAA,EAAAA,KAACqF,GAAiB,kBASlC,C,2DChkCA,MAaA,EAbiB5E,IACf,MAAM,MAAEwF,GAAUxF,EAClB,OAKET,EAAAA,EAAAA,KAAA,OAAKC,UAAU,oBAAmBF,UAChCC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,qBACX,C,sBCbNkQ,EAAyBC,EAAQ,OAIrCC,EAAQ,OAAU,EAClB,IAAIC,EAAiBH,EAAuBC,EAAQ,QAChDG,EAAcH,EAAQ,OACtBI,GAAW,EAAIF,EAAeG,UAAuB,EAAIF,EAAYG,KAAK,OAAQ,CACpFC,EAAG,+OACD,UACJN,EAAQ,EAAUG,C,qJCXX,SAASI,EAAyBC,GACvC,OAAOC,EAAAA,EAAAA,IAAqB,eAAgBD,EAC9C,EACyBE,EAAAA,EAAAA,GAAuB,eAAgB,CAAC,S,eCDjE,MAAMC,EAAY,CAAC,YAAa,aAmB1BC,GAAgBxR,EAAAA,EAAAA,IAAO,QAAS,CACpCqC,KAAM,eACN+O,KAAM,OACNK,kBAAmBA,CAACzQ,EAAO0Q,IAAWA,EAAOC,MAHzB3R,CAInB,CACDqK,QAAS,uBAELuH,EAAY,CAChBpH,QAAS,QAELqH,EAAmB,QAqDzB,EApD+BvO,EAAAA,YAAiB,SAAmBwO,EAASC,GAC1E,MAAM/Q,GAAQgR,EAAAA,EAAAA,GAAgB,CAC5BhR,MAAO8Q,EACPzP,KAAM,kBAEF,UACF7B,EAAS,UACT2N,EAAY0D,GACV7Q,EACJE,GAAQ+Q,EAAAA,EAAAA,GAA8BjR,EAAOuQ,GACzCW,GAAaC,EAAAA,EAAAA,GAAS,CAAC,EAAGnR,EAAO,CACrCmN,cAEIiE,EAjCkBF,KACxB,MAAM,QACJE,GACEF,EAIJ,OAAOG,EAAAA,EAAAA,GAHO,CACZV,KAAM,CAAC,SAEoBR,EAA0BiB,EAAQ,EA0B/CE,CAAkBJ,GAClC,OAAoB3R,EAAAA,EAAAA,KAAKgS,EAAAA,EAAiBC,SAAU,CAClDrH,MAAOyG,EACPtR,UAAuBC,EAAAA,EAAAA,KAAKiR,GAAeW,EAAAA,EAAAA,GAAS,CAClDM,GAAItE,EACJ3N,WAAWkS,EAAAA,EAAAA,GAAKN,EAAQT,KAAMnR,GAC9BuR,IAAKA,EACLY,KAAMxE,IAAc0D,EAAmB,KAAO,WAC9CK,WAAYA,GACXhR,KAEP,G,qJCxDO,SAAS0R,EAAqBxB,GACnC,OAAOC,EAAAA,EAAAA,IAAqB,WAAYD,EAC1C,EACqBE,EAAAA,EAAAA,GAAuB,WAAY,CAAC,OAAQ,iB,eCDjE,MAAMC,EAAY,CAAC,YAAa,YAAa,UAAW,OAAQ,gBAoB1DsB,GAAY7S,EAAAA,EAAAA,IAAO,QAAS,CAChCqC,KAAM,WACN+O,KAAM,OACNK,kBAAmBA,CAACzQ,EAAO0Q,KACzB,MAAM,WACJQ,GACElR,EACJ,MAAO,CAAC0Q,EAAOC,KAAMO,EAAW/F,cAAgBuF,EAAOvF,aAAa,GAPtDnM,EASfE,IAAA,IAAC,MACFC,EAAK,WACL+R,GACDhS,EAAA,OAAKiS,EAAAA,EAAAA,GAAS,CACb9H,QAAS,QACTzH,MAAO,OACPkQ,eAAgB,WAChBC,cAAe,EACf,aAAaZ,EAAAA,EAAAA,GAAS,CAAC,EAAGhS,EAAM6S,WAAWC,MAAO,CAChDpS,QAASV,EAAMC,QAAQ,GACvB2B,OAAQ5B,EAAM+S,MAAQ/S,GAAO6B,QAAQmR,KAAKC,UAC1CtE,UAAW,OACXuE,YAAa,YAEdnB,EAAW/F,cAAgB,CAC5B2G,eAAgB,YAChB,IACIjB,EAAmB,QAiFzB,EAhF2BvO,EAAAA,YAAiB,SAAewO,EAASC,GAClE,MAAM/Q,GAAQgR,EAAAA,EAAAA,GAAgB,CAC5BhR,MAAO8Q,EACPzP,KAAM,cAEF,UACF7B,EAAS,UACT2N,EAAY0D,EAAgB,QAC5BhR,EAAU,SAAQ,KAClBgK,EAAO,SAAQ,aACfsB,GAAe,GACbnL,EACJE,GAAQ+Q,EAAAA,EAAAA,GAA8BjR,EAAOuQ,GACzCW,GAAaC,EAAAA,EAAAA,GAAS,CAAC,EAAGnR,EAAO,CACrCmN,YACAtN,UACAgK,OACAsB,iBAEIiG,EAxDkBF,KACxB,MAAM,QACJE,EAAO,aACPjG,GACE+F,EACEoB,EAAQ,CACZ3B,KAAM,CAAC,OAAQxF,GAAgB,iBAEjC,OAAOkG,EAAAA,EAAAA,GAAeiB,EAAOV,EAAsBR,EAAQ,EAgD3CE,CAAkBJ,GAC5BqB,EAAQjQ,EAAAA,SAAc,KAAM,CAChCzC,UACAgK,OACAsB,kBACE,CAACtL,EAASgK,EAAMsB,IACpB,OAAoB5L,EAAAA,EAAAA,KAAKiT,EAAAA,EAAahB,SAAU,CAC9CrH,MAAOoI,EACPjT,UAAuBC,EAAAA,EAAAA,KAAKsS,GAAWV,EAAAA,EAAAA,GAAS,CAC9CM,GAAItE,EACJwE,KAAMxE,IAAc0D,EAAmB,KAAO,QAC9CE,IAAKA,EACLvR,WAAWkS,EAAAA,EAAAA,GAAKN,EAAQT,KAAMnR,GAC9B0R,WAAYA,GACXhR,KAEP,G","sources":["components/PageTitleWrapper/index.tsx","content/Community/Community.tsx","content/Loader.tsx","../node_modules/@mui/icons-material/Search.js","../node_modules/@mui/material/TableHead/tableHeadClasses.js","../node_modules/@mui/material/TableHead/TableHead.js","../node_modules/@mui/material/Table/tableClasses.js","../node_modules/@mui/material/Table/Table.js"],"sourcesContent":["import { FC, ReactNode } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Box, Container, styled } from '@mui/material';\r\n\r\nconst PageTitle = styled(Box)(\r\n  ({ theme }) => `\r\n        padding: ${theme.spacing(1)};\r\n`\r\n);\r\n\r\ninterface PageTitleWrapperProps {\r\n  children?: ReactNode;\r\n}\r\n\r\nconst PageTitleWrapper: FC<PageTitleWrapperProps> = ({ children }) => {\r\n  return (\r\n    <PageTitle className=\"MuiPageTitle-wrapper\">\r\n      <Container maxWidth=\"lg\">{children}</Container>\r\n    </PageTitle>\r\n  );\r\n};\r\n\r\nPageTitleWrapper.propTypes = {\r\n  children: PropTypes.node.isRequired\r\n};\r\n\r\nexport default PageTitleWrapper;\r\n","import { Helmet } from 'react-helmet-async';\r\nimport PageTitleWrapper from '../../components/PageTitleWrapper';\r\nimport {\r\n  Grid,\r\n  Container,\r\n  Box,\r\n  Breadcrumbs,\r\n  Stack,\r\n  Typography,\r\n  Button,\r\n  Card,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n  Divider,\r\n  FormHelperText,\r\n  IconButton,\r\n  Switch,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  TextField,\r\n  Tooltip,\r\n  useTheme,\r\n  styled,\r\n  FormControl,\r\n  InputAdornment,\r\n  Paper,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem\r\n} from '@mui/material';\r\nimport HomeIcon from '@mui/icons-material/Home';\r\nimport EditTwoToneIcon from '@mui/icons-material/EditTwoTone';\r\nimport AddTwoToneIcon from '@mui/icons-material/AddTwoTone';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport Footer from 'src/components/Footer';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport Loader1 from 'src/content/Loader';\r\nimport React, { useState, ChangeEvent } from 'react';\r\nimport APIservice from 'src/utils/APIservice';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport '../smallScreen.css';\r\nimport { Religion } from 'src/models/religion';\r\nimport { Community as CommunityModel } from 'src/models/community';\r\nimport checkIsDemoUser from 'src/utils/IsDemoUserCheck';\r\nimport { useSnackbar } from '../useSnackbar';\r\n\r\nconst BootstrapDialog = styled(Dialog)(({ theme }) => ({\r\n  '& .MuiDialogContent-root': {\r\n    padding: theme.spacing(2)\r\n  },\r\n  '& .MuiDialogActions-root': {\r\n    padding: theme.spacing(1)\r\n  },\r\n  '& .MuiPaper-root': {\r\n    height: '350px'\r\n  }\r\n}));\r\n\r\nexport interface DialogTitleProps {\r\n  id: string;\r\n  children?: React.ReactNode;\r\n  onClose: () => void;\r\n}\r\n\r\nfunction BootstrapDialogTitle(props: DialogTitleProps) {\r\n  const { children, onClose, ...other } = props;\r\n\r\n  return (\r\n    <DialogTitle\r\n      sx={{ m: 0, p: 2, fontSize: '18px', fontWeight: 'bold' }}\r\n      {...other}\r\n    >\r\n      {children}\r\n      {onClose ? (\r\n        <IconButton\r\n          aria-label=\"close\"\r\n          onClick={onClose}\r\n          sx={{\r\n            position: 'absolute',\r\n            right: 13,\r\n            top: 13,\r\n            color: (theme) => theme.palette.grey[500]\r\n          }}\r\n        >\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </DialogTitle>\r\n  );\r\n}\r\n\r\nconst initialState = {\r\n  id: 0,\r\n  name: '',\r\n  religionId: 0\r\n};\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n      width: 250\r\n    }\r\n  }\r\n};\r\n\r\nfunction Community() {\r\n  const [page, setPage] = useState<number>(0);\r\n  const [limit, setLimit] = useState<number>(10);\r\n  const [row, setRow] = useState<number>(10);\r\n  const [communities, setCommunities] = React.useState<CommunityModel[]>([]);\r\n  const [religions, setReligions] = React.useState<Religion[]>([]);\r\n  const [v1, setV1] = React.useState<any>(initialState);\r\n  const [isOpen, setIsOpen] = React.useState(false);\r\n  const [ischeck, setIsCheck] = useState(false);\r\n  const [isloading, setIsLoading] = useState(false);\r\n  const [isCommunityError, setCommunityError] = useState(false);\r\n  const [communityErrorMsg, setCommunityErrorMsg] = useState('');\r\n  let [search, setSearch] = useState('');\r\n  const [isReligionError, setIsReligionError] = useState(false);\r\n  const [isReligionErrorMsg, setIsReligionErrorMsg] = useState('');\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const [isNameError, setNameError] = useState(false);\r\n  const [NameErrorMsg, setNameErrorMsg] = useState('');\r\n  let [credentail, setCredentail] = useState<any>();\r\n\r\n  const [isReadPermission, setIsReadPermission] = useState(true);\r\n  const [isWritePermission, setIsWritePermission] = useState(true);\r\n  const [isEditPermission, setIsEditPermission] = useState(true);\r\n  const [isDeletePermission, setIsDeletePermission] = useState(true);\r\n  const { showSnackBar, SnackbarComponent } = useSnackbar();\r\n\r\n  React.useEffect(() => {\r\n    let cred = JSON.parse(localStorage.getItem('Credentials'));\r\n    setCredentail(cred);\r\n    if (cred) {\r\n      if (cred.roleId != 1) {\r\n        let ind = cred.pagePermissions.findIndex(\r\n          (c: any) => c.title === 'Block Users'\r\n        );\r\n        if (ind >= 0) {\r\n          setIsReadPermission(cred.pagePermissions[ind].isReadPermission);\r\n          setIsWritePermission(cred.pagePermissions[ind].isAddPermission);\r\n          setIsEditPermission(cred.pagePermissions[ind].isEditPermission);\r\n          setIsDeletePermission(cred.pagePermissions[ind].isDeletePermission);\r\n\r\n          if (cred.pagePermissions[ind].isReadPermission) loadData();\r\n        }\r\n      } else {\r\n        loadData();\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  const loadData = async () => {\r\n    await getReligionData();\r\n    await getdata(page, limit);\r\n    setIsOpen(false);\r\n  };\r\n\r\n  const reg = new RegExp(/^[a-zA-Z_ ]+$/);\r\n  const validateName = (arr) => {\r\n    const { name, value } = arr.target;\r\n    if (value) {\r\n      if (reg.test(arr.target.value)) {\r\n        setNameError(false);\r\n        setNameErrorMsg('');\r\n      } else {\r\n        setNameError(true);\r\n        setNameErrorMsg('Alphabet and space allowed');\r\n      }\r\n    } else {\r\n      setNameError(true);\r\n      setNameErrorMsg('Community is required');\r\n    }\r\n  };\r\n\r\n  const validateReligion = (arr) => {\r\n    const { name, value } = arr.target;\r\n    if (value) {\r\n      setIsReligionError(false);\r\n      setIsReligionErrorMsg('');\r\n    } else {\r\n      setIsReligionError(true);\r\n      setIsReligionErrorMsg('Religion is required');\r\n    }\r\n  };\r\n\r\n  const validateForm = (e: any) => {\r\n    e?.preventDefault();\r\n    var flag = true;\r\n    if (!v1.name) {\r\n      setNameError(true);\r\n      setNameErrorMsg('Community is required');\r\n      flag = false;\r\n    } else {\r\n      if (reg.test(v1.name)) {\r\n        setNameError(false);\r\n        setNameErrorMsg('');\r\n        flag = true;\r\n      } else {\r\n        setNameError(true);\r\n        setNameErrorMsg('Alphabet and space allowed');\r\n        flag = false;\r\n      }\r\n    }\r\n    if (!v1.religionId) {\r\n      setIsReligionError(true);\r\n      setIsReligionErrorMsg('Religion is required');\r\n      flag = false;\r\n    }\r\n    return flag;\r\n  };\r\n\r\n  const handleCloseCommunityDialog = () => {\r\n    setIsOpen(false);\r\n  };\r\n\r\n  const handleClickisAdd = async () => {\r\n    setV1(initialState);\r\n    setIsOpen(true);\r\n    setNameError(false);\r\n    setNameErrorMsg('');\r\n    setIsReligionError(false);\r\n    setIsReligionErrorMsg('');\r\n    setCommunityError(false);\r\n    setCommunityErrorMsg('');\r\n  };\r\n\r\n  const handleClickisEdit = (no: number, st: string, religionId: string) => {\r\n    let obj = {\r\n      id: no,\r\n      name: st,\r\n      religionId: religionId\r\n    };\r\n    setV1(obj);\r\n    setIsOpen(true);\r\n    setNameError(false);\r\n    setNameErrorMsg('');\r\n    setIsReligionError(false);\r\n    setIsReligionErrorMsg('');\r\n    setCommunityError(false);\r\n    setCommunityErrorMsg('');\r\n  };\r\n\r\n  const handleSwitch = async (id: number, status: number) => {\r\n    let obj = {\r\n      id: id,\r\n      status: status\r\n    };\r\n    setV1(obj);\r\n    setIsCheck(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setIsCheck(false);\r\n  };\r\n\r\n  const handleSwitchCheck = async () => {\r\n    const token = localStorage.getItem('SessionToken');\r\n    const refreshToken = localStorage.getItem('RefreshToken');\r\n    let obj = {\r\n      id: v1.id\r\n    };\r\n    const res = await APIservice.httpPost(\r\n      '/api/admin/community/activeInactiveCommunity',\r\n      obj,\r\n      token,\r\n      refreshToken\r\n    );\r\n    setIsCheck(false);\r\n    getdata(page * limit, limit);\r\n  };\r\n\r\n  const editCommunityDialog = (arr: any) => {\r\n    setV1(arr);\r\n    setIsOpen(true);\r\n  };\r\n\r\n  const handleInputChange = (arr: any) => {\r\n    const { name, value } = arr.target;\r\n    setV1({ ...v1, [name]: value });\r\n  };\r\n\r\n  const handleChange = (e: any) => {\r\n    const { name, value } = e.target;\r\n    setV1({\r\n      ...v1,\r\n      [name]: value\r\n    });\r\n  };\r\n\r\n  const getReligionData = async () => {\r\n    setIsLoading(true);\r\n    try {\r\n      const token = localStorage.getItem('SessionToken');\r\n      const refreshToken = localStorage.getItem('RefreshToken');\r\n      const res = await APIservice.httpPost(\r\n        '/api/admin/religion/getReligion',\r\n        {\r\n          isActive: true\r\n        },\r\n        token,\r\n        refreshToken\r\n      );\r\n      if (res && res.status == 200) {\r\n        setIsLoading(false);\r\n        setReligions(res.recordList);\r\n      } else {\r\n        setIsLoading(false);\r\n        setReligions([]);\r\n      }\r\n    } catch (error) {\r\n      setIsLoading(false);\r\n      toast.error(error, {\r\n        autoClose: 6000,\r\n        hideProgressBar: true,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: 'colored',\r\n        position: toast.POSITION.TOP_RIGHT\r\n      });\r\n    }\r\n  };\r\n\r\n  const getdata = async (startIndex: number, fetchRecord: number) => {\r\n    debugger;\r\n    try {\r\n      setIsLoading(true);\r\n      if (search) {\r\n        const token = localStorage.getItem('SessionToken');\r\n        const refreshToken = localStorage.getItem('RefreshToken');\r\n        let obj = {\r\n          startIndex: startIndex,\r\n          fetchRecord: fetchRecord,\r\n          name: search ? search : ''\r\n        };\r\n        const res = await APIservice.httpPost(\r\n          '/api/admin/community/getCommunity',\r\n          obj,\r\n          token,\r\n          refreshToken\r\n        );\r\n        setCommunities(res.recordList);\r\n        setRow(res.totalRecords);\r\n      } else {\r\n        setIsLoading(true);\r\n        const token = localStorage.getItem('SessionToken');\r\n        const refreshToken = localStorage.getItem('RefreshToken');\r\n        let obj = {\r\n          startIndex: startIndex,\r\n          fetchRecord: fetchRecord\r\n        };\r\n        const res = await APIservice.httpPost(\r\n          '/api/admin/community/getCommunity',\r\n          obj,\r\n          token,\r\n          refreshToken\r\n        );\r\n        setCommunities(res.recordList);\r\n        setRow(res.totalRecords);\r\n        if (res && res.status == 200) {\r\n          setIsOpen(false);\r\n        } else if (res.status == 401) {\r\n          navigate('/admin');\r\n          localStorage.clear();\r\n        } else if (res.status == 500) {\r\n          setIsOpen(false);\r\n          toast.error(res.message, {\r\n            autoClose: 6000,\r\n            hideProgressBar: true,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n            theme: 'colored',\r\n            position: toast.POSITION.TOP_RIGHT\r\n          });\r\n        } else if (res.status == 400) {\r\n          setIsOpen(false);\r\n          toast.error(res.message, {\r\n            autoClose: 6000,\r\n            hideProgressBar: true,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n            theme: 'colored',\r\n            position: toast.POSITION.TOP_RIGHT\r\n          });\r\n        } else if (res.status == 300) {\r\n          setIsOpen(false);\r\n          toast.error(res.message, {\r\n            autoClose: 6000,\r\n            hideProgressBar: true,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n            theme: 'colored',\r\n            position: toast.POSITION.TOP_RIGHT\r\n          });\r\n        } else if (res.status == 404) {\r\n          setIsOpen(false);\r\n          toast.error(res.message, {\r\n            autoClose: 6000,\r\n            hideProgressBar: true,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n            theme: 'colored',\r\n            position: toast.POSITION.TOP_RIGHT\r\n          });\r\n        }\r\n        setIsLoading(false);\r\n      }\r\n    } catch (error) {\r\n      setIsLoading(false);\r\n      toast.error(error, {\r\n        autoClose: 6000,\r\n        hideProgressBar: true,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: 'colored',\r\n        position: toast.POSITION.TOP_RIGHT\r\n      });\r\n    }\r\n  };\r\n\r\n  const saveCommunity = async (e: any) => {\r\n    var flag = validateForm(e);\r\n    if (flag) {\r\n      try {\r\n        if (v1.id) {\r\n          const token = localStorage.getItem('SessionToken');\r\n          const refreshToken = localStorage.getItem('RefreshToken');\r\n          let val = {\r\n            id: v1.id,\r\n            name: v1.name,\r\n            religionId: v1.religionId\r\n          };\r\n          const res = await APIservice.httpPost(\r\n            '/api/admin/community/insertUpdateCommunity',\r\n            val,\r\n            token,\r\n            refreshToken\r\n          );\r\n          if (res && res.status == 200) {\r\n            setIsOpen(false);\r\n            getdata(page * limit, limit);\r\n          } else if (res.status == 401) {\r\n            navigate('/admin');\r\n            localStorage.clear();\r\n          } else if (res.status == 500) {\r\n            setIsOpen(false);\r\n            toast.error(res.message, {\r\n              autoClose: 6000,\r\n              hideProgressBar: true,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              draggable: true,\r\n              progress: undefined,\r\n              theme: 'colored',\r\n              position: toast.POSITION.TOP_RIGHT\r\n            });\r\n          } else if (res.status == 300) {\r\n            setIsOpen(false);\r\n            toast.error(res.message, {\r\n              autoClose: 6000,\r\n              hideProgressBar: true,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              draggable: true,\r\n              progress: undefined,\r\n              theme: 'colored',\r\n              position: toast.POSITION.TOP_RIGHT\r\n            });\r\n          } else if (res.status == 404) {\r\n            setIsOpen(false);\r\n            toast.error(res.message, {\r\n              autoClose: 6000,\r\n              hideProgressBar: true,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              draggable: true,\r\n              progress: undefined,\r\n              theme: 'colored',\r\n              position: toast.POSITION.TOP_RIGHT\r\n            });\r\n          } else if (res.status == 400) {\r\n            setIsOpen(false);\r\n            toast.error(res.message, {\r\n              autoClose: 6000,\r\n              hideProgressBar: true,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              draggable: true,\r\n              progress: undefined,\r\n              theme: 'colored',\r\n              position: toast.POSITION.TOP_RIGHT\r\n            });\r\n          } else if (res.status == 203) {\r\n            setCommunityError(true);\r\n            setCommunityErrorMsg('Community already exists!');\r\n          }\r\n        } else {\r\n          //insert\r\n          const token = localStorage.getItem('SessionToken');\r\n          const refreshToken = localStorage.getItem('RefreshToken');\r\n          const res = await APIservice.httpPost(\r\n            '/api/admin/community/insertUpdateCommunity',\r\n            v1,\r\n            token,\r\n            refreshToken\r\n          );\r\n          if (res && res.status == 200) {\r\n            getdata(0, limit);\r\n            setPage(0);\r\n            setIsOpen(false);\r\n          } else if (res.status == 401) {\r\n            navigate('/admin');\r\n            localStorage.clear();\r\n          } else if (res.status == 500) {\r\n            setIsOpen(false);\r\n            toast.error(res.message, {\r\n              autoClose: 6000,\r\n              hideProgressBar: true,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              draggable: true,\r\n              progress: undefined,\r\n              theme: 'colored',\r\n              position: toast.POSITION.TOP_RIGHT\r\n            });\r\n          } else if (res.status == 300) {\r\n            setIsOpen(false);\r\n            toast.error(res.message, {\r\n              autoClose: 6000,\r\n              hideProgressBar: true,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              draggable: true,\r\n              progress: undefined,\r\n              theme: 'colored',\r\n              position: toast.POSITION.TOP_RIGHT\r\n            });\r\n          } else if (res.status == 404) {\r\n            setIsOpen(false);\r\n            toast.error(res.message, {\r\n              autoClose: 6000,\r\n              hideProgressBar: true,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              draggable: true,\r\n              progress: undefined,\r\n              theme: 'colored',\r\n              position: toast.POSITION.TOP_RIGHT\r\n            });\r\n          } else if (res.status == 400) {\r\n            setIsOpen(false);\r\n            toast.error(res.message, {\r\n              autoClose: 6000,\r\n              hideProgressBar: true,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              draggable: true,\r\n              progress: undefined,\r\n              theme: 'colored',\r\n              position: toast.POSITION.TOP_RIGHT\r\n            });\r\n          } else if (res.status == 203) {\r\n            setCommunityError(true);\r\n            setCommunityErrorMsg('Community already exists!');\r\n          }\r\n        }\r\n      } catch (error) {\r\n        toast.error(error, {\r\n          autoClose: 6000,\r\n          hideProgressBar: true,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: 'colored',\r\n          position: toast.POSITION.TOP_RIGHT\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  const searchData = (e) => {\r\n    setSearch(e.target.value);\r\n    search = e.target.value;\r\n    getdata(page, limit);\r\n  };\r\n\r\n  const handlePageChange = (event: any, newPage: number): void => {\r\n    setPage(newPage);\r\n    getdata(newPage * limit, limit);\r\n  };\r\n\r\n  const handleLimitChange = (event: ChangeEvent<HTMLInputElement>): void => {\r\n    setLimit(parseInt(event.target.value));\r\n    setPage(0);\r\n    getdata(0, parseInt(event.target.value));\r\n  };\r\n\r\n  const theme = useTheme();\r\n\r\n  return (\r\n    <>\r\n      <SnackbarComponent />\r\n      <ToastContainer\r\n        style={{ top: '10%', left: '80%' }}\r\n        autoClose={6000}\r\n        hideProgressBar={true}\r\n        newestOnTop={false}\r\n        closeOnClick\r\n        rtl={false}\r\n        pauseOnFocusLoss\r\n        draggable\r\n        pauseOnHover\r\n      />\r\n      <Helmet>\r\n        <title>Community</title>\r\n      </Helmet>\r\n      <PageTitleWrapper>\r\n        <Box p={1}>\r\n          <Grid container justifyContent=\"space-between\" alignItems=\"center\">\r\n            <Grid item>\r\n              <Stack alignItems=\"left\" justifyContent=\"space-between\">\r\n                <Breadcrumbs aria-label=\"breadcrumb\">\r\n                  <Link\r\n                    to=\"/admin/dashboard\"\r\n                    style={{ display: 'flex', color: 'black' }}\r\n                  >\r\n                    <HomeIcon />\r\n                  </Link>\r\n                  <Typography\r\n                    variant=\"subtitle2\"\r\n                    color=\"inherit\"\r\n                    fontWeight=\"bold\"\r\n                  >\r\n                    Community\r\n                  </Typography>\r\n                </Breadcrumbs>\r\n              </Stack>\r\n            </Grid>\r\n            <Grid item>\r\n              <Grid container spacing={1.5}>\r\n                <Grid item>\r\n                  {isWritePermission ? (\r\n                    <>\r\n                      <Button\r\n                        className=\"buttonLarge\"\r\n                        sx={{\r\n                          mt: { xs: 0, md: 0, padding: '8.3px', top: '3px' },\r\n                          display: 'flex',\r\n                          alignItems: 'center'\r\n                        }}\r\n                        variant=\"contained\"\r\n                        onClick={handleClickisAdd}\r\n                        size=\"small\"\r\n                      >\r\n                        <AddTwoToneIcon fontSize=\"small\" /> Create Community\r\n                      </Button>\r\n                      <Button\r\n                        className=\"button\"\r\n                        sx={{\r\n                          mt: { xs: 0, md: 0, padding: '8.3px', top: '3px' },\r\n                          display: 'flex',\r\n                          alignItems: 'center'\r\n                        }}\r\n                        variant=\"contained\"\r\n                        onClick={handleClickisAdd}\r\n                        size=\"small\"\r\n                      >\r\n                        <AddTwoToneIcon fontSize=\"small\" />\r\n                      </Button>\r\n                    </>\r\n                  ) : (\r\n                    <></>\r\n                  )}\r\n                </Grid>\r\n                <Grid item>\r\n                  <FormControl\r\n                    sx={{ mt: { xs: 0.3, md: 0.3, lg: 0.3, sm: 0.3 } }}\r\n                  >\r\n                    <TextField\r\n                      name=\"searchString\"\r\n                      value={search}\r\n                      onChange={(e) => searchData(e)}\r\n                      id=\"outlined-basic\"\r\n                      label=\"Search\"\r\n                      variant=\"outlined\"\r\n                      size=\"small\"\r\n                      InputProps={{\r\n                        startAdornment: (\r\n                          <InputAdornment position=\"start\">\r\n                            <SearchIcon />\r\n                          </InputAdornment>\r\n                        )\r\n                      }}\r\n                    />\r\n                  </FormControl>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </Box>\r\n      </PageTitleWrapper>\r\n      <Container maxWidth=\"lg\">\r\n        <Grid\r\n          container\r\n          direction=\"row\"\r\n          justifyContent=\"center\"\r\n          alignItems=\"stretch\"\r\n          spacing={3}\r\n        >\r\n          <Grid item xs={12}>\r\n            <>\r\n              <Card className=\"communitycard\">\r\n                <div>\r\n                  {isloading ? (\r\n                    <Loader1 title=\"Loading...\" />\r\n                  ) : (\r\n                    <>\r\n                      <Divider />\r\n                      {communities && communities.length > 0 ? (\r\n                        <>\r\n                          <TableContainer className=\"communitytableContainer\">\r\n                            <Table stickyHeader>\r\n                              <TableHead>\r\n                                <TableRow>\r\n                                  <TableCell>\r\n                                    <Typography\r\n                                      noWrap\r\n                                      style={{\r\n                                        fontSize: '13px',\r\n                                        fontWeight: 'bold',\r\n                                        marginBottom: 'none'\r\n                                      }}\r\n                                    >\r\n                                      Sr. No\r\n                                    </Typography>\r\n                                  </TableCell>\r\n                                  <TableCell>\r\n                                    <Typography\r\n                                      noWrap\r\n                                      style={{\r\n                                        fontSize: '13px',\r\n                                        fontWeight: 'bold',\r\n                                        marginBottom: 'none'\r\n                                      }}\r\n                                    >\r\n                                      Religion\r\n                                    </Typography>\r\n                                  </TableCell>\r\n                                  <TableCell>\r\n                                    <Typography\r\n                                      noWrap\r\n                                      style={{\r\n                                        fontSize: '13px',\r\n                                        fontWeight: 'bold',\r\n                                        marginBottom: 'none'\r\n                                      }}\r\n                                    >\r\n                                      Community\r\n                                    </Typography>\r\n                                  </TableCell>\r\n                                  <TableCell align=\"right\">\r\n                                    <Typography\r\n                                      noWrap\r\n                                      style={{\r\n                                        fontSize: '13px',\r\n                                        fontWeight: 'bold',\r\n                                        marginBottom: 'none'\r\n                                      }}\r\n                                    >\r\n                                      Actions\r\n                                    </Typography>\r\n                                  </TableCell>\r\n                                </TableRow>\r\n                              </TableHead>\r\n                              <TableBody>\r\n                                {communities.map((arr: any, index: number) => {\r\n                                  return (\r\n                                    <TableRow hover key={arr.id}>\r\n                                      <TableCell>\r\n                                        <Typography\r\n                                          variant=\"body1\"\r\n                                          fontWeight=\"bold\"\r\n                                          color=\"text.primary\"\r\n                                          gutterBottom\r\n                                          noWrap\r\n                                        >\r\n                                          {page * limit + index + 1}\r\n                                        </Typography>\r\n                                      </TableCell>\r\n                                      <TableCell>\r\n                                        <Typography\r\n                                          variant=\"body1\"\r\n                                          fontWeight=\"bold\"\r\n                                          color=\"text.primary\"\r\n                                          gutterBottom\r\n                                          noWrap\r\n                                          sx={{ textTransform: 'capitalize' }}\r\n                                        >\r\n                                          {arr.religionName}\r\n                                        </Typography>\r\n                                      </TableCell>\r\n                                      <TableCell>\r\n                                        <Typography\r\n                                          variant=\"body1\"\r\n                                          fontWeight=\"bold\"\r\n                                          color=\"text.primary\"\r\n                                          gutterBottom\r\n                                          noWrap\r\n                                          sx={{ textTransform: 'capitalize' }}\r\n                                        >\r\n                                          {arr.name}\r\n                                        </Typography>\r\n                                      </TableCell>\r\n\r\n                                      <TableCell align=\"right\">\r\n                                        {isEditPermission ? (\r\n                                          <>\r\n                                            <Tooltip\r\n                                              title={\r\n                                                arr.isActive === 0\r\n                                                  ? 'Inactive'\r\n                                                  : 'Active'\r\n                                              }\r\n                                              arrow\r\n                                            >\r\n                                              <Switch\r\n                                                // disabled={credentail?.isDemoAdmin}\r\n                                                checked={\r\n                                                  arr.isActive === 0\r\n                                                    ? false\r\n                                                    : true\r\n                                                }\r\n                                                onClick={(e) =>\r\n                                                  checkIsDemoUser(\r\n                                                    () =>\r\n                                                      handleSwitch(\r\n                                                        arr.id,\r\n                                                        arr.isActive\r\n                                                      ),\r\n                                                    showSnackBar\r\n                                                  )()\r\n                                                }\r\n                                                inputProps={{\r\n                                                  'aria-label': 'controlled'\r\n                                                }}\r\n                                              />\r\n                                            </Tooltip>\r\n                                            <Tooltip title=\"Edit\" arrow>\r\n                                              <IconButton\r\n                                                // disabled={credentail?.isDemoAdmin}\r\n                                                sx={{\r\n                                                  '&:hover': {\r\n                                                    background:\r\n                                                      theme.colors.error.lighter\r\n                                                  },\r\n                                                  color:\r\n                                                    theme.palette.primary.main\r\n                                                }}\r\n                                                color=\"inherit\"\r\n                                                size=\"small\"\r\n                                                onClick={(e) =>\r\n                                                  handleClickisEdit(\r\n                                                    arr.id,\r\n                                                    arr.name,\r\n                                                    arr.religionId\r\n                                                  )\r\n                                                }\r\n                                              >\r\n                                                <EditTwoToneIcon fontSize=\"small\" />\r\n                                              </IconButton>\r\n                                            </Tooltip>\r\n                                          </>\r\n                                        ) : (\r\n                                          <></>\r\n                                        )}\r\n                                      </TableCell>\r\n                                    </TableRow>\r\n                                  );\r\n                                })}\r\n                              </TableBody>\r\n                            </Table>\r\n                          </TableContainer>\r\n                          <Box p={2}>\r\n                            <TablePagination\r\n                              component=\"div\"\r\n                              count={row}\r\n                              onPageChange={handlePageChange}\r\n                              onRowsPerPageChange={handleLimitChange}\r\n                              page={page}\r\n                              rowsPerPage={limit}\r\n                              rowsPerPageOptions={[10, 20, 30, 40]}\r\n                            />\r\n                          </Box>\r\n                        </>\r\n                      ) : (\r\n                        <Paper\r\n                          sx={{\r\n                            display: 'flex',\r\n                            justifyContent: 'center',\r\n                            alignItems: 'center',\r\n                            textAlign: 'center',\r\n                            verticalAlign: 'middle',\r\n                            boxShadow: 'none'\r\n                          }}\r\n                          className=\"communitycard\"\r\n                        >\r\n                          <Typography variant=\"h5\" paragraph>\r\n                            Data not Found\r\n                          </Typography>\r\n                        </Paper>\r\n                      )}\r\n                    </>\r\n                  )}\r\n                </div>\r\n              </Card>\r\n              <div>\r\n                <Dialog\r\n                  open={ischeck}\r\n                  onClose={handleClose}\r\n                  fullWidth\r\n                  maxWidth=\"xs\"\r\n                >\r\n                  <DialogTitle\r\n                    sx={{ m: 0, p: 2, fontSize: '20px', fontWeight: 'bolder' }}\r\n                  >\r\n                    {v1.status === 0 ? 'Inactive' : 'Active'}\r\n                  </DialogTitle>\r\n                  <DialogContent>\r\n                    <DialogContentText\r\n                      style={{ fontSize: '1rem', letterSpacing: '0.00938em' }}\r\n                    >\r\n                      {v1.status === 0\r\n                        ? 'Are you sure you want to Active?'\r\n                        : 'Are you sure you want to Inactive?'}\r\n                    </DialogContentText>\r\n                  </DialogContent>\r\n                  <DialogActions>\r\n                    <Button\r\n                      onClick={handleClose}\r\n                      variant=\"outlined\"\r\n                      style={{ marginRight: '10px' }}\r\n                    >\r\n                      Cancel\r\n                    </Button>\r\n                    <Button\r\n                      disabled={credentail?.isDemoAdmin}\r\n                      onClick={handleSwitchCheck}\r\n                      variant=\"outlined\"\r\n                      style={{ marginRight: '10px' }}\r\n                    >\r\n                      Yes\r\n                    </Button>\r\n                  </DialogActions>\r\n                </Dialog>\r\n              </div>\r\n\r\n              <div>\r\n                <BootstrapDialog\r\n                  open={isOpen}\r\n                  onClose={handleCloseCommunityDialog}\r\n                  PaperProps={{ sx: { height: '40%' } }}\r\n                  fullWidth\r\n                  maxWidth=\"xs\"\r\n                >\r\n                  <BootstrapDialogTitle\r\n                    id=\"customized-dialog-title\"\r\n                    onClose={handleCloseCommunityDialog}\r\n                  >\r\n                    {v1.id ? 'Edit Community' : 'Add Community'}\r\n                  </BootstrapDialogTitle>\r\n                  <DialogContent dividers>\r\n                    <FormControl sx={{ width: { lg: '100%' } }}>\r\n                      <InputLabel id=\"demo-multiple-name-label\">\r\n                        Religion *\r\n                      </InputLabel>\r\n                      <Select\r\n                        labelId=\"demo-multiple-name-label\"\r\n                        id=\"demo-multiple-name\"\r\n                        multiple={false}\r\n                        name=\"religionId\"\r\n                        value={v1.religionId || []}\r\n                        onChange={(e) => {\r\n                          handleChange(e);\r\n                          validateReligion(e);\r\n                        }}\r\n                        label=\"Religion\"\r\n                        MenuProps={MenuProps}\r\n                        required={true}\r\n                      >\r\n                        {religions.map((arr: any) => (\r\n                          <MenuItem key={arr.id} value={arr.id}>\r\n                            {arr.name}\r\n                          </MenuItem>\r\n                        ))}\r\n                      </Select>\r\n                    </FormControl>\r\n                    <FormHelperText style={{ color: 'red', height: '22px' }}>\r\n                      {isReligionError && isReligionErrorMsg}\r\n                    </FormHelperText>\r\n                    <TextField\r\n                      autoFocus\r\n                      margin=\"dense\"\r\n                      id=\"name\"\r\n                      label=\"Community\"\r\n                      type=\"text\"\r\n                      fullWidth\r\n                      variant=\"outlined\"\r\n                      name=\"name\"\r\n                      value={v1.name}\r\n                      onChange={(arr) => {\r\n                        handleInputChange(arr);\r\n                        validateName(arr);\r\n                      }}\r\n                      required={true}\r\n                    />\r\n                    <FormHelperText style={{ color: 'red', height: '22px' }}>\r\n                      {isNameError && NameErrorMsg}\r\n                    </FormHelperText>\r\n                  </DialogContent>\r\n                  <Box\r\n                    sx={{\r\n                      display: 'flex',\r\n                      justifyContent: 'space-between',\r\n                      p: '8px'\r\n                    }}\r\n                  >\r\n                    <FormHelperText\r\n                      style={{\r\n                        color: 'red',\r\n                        height: '22px',\r\n                        margin: 'none',\r\n                        padding: '8px 0px'\r\n                      }}\r\n                    >\r\n                      {isCommunityError && communityErrorMsg}\r\n                    </FormHelperText>\r\n                    <Typography>\r\n                      <Button\r\n                        onClick={handleCloseCommunityDialog}\r\n                        variant=\"outlined\"\r\n                        style={{ marginRight: '10px' }}\r\n                      >\r\n                        Cancel\r\n                      </Button>\r\n                      <Button\r\n                        // disabled={credentail?.isDemoAdmin}\r\n                        onClick={() =>\r\n                          checkIsDemoUser(saveCommunity, showSnackBar)()\r\n                        }\r\n                        variant=\"outlined\"\r\n                        style={{ marginRight: '10px' }}\r\n                      >\r\n                        Save\r\n                      </Button>\r\n                    </Typography>\r\n                  </Box>\r\n                </BootstrapDialog>\r\n                <SnackbarComponent />\r\n              </div>\r\n            </>\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n      {/* <Footer /> */}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Community;\r\n","import React from 'react';\r\nimport './Loader.css';\r\n\r\ninterface Props {\r\n  title: string;\r\n}\r\n\r\nconst Loader1 = (props: Props) => {\r\n  const { title } = props;\r\n  return (\r\n    // <div className=\"loader\">\r\n    //     <img className=\"img\" src={loader} alt=\"\" />\r\n    //     <span>{title}</span>\r\n    // </div>\r\n    <div className=\"spinner-container\">\r\n      <div className=\"loading-spinner\"></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loader1;\r\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\"\n}), 'Search');\nexports.default = _default;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getTableHeadUtilityClass(slot) {\n  return generateUtilityClass('MuiTableHead', slot);\n}\nconst tableHeadClasses = generateUtilityClasses('MuiTableHead', ['root']);\nexport default tableHeadClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport Tablelvl2Context from '../Table/Tablelvl2Context';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport styled from '../styles/styled';\nimport { getTableHeadUtilityClass } from './tableHeadClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getTableHeadUtilityClass, classes);\n};\nconst TableHeadRoot = styled('thead', {\n  name: 'MuiTableHead',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  display: 'table-header-group'\n});\nconst tablelvl2 = {\n  variant: 'head'\n};\nconst defaultComponent = 'thead';\nconst TableHead = /*#__PURE__*/React.forwardRef(function TableHead(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiTableHead'\n  });\n  const {\n      className,\n      component = defaultComponent\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    component\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(Tablelvl2Context.Provider, {\n    value: tablelvl2,\n    children: /*#__PURE__*/_jsx(TableHeadRoot, _extends({\n      as: component,\n      className: clsx(classes.root, className),\n      ref: ref,\n      role: component === defaultComponent ? null : 'rowgroup',\n      ownerState: ownerState\n    }, other))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? TableHead.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component, normally `TableRow`.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default TableHead;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getTableUtilityClass(slot) {\n  return generateUtilityClass('MuiTable', slot);\n}\nconst tableClasses = generateUtilityClasses('MuiTable', ['root', 'stickyHeader']);\nexport default tableClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"component\", \"padding\", \"size\", \"stickyHeader\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport TableContext from './TableContext';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport styled from '../styles/styled';\nimport { getTableUtilityClass } from './tableClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    stickyHeader\n  } = ownerState;\n  const slots = {\n    root: ['root', stickyHeader && 'stickyHeader']\n  };\n  return composeClasses(slots, getTableUtilityClass, classes);\n};\nconst TableRoot = styled('table', {\n  name: 'MuiTable',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.stickyHeader && styles.stickyHeader];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  display: 'table',\n  width: '100%',\n  borderCollapse: 'collapse',\n  borderSpacing: 0,\n  '& caption': _extends({}, theme.typography.body2, {\n    padding: theme.spacing(2),\n    color: (theme.vars || theme).palette.text.secondary,\n    textAlign: 'left',\n    captionSide: 'bottom'\n  })\n}, ownerState.stickyHeader && {\n  borderCollapse: 'separate'\n}));\nconst defaultComponent = 'table';\nconst Table = /*#__PURE__*/React.forwardRef(function Table(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiTable'\n  });\n  const {\n      className,\n      component = defaultComponent,\n      padding = 'normal',\n      size = 'medium',\n      stickyHeader = false\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    component,\n    padding,\n    size,\n    stickyHeader\n  });\n  const classes = useUtilityClasses(ownerState);\n  const table = React.useMemo(() => ({\n    padding,\n    size,\n    stickyHeader\n  }), [padding, size, stickyHeader]);\n  return /*#__PURE__*/_jsx(TableContext.Provider, {\n    value: table,\n    children: /*#__PURE__*/_jsx(TableRoot, _extends({\n      as: component,\n      role: component === defaultComponent ? null : 'table',\n      ref: ref,\n      className: clsx(classes.root, className),\n      ownerState: ownerState\n    }, other))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Table.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the table, normally `TableHead` and `TableBody`.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * Allows TableCells to inherit padding of the Table.\n   * @default 'normal'\n   */\n  padding: PropTypes.oneOf(['checkbox', 'none', 'normal']),\n  /**\n   * Allows TableCells to inherit size of the Table.\n   * @default 'medium'\n   */\n  size: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.string]),\n  /**\n   * Set the header sticky.\n   *\n   * ⚠️ It doesn't work with IE11.\n   * @default false\n   */\n  stickyHeader: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Table;"],"names":["PageTitle","styled","Box","_ref","theme","spacing","_ref2","children","_jsx","className","Container","maxWidth","BootstrapDialog","Dialog","padding","height","BootstrapDialogTitle","props","onClose","other","_jsxs","DialogTitle","sx","m","p","fontSize","fontWeight","IconButton","onClick","position","right","top","color","palette","grey","CloseIcon","initialState","id","name","religionId","MenuProps","PaperProps","style","maxHeight","ITEM_HEIGHT","width","page","setPage","useState","limit","setLimit","row","setRow","communities","setCommunities","React","religions","setReligions","v1","setV1","isOpen","setIsOpen","ischeck","setIsCheck","isloading","setIsLoading","isCommunityError","setCommunityError","communityErrorMsg","setCommunityErrorMsg","search","setSearch","isReligionError","setIsReligionError","isReligionErrorMsg","setIsReligionErrorMsg","navigate","useNavigate","isNameError","setNameError","NameErrorMsg","setNameErrorMsg","credentail","setCredentail","isReadPermission","setIsReadPermission","isWritePermission","setIsWritePermission","isEditPermission","setIsEditPermission","isDeletePermission","setIsDeletePermission","showSnackBar","SnackbarComponent","useSnackbar","cred","JSON","parse","localStorage","getItem","roleId","ind","pagePermissions","findIndex","c","title","isAddPermission","loadData","async","getReligionData","getdata","reg","RegExp","handleCloseCommunityDialog","handleClickisAdd","handleClose","token","refreshToken","res","APIservice","httpPost","isActive","status","recordList","error","toast","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","POSITION","TOP_RIGHT","startIndex","fetchRecord","obj","totalRecords","clear","message","saveCommunity","flag","e","preventDefault","test","validateForm","val","useTheme","_Fragment","ToastContainer","left","newestOnTop","rtl","pauseOnFocusLoss","Helmet","PageTitleWrapper","Grid","container","justifyContent","alignItems","item","Stack","Breadcrumbs","Link","to","display","HomeIcon","Typography","variant","Button","mt","xs","md","size","AddTwoToneIcon","FormControl","lg","sm","TextField","value","onChange","target","searchData","label","InputProps","startAdornment","InputAdornment","SearchIcon","direction","Card","Loader1","Divider","length","TableContainer","Table","stickyHeader","TableHead","TableRow","TableCell","noWrap","marginBottom","align","TableBody","map","arr","index","hover","gutterBottom","textTransform","religionName","Tooltip","arrow","Switch","checked","checkIsDemoUser","handleSwitch","inputProps","background","colors","lighter","primary","main","handleClickisEdit","no","st","EditTwoToneIcon","TablePagination","component","count","onPageChange","handlePageChange","event","newPage","onRowsPerPageChange","parseInt","rowsPerPage","rowsPerPageOptions","Paper","textAlign","verticalAlign","boxShadow","paragraph","open","fullWidth","DialogContent","DialogContentText","letterSpacing","DialogActions","marginRight","disabled","isDemoAdmin","dividers","InputLabel","Select","labelId","multiple","handleChange","validateReligion","required","MenuItem","FormHelperText","autoFocus","margin","type","handleInputChange","validateName","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d","getTableHeadUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","TableHeadRoot","overridesResolver","styles","root","tablelvl2","defaultComponent","inProps","ref","useDefaultProps","_objectWithoutPropertiesLoose","ownerState","_extends","classes","composeClasses","useUtilityClasses","Tablelvl2Context","Provider","as","clsx","role","getTableUtilityClass","TableRoot","borderCollapse","borderSpacing","typography","body2","vars","text","secondary","captionSide","slots","table","TableContext"],"sourceRoot":""}