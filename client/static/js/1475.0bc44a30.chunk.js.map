{"version":3,"file":"static/js/1475.0bc44a30.chunk.js","mappings":"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","sources":["content/Loader.tsx","content/overview/Login/LoaderLogin.tsx","content/overview/Login/Login.tsx"],"sourcesContent":["import React from 'react';\r\nimport './Loader.css';\r\n\r\ninterface Props {\r\n  title: string;\r\n}\r\n\r\nconst Loader1 = (props: Props) => {\r\n  const { title } = props;\r\n  return (\r\n    // <div className=\"loader\">\r\n    //     <img className=\"img\" src={loader} alt=\"\" />\r\n    //     <span>{title}</span>\r\n    // </div>\r\n    <div className=\"spinner-container\">\r\n      <div className=\"loading-spinner\"></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loader1;\r\n","import React from 'react';\r\nimport './LoaderLogin.css';\r\n\r\ninterface Props {\r\n  title: string;\r\n}\r\n\r\nconst LoaderLogin = (props: Props) => {\r\n  const { title } = props;\r\n  return (\r\n    // <div className=\"loader\">\r\n    //     <img className=\"img\" src={loader} alt=\"\" />\r\n    //     <span>{title}</span>\r\n    // </div>\r\n    <div className=\"login-container\">\r\n      <div className=\"loading-login-spinner\"></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoaderLogin;\r\n","import CancelIcon from '@mui/icons-material/Cancel';\r\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\r\nimport ContentCopyIcon from '@mui/icons-material/ContentCopy';\r\nimport ErrorIcon from '@mui/icons-material/Error';\r\nimport InfoIcon from '@mui/icons-material/Info';\r\nimport VisibilityIcon from '@mui/icons-material/Visibility';\r\nimport VisibilityOffIcon from '@mui/icons-material/VisibilityOff';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  Checkbox,\r\n  CircularProgress,\r\n  FormControl,\r\n  FormControlLabel,\r\n  FormHelperText,\r\n  FormLabel,\r\n  IconButton,\r\n  InputAdornment,\r\n  InputLabel,\r\n  Link,\r\n  MenuItem,\r\n  Radio,\r\n  RadioGroup,\r\n  Select,\r\n  Stack,\r\n  TextField,\r\n  Tooltip,\r\n  Typography,\r\n  styled\r\n} from '@mui/material';\r\nimport Step from '@mui/material/Step';\r\nimport StepLabel from '@mui/material/StepLabel';\r\nimport Stepper from '@mui/material/Stepper';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport React, { ChangeEvent, useEffect, useState } from 'react';\r\nimport { Col, Container, Form, Row } from 'react-bootstrap';\r\nimport { Helmet } from 'react-helmet-async';\r\nimport QRCode from 'react-qr-code';\r\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport Logo from 'src/components/LogoSign';\r\nimport validator from 'validator';\r\nimport APIservice from '../../../utils/APIservice';\r\nimport '../../dashboards/Crypto/dashboard.css';\r\nimport LoaderLogin from './LoaderLogin';\r\nimport Loader1 from 'src/content/Loader';\r\n// import { saveAs } from 'file-saver';\r\n\r\nconst OverviewWrapper = styled(Box)(\r\n  () => `\r\n    overflow: auto;\r\n    flex: 1;\r\n    overflow-x: hidden;\r\n    align-items: center;\r\n`\r\n);\r\nconst steps = ['MYSQL Configuration', 'Setup Database', 'Setup Complete'];\r\n// const steps = ['MYSQL Configuration', 'Setup Complete'];\r\nconst initialState = {\r\n  email: '',\r\n  password: ''\r\n};\r\n\r\nconst initialDefaultState = {\r\n  email: ''\r\n};\r\n\r\nconst initialDefaultPasswordState = {\r\n  password: ''\r\n};\r\n\r\nconst initialAuthenticationCodeState = {\r\n  twoFactorCode: ''\r\n};\r\n\r\nconst initialHostState = {\r\n  MYSQL_HOST: '127.0.0.1',\r\n  MYSQL_DATABASE: 'matrimony_app',\r\n  MYSQL_USER: 'root',\r\n  MYSQL_PASSWORD: '',\r\n  MYSQL_PORT: '3306',\r\n  password: '',\r\n  username: 'root'\r\n};\r\n\r\nconst styles = {\r\n  heading4: `text-base text-ct-blue-600 font-medium border-b mb-2`,\r\n  orderedList: `space-y-1 text-sm list-decimal`\r\n};\r\n\r\nfunction Login() {\r\n  const [login, setLogin] = React.useState<any>(initialState);\r\n  const [isEmailValidateError, setIsEmailValidateError] = useState(false);\r\n  const [emailValidateErrorMsg, setEmailValidateErrorMsg] = useState('');\r\n  const [isPasswordValidateError, setIsPasswordValidateError] = useState(false);\r\n  const [passwordValidateErrorMsg, setPasswordValidateErrorMsg] = useState('');\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isNoteForNoDatabaseFound, setisNoteForNoDatabaseFound] =\r\n    useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  const [isLogin, setIsLogin] = useState(true);\r\n  const [changeEmail, setChangeEmail] =\r\n    React.useState<any>(initialDefaultState);\r\n  const [isChangeEmailValidateError, setIsChangeEmailValidateError] =\r\n    useState(false);\r\n  const [changeEmailValidateErrorMsg, setChangeEmailValidateErrorMsg] =\r\n    useState('');\r\n  const [isChangeEmail, setIsChangeEmail] = useState(false);\r\n\r\n  const [changePassword, setChangePassword] = React.useState<any>(\r\n    initialDefaultPasswordState\r\n  );\r\n  const [isChangePasswordValidateError, setIsChangePasswordValidateError] =\r\n    useState(false);\r\n  const [changePasswordValidateErrorMsg, setChangePasswordValidateErrorMsg] =\r\n    useState('');\r\n  const [showChangePassword, setShowChangePassword] = useState(false);\r\n  const [isChangePassword, setIsChangePassword] = useState(false);\r\n\r\n  const [is2FAOpen, setIs2FAOpen] = useState(false);\r\n  const [is2FAQRCode, setIs2FAQRCode] = useState(false);\r\n  const [is2FAEnter, setIs2FAEnter] = useState(false);\r\n  const [isConfiguration, setIsConfiguration] = useState(false);\r\n  const [isUrlErrorMsg, setIsUrlErrorMsg] = useState(false);\r\n  const [isVerified, setIsVerified] = useState(false);\r\n  const [apiUrl, setApiUrl] = useState('');\r\n  const [isTakeHostData, setIsTakeHostData] = useState(false);\r\n  const [hostData, setHostInput] = React.useState<any>(initialHostState);\r\n\r\n  const [email, setEmail] = useState('');\r\n\r\n  const [isAuthenticationCodeError, setIsAuthenticationCodeErrorError] =\r\n    useState(false);\r\n  const [authenticationCodeErrorMsg, setAuthenticationCodeErrorMsg] =\r\n    useState('');\r\n  const [authenticationCode, setAuthenticationCode] = React.useState<any>(\r\n    initialAuthenticationCodeState\r\n  );\r\n\r\n  const [refreshToken, setRefreshToken] = useState<any>();\r\n  const [sessionToken, setSessionToken] = useState<any>();\r\n  const [userId, setUserId] = useState<any>();\r\n  const [crendientials, setCrendientials] = useState<any>();\r\n  const [defaultCurrency, setDefaultCurrency] = useState<any>();\r\n\r\n  const [qrcodeUrl, setqrCodeUrl] = useState('');\r\n  const [base32, setBase32] = useState('');\r\n  const [isTested, setIsTeseted] = useState(false);\r\n  const [version, setVersion] = useState(null);\r\n  const [isExistingVersion, setIsExistingVersion] = useState(false);\r\n  const [isInstallSuccessfully, setIsInstallSucessfully] = useState(false);\r\n  const [ismasterData, setIsMasterData] = useState(false);\r\n  const [isSampleData, setIsSampleData] = useState(false);\r\n  const [isSetupdatabase, setIsSetUpDatabase] = useState(false);\r\n  const [databaseState, setDatabaseState] = useState('creating');\r\n  const [masterdataState, setMasterdataState] = useState('creating');\r\n  const [sampledataState, setSampledataState] = useState('creating');\r\n  let [isInstallMasterData, setIsInstallMasterData] = useState(false);\r\n  const [isPreviousVersionInstalled, setPreviousVersionInstalled] =\r\n    useState('false');\r\n  const [isAPIUrlValidation, setIsAPIUrlValidation] = useState(false);\r\n  const [isHostRequired, setIsHostRequired] = useState(false);\r\n  const [isUserRequired, setIsUserRequired] = useState(false);\r\n  const [isPORTRequired, setIsPortRequired] = useState(false);\r\n  const [isDatabaseNameRequired, setIsDatabaseNameRequired] = useState(false);\r\n  const [isPasswordRequired, setIsPasswordRequired] = useState(false);\r\n  const [isVersionSelectionRequired, setIsVersionRequired] = useState(false);\r\n  const [isDatabaseSelectionRequired, setIsDatabaseRequired] = useState(false);\r\n  const [isExistDatbaseAvailable, setIsExistDatbaseAvailable] = useState(false);\r\n  let [isInstalledSampleData, setIsInstallSampleData] = useState(false);\r\n  let [databases, setDatabases] = useState([]);\r\n  const [isCreatedatabaseUser, setIsCreateDatabaseUser] = useState(false);\r\n  const [isRestartServerRequired, setIsRestartServerRequired] = useState(true);\r\n  const [userName, setUserName] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [MYSQL_DATABASE, setSelectedDatabase] = useState(null);\r\n\r\n  const [isShowLoader, setIsShowLoader] = useState(true);\r\n\r\n  const onFormSubmit = (e) => {\r\n    e?.preventDefault();\r\n  };\r\n\r\n  const handleInputChange = (event: ChangeEvent<HTMLInputElement>) => {\r\n    const { name, value } = event.target;\r\n    setLogin({ ...login, [name]: value });\r\n  };\r\n\r\n  const validateEmail = (e: any) => {\r\n    const { name, value } = e.target;\r\n    if (value) {\r\n      // if (validator.isEmail(e.target.value)) {\r\n      setIsEmailValidateError(false);\r\n      setEmailValidateErrorMsg('');\r\n      // } else {\r\n      //   setIsEmailValidateError(true);\r\n      //   setEmailValidateErrorMsg('Invalid Email');\r\n      // }\r\n    } else {\r\n      setIsEmailValidateError(true);\r\n      setEmailValidateErrorMsg('Email is Required');\r\n    }\r\n  };\r\n\r\n  const handleCopy = () => {\r\n    const cred =\r\n      'UserName:' + this.userName + '\\n' + 'Password:' + this.password;\r\n    navigator.clipboard\r\n      .writeText(cred)\r\n      .then(() => {\r\n        alert('Text copied to clipboard!');\r\n      })\r\n      .catch((err) => {\r\n        console.error('Failed to copy text: ', err);\r\n      });\r\n  };\r\n\r\n  const mediumRegex = new RegExp(\r\n    '^(((?=.*[a-z])(?=.*[A-Z]))|((?=.*[a-z])(?=.*[0-9]))|((?=.*[A-Z])(?=.*[0-9])))(?=.{8,})'\r\n  );\r\n  const ValidatePassword = (e: any) => {\r\n    const { name, value } = e.target;\r\n    if (value) {\r\n      // if (mediumRegex.test(e.target.value)) {\r\n      setIsPasswordValidateError(false);\r\n      setPasswordValidateErrorMsg('');\r\n      // } else {\r\n      //   setIsPasswordValidateError(true);\r\n      //   setPasswordValidateErrorMsg('The password must be more than 8 characters and contain both letters and numbers.');\r\n      // }\r\n    } else {\r\n      setIsPasswordValidateError(true);\r\n      setPasswordValidateErrorMsg('Password is Required');\r\n    }\r\n  };\r\n\r\n  const validateForm = (event: any) => {\r\n    event?.preventDefault();\r\n    var flag = true;\r\n    if (!login.email) {\r\n      setIsEmailValidateError(true);\r\n      setEmailValidateErrorMsg('Email is Required');\r\n      flag = false;\r\n    } else {\r\n      if (validator.isEmail(login.email)) {\r\n        setIsEmailValidateError(false);\r\n        setEmailValidateErrorMsg('');\r\n        flag = true;\r\n      } else {\r\n        setIsEmailValidateError(true);\r\n        setEmailValidateErrorMsg('Invalid Email');\r\n        flag = false;\r\n      }\r\n    }\r\n    if (!login.password) {\r\n      setIsPasswordValidateError(true);\r\n      setPasswordValidateErrorMsg('Password is Required');\r\n      flag = false;\r\n    } else {\r\n      if (mediumRegex.test(login.password)) {\r\n        setIsPasswordValidateError(false);\r\n        setPasswordValidateErrorMsg('');\r\n        flag = true;\r\n      } else {\r\n        setIsPasswordValidateError(true);\r\n        setPasswordValidateErrorMsg('Password is Required');\r\n        flag = false;\r\n      }\r\n    }\r\n    return flag;\r\n  };\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      getConfiguration();\r\n    }, 4000);\r\n  }, []);\r\n\r\n  const loadJson = async () => {\r\n    try {\r\n    } catch (error) {\r\n      console.error('Error checking file data:', error);\r\n    }\r\n  };\r\n\r\n  const handlesubmit = async (event: any) => {\r\n    event?.preventDefault();\r\n    var flag = validateForm(event);\r\n    if (flag) {\r\n      try {\r\n        debugger;\r\n        const res = await APIservice.httpPost('/api/admin/users/login', login);\r\n        if (res && res.status == 200) {\r\n          setEmail(login.email);\r\n          setRefreshToken(res.recordList[0].refreshToken);\r\n          setSessionToken(res.recordList[0].token);\r\n          setUserId(res.recordList[0].id);\r\n          let detail: any;\r\n          detail = res.recordList[0];\r\n          setCrendientials(res.recordList[0]);\r\n          localStorage.setItem(\r\n            'DefaultCurrency',\r\n            JSON.stringify(res.recordList[0].defaultCurrency[0])\r\n          );\r\n          let isFirstLogin = JSON.parse(localStorage.getItem('isFirstLogin'));\r\n          // if(!isFirstLogin) {\r\n\r\n          // }\r\n          isFirstLogin = isFirstLogin == false ? false : true;\r\n          if (login.email === 'admin@admin.com' && isFirstLogin) {\r\n            setIsLogin(false);\r\n            setIsChangeEmail(true);\r\n            setIsChangePassword(false);\r\n            setIs2FAOpen(false);\r\n            setIs2FAQRCode(false);\r\n            setIs2FAEnter(false);\r\n          } else if (login.password === 'Demo@1234' && isFirstLogin) {\r\n            setIsLogin(false);\r\n            setIsChangeEmail(false);\r\n            setIsChangePassword(true);\r\n            setIs2FAOpen(false);\r\n            setIs2FAQRCode(false);\r\n            setIs2FAEnter(false);\r\n          } else {\r\n            if (detail.isTwoFactorEnable) {\r\n              //Enable 2FA\r\n              setIsLogin(false);\r\n              setIsChangeEmail(false);\r\n              setIsChangePassword(false);\r\n              setIs2FAQRCode(false);\r\n              setIs2FAEnter(false);\r\n              setIs2FAOpen(true);\r\n            } else {\r\n              if (detail.isTwoFactorEnable == false) {\r\n                localStorage.setItem(\r\n                  'RefreshToken',\r\n                  res.recordList[0].refreshToken\r\n                );\r\n                localStorage.setItem('SessionToken', res.recordList[0].token);\r\n                localStorage.setItem('UserId', res.recordList[0].id);\r\n                localStorage.setItem(\r\n                  'Credentials',\r\n                  JSON.stringify(res.recordList[0])\r\n                );\r\n                localStorage.setItem(\r\n                  'DefaultCurrency',\r\n                  JSON.stringify(res.recordList[0].defaultCurrency[0])\r\n                );\r\n                localStorage.setItem('isFirstLogin', JSON.stringify(false));\r\n                // if (detail.roleId === 3 && detail.pagePermissions.length === 0) {\r\n                //   navigate('/nopagepermission');\r\n                // }\r\n                // else {\r\n                //   navigate('/admin/dashboard');\r\n                // }\r\n                // navigate('/admin/dashboard');\r\n                updateFCMToken();\r\n                const token = localStorage.getItem('SessionToken');\r\n                const refreshToken = localStorage.getItem('RefreshToken');\r\n                let response = await APIservice.httpPost(\r\n                  '/api/admin/systemflags/getAdminSystemFlag',\r\n                  {},\r\n                  token,\r\n                  refreshToken\r\n                );\r\n                console.log(response.recordList);\r\n\r\n                let data = response.recordList[0].systemFlag[0].value;\r\n                localStorage.setItem('DateFormat', data);\r\n\r\n                let profilePicApproveIndex =\r\n                  response.recordList[0].systemFlag.findIndex(\r\n                    (c) => c.name === 'isUserProfilePicApprove'\r\n                  );\r\n                let isUserProfilePicApprove =\r\n                  response.recordList[0].systemFlag[profilePicApproveIndex]\r\n                    .value;\r\n                localStorage.setItem(\r\n                  'isUserProfilePicApprove',\r\n                  isUserProfilePicApprove\r\n                );\r\n\r\n                let _data = response.recordList;\r\n                if (_data && _data.length > 0) {\r\n                  for (let i = 0; i < _data.length; i++) {\r\n                    for (let j = 0; j < _data[i].group.length; j++) {\r\n                      if (\r\n                        _data[i].group[j].systemFlag &&\r\n                        _data[i].group[j].systemFlag.length > 0\r\n                      ) {\r\n                        let customFieldIndex = _data[i].group[\r\n                          j\r\n                        ].systemFlag.findIndex(\r\n                          (c) => c.name === 'isEnableCustomFields'\r\n                        );\r\n                        if (customFieldIndex >= 0) {\r\n                          let isEnableCustomFields =\r\n                            _data[i].group[j].systemFlag[customFieldIndex]\r\n                              .value;\r\n                          localStorage.setItem(\r\n                            'isEnableCustomFields',\r\n                            isEnableCustomFields\r\n                          );\r\n                        }\r\n\r\n                        let profilePicApproveIndex = _data[i].group[\r\n                          j\r\n                        ].systemFlag.findIndex(\r\n                          (c) => c.name === 'isUserProfilePicApprove'\r\n                        );\r\n                        if (profilePicApproveIndex >= 0) {\r\n                          let isUserProfilePicApprove =\r\n                            _data[i].group[j].systemFlag[profilePicApproveIndex]\r\n                              .value;\r\n                          localStorage.setItem(\r\n                            'isUserProfilePicApprove',\r\n                            isUserProfilePicApprove\r\n                          );\r\n                        }\r\n\r\n                        let familyIndex = _data[i].group[\r\n                          j\r\n                        ].systemFlag.findIndex(\r\n                          (c) => c.name === 'isEnableFamilyDetails'\r\n                        );\r\n                        if (familyIndex >= 0) {\r\n                          let isEnableFamilyDetails =\r\n                            _data[i].group[j].systemFlag[familyIndex].value;\r\n                          localStorage.setItem(\r\n                            'isEnableFamilyDetails',\r\n                            isEnableFamilyDetails\r\n                          );\r\n                        }\r\n\r\n                        let astroIndex = _data[i].group[j].systemFlag.findIndex(\r\n                          (c) => c.name === 'isEnableAstrologicDetails'\r\n                        );\r\n                        if (astroIndex >= 0) {\r\n                          let isEnableAstrologicDetails =\r\n                            _data[i].group[j].systemFlag[astroIndex].value;\r\n                          localStorage.setItem(\r\n                            'isEnableAstrologicDetails',\r\n                            isEnableAstrologicDetails\r\n                          );\r\n                        }\r\n\r\n                        let lifeStyleIndex = _data[i].group[\r\n                          j\r\n                        ].systemFlag.findIndex(\r\n                          (c) => c.name === 'isEnableLifeStyles'\r\n                        );\r\n                        if (lifeStyleIndex >= 0) {\r\n                          let isEnableLifeStyles =\r\n                            _data[i].group[j].systemFlag[lifeStyleIndex].value;\r\n                          localStorage.setItem(\r\n                            'isEnableLifeStyles',\r\n                            isEnableLifeStyles\r\n                          );\r\n                        }\r\n\r\n                        let communityIndex = _data[i].group[\r\n                          j\r\n                        ].systemFlag.findIndex(\r\n                          (c) => c.name === 'isEnableCommunity'\r\n                        );\r\n                        if (communityIndex >= 0) {\r\n                          let isEnableCommunity =\r\n                            _data[i].group[j].systemFlag[communityIndex].value;\r\n                          localStorage.setItem(\r\n                            'isEnableCommunity',\r\n                            isEnableCommunity\r\n                          );\r\n                        }\r\n\r\n                        let subCommunityIndex = _data[i].group[\r\n                          j\r\n                        ].systemFlag.findIndex(\r\n                          (c) => c.name === 'isEnableSubCommunity'\r\n                        );\r\n                        if (subCommunityIndex >= 0) {\r\n                          let isEnableSubCommunity =\r\n                            _data[i].group[j].systemFlag[subCommunityIndex]\r\n                              .value;\r\n                          localStorage.setItem(\r\n                            'isEnableSubCommunity',\r\n                            isEnableSubCommunity\r\n                          );\r\n                        }\r\n                      }\r\n                    }\r\n\r\n                    if (_data[i].systemFlag && _data[i].systemFlag.length > 0) {\r\n                      let customFieldIndex = _data[i].systemFlag.findIndex(\r\n                        (c) => c.name === 'isEnableCustomFields'\r\n                      );\r\n                      if (customFieldIndex >= 0) {\r\n                        let isEnableCustomFields =\r\n                          _data[i].systemFlag[customFieldIndex].value;\r\n                        localStorage.setItem(\r\n                          'isEnableCustomFields',\r\n                          isEnableCustomFields\r\n                        );\r\n                      }\r\n\r\n                      let profilePicApproveIndex = _data[\r\n                        i\r\n                      ].systemFlag.findIndex(\r\n                        (c) => c.name === 'isUserProfilePicApprove'\r\n                      );\r\n                      if (profilePicApproveIndex >= 0) {\r\n                        let isUserProfilePicApprove =\r\n                          _data[i].systemFlag[profilePicApproveIndex].value;\r\n                        localStorage.setItem(\r\n                          'isUserProfilePicApprove',\r\n                          isUserProfilePicApprove\r\n                        );\r\n                      }\r\n\r\n                      let familyIndex = _data[i].systemFlag.findIndex(\r\n                        (c) => c.name === 'isEnableFamilyDetails'\r\n                      );\r\n                      if (familyIndex >= 0) {\r\n                        let isEnableFamilyDetails =\r\n                          _data[i].systemFlag[familyIndex].value;\r\n                        localStorage.setItem(\r\n                          'isEnableFamilyDetails',\r\n                          isEnableFamilyDetails\r\n                        );\r\n                      }\r\n\r\n                      let astroIndex = _data[i].systemFlag.findIndex(\r\n                        (c) => c.name === 'isEnableAstrologicDetails'\r\n                      );\r\n                      if (astroIndex >= 0) {\r\n                        let isEnableAstrologicDetails =\r\n                          _data[i].systemFlag[astroIndex].value;\r\n                        localStorage.setItem(\r\n                          'isEnableAstrologicDetails',\r\n                          isEnableAstrologicDetails\r\n                        );\r\n                      }\r\n\r\n                      let lifeStyleIndex = _data[i].systemFlag.findIndex(\r\n                        (c) => c.name === 'isEnableLifeStyles'\r\n                      );\r\n                      if (lifeStyleIndex >= 0) {\r\n                        let isEnableLifeStyles =\r\n                          _data[i].systemFlag[lifeStyleIndex].value;\r\n                        localStorage.setItem(\r\n                          'isEnableLifeStyles',\r\n                          isEnableLifeStyles\r\n                        );\r\n                      }\r\n\r\n                      let communityIndex = _data[i].systemFlag.findIndex(\r\n                        (c) => c.name === 'isEnableCommunity'\r\n                      );\r\n                      if (communityIndex >= 0) {\r\n                        let isEnableCommunity =\r\n                          _data[i].systemFlag[communityIndex].value;\r\n                        localStorage.setItem(\r\n                          'isEnableCommunity',\r\n                          isEnableCommunity\r\n                        );\r\n                      }\r\n\r\n                      let subCommunityIndex = _data[i].systemFlag.findIndex(\r\n                        (c) => c.name === 'isEnableSubCommunity'\r\n                      );\r\n                      if (subCommunityIndex >= 0) {\r\n                        let isEnableSubCommunity =\r\n                          _data[i].systemFlag[subCommunityIndex].value;\r\n                        localStorage.setItem(\r\n                          'isEnableCommunity',\r\n                          isEnableSubCommunity\r\n                        );\r\n                      }\r\n                    }\r\n                  }\r\n                }\r\n                if (\r\n                  detail.roleId === 3 &&\r\n                  detail.pagePermissions.length === 0\r\n                ) {\r\n                  navigate('/admin/nopagepermission');\r\n                } else {\r\n                  if (\r\n                    detail.roleId === 3 &&\r\n                    detail.pagePermissions.length > 0\r\n                  ) {\r\n                    let index = detail.pagePermissions.length - 1;\r\n                    let page: any = detail.pagePermissions[index];\r\n                    navigate('/admin/dashboard');\r\n                  } else {\r\n                    navigate('/admin/dashboard');\r\n                  }\r\n                }\r\n              } else {\r\n                //Setup 2FA\r\n                setIsLogin(false);\r\n                setIsChangeEmail(false);\r\n                setIsChangePassword(false);\r\n                setIs2FAOpen(true);\r\n                setIs2FAQRCode(false);\r\n                setIs2FAEnter(false);\r\n              }\r\n            }\r\n          }\r\n        } else if (res && res.status == 500) {\r\n          toast.error('User does not exists!', {\r\n            autoClose: 6000,\r\n            hideProgressBar: true,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n            theme: 'colored'\r\n          });\r\n        } else if (res.message === 'Password Mismatch') {\r\n          toast.error('Invalid Credentials!', {\r\n            autoClose: 6000,\r\n            hideProgressBar: true,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n            theme: 'colored'\r\n          });\r\n        }\r\n      } catch (error: any) {\r\n        console.error(error);\r\n      }\r\n    }\r\n    history.go(1);\r\n  };\r\n\r\n  const updateFCMToken = async () => {\r\n    try {\r\n      const token = localStorage.getItem('SessionToken');\r\n      const refreshToken = localStorage.getItem('RefreshToken');\r\n      const fcmToken = sessionStorage.getItem('fcmToken');\r\n      let response = await APIservice.httpPost(\r\n        '/api/admin/users/updateFCMToken',\r\n        { fcmToken: fcmToken },\r\n        token,\r\n        refreshToken\r\n      );\r\n    } catch (error: any) {\r\n      toast.error(error.message, {\r\n        autoClose: 6000,\r\n        hideProgressBar: true,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: 'colored'\r\n      });\r\n    }\r\n  };\r\n\r\n  const validateChangeEmail = (e: any) => {\r\n    const { name, value } = e.target;\r\n    if (value) {\r\n      if (validator.isEmail(e.target.value)) {\r\n        setIsChangeEmailValidateError(false);\r\n        setChangeEmailValidateErrorMsg('');\r\n      } else {\r\n        setIsChangeEmailValidateError(true);\r\n        setChangeEmailValidateErrorMsg('Invalid Email');\r\n      }\r\n    } else {\r\n      setIsChangeEmailValidateError(true);\r\n      setChangeEmailValidateErrorMsg('Email is Required');\r\n    }\r\n  };\r\n\r\n  const handleInputDefaultEmailChange = (\r\n    event: ChangeEvent<HTMLInputElement>\r\n  ) => {\r\n    const { name, value } = event.target;\r\n    setChangeEmail({ ...changeEmail, [name]: value });\r\n  };\r\n\r\n  const handleupdateEmail = async (event: any) => {\r\n    event?.preventDefault();\r\n    try {\r\n      const token = sessionToken; //localStorage.getItem('SessionToken');\r\n      // const refreshToken = localStorage.getItem('RefreshToken');\r\n      const res = await APIservice.httpPost(\r\n        '/api/admin/users/updateEmail',\r\n        { email: changeEmail.email },\r\n        token,\r\n        refreshToken\r\n      );\r\n      if (res.status === 200) {\r\n        setEmail(changeEmail.email);\r\n        setIsLogin(false);\r\n        setIsChangeEmail(false);\r\n        setIsChangePassword(true);\r\n      } else if (res && res.status === 401) {\r\n        navigate('/admin');\r\n      } else if (res.status == 500) {\r\n        toast.error(res.message, {\r\n          autoClose: 6000,\r\n          hideProgressBar: true,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: 'colored',\r\n          position: toast.POSITION.TOP_RIGHT\r\n        });\r\n      } else if (res.status == 400) {\r\n        toast.error(res.message, {\r\n          autoClose: 6000,\r\n          hideProgressBar: true,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: 'colored',\r\n          position: toast.POSITION.TOP_RIGHT\r\n        });\r\n      } else if (res.status == 300) {\r\n        toast.error(res.message, {\r\n          autoClose: 6000,\r\n          hideProgressBar: true,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: 'colored',\r\n          position: toast.POSITION.TOP_RIGHT\r\n        });\r\n      } else if (res.status == 404) {\r\n        toast.error(res.message, {\r\n          autoClose: 6000,\r\n          hideProgressBar: true,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: 'colored',\r\n          position: toast.POSITION.TOP_RIGHT\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n      toast.error(error, {\r\n        autoClose: 6000,\r\n        hideProgressBar: true,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: 'colored',\r\n        position: toast.POSITION.TOP_RIGHT\r\n      });\r\n    }\r\n  };\r\n\r\n  const skipUpdateEmail = async (event: any) => {\r\n    setIsLogin(false);\r\n    setIsChangeEmail(false);\r\n    setIsChangePassword(true);\r\n  };\r\n\r\n  const ValidateChangePassword = (e: any) => {\r\n    const { name, value } = e.target;\r\n    if (value) {\r\n      if (mediumRegex.test(e.target.value)) {\r\n        setIsChangePasswordValidateError(false);\r\n        setChangePasswordValidateErrorMsg('');\r\n      } else {\r\n        setIsChangePasswordValidateError(true);\r\n        setChangePasswordValidateErrorMsg('Password is Required');\r\n      }\r\n    } else {\r\n      setIsChangePasswordValidateError(true);\r\n      setChangePasswordValidateErrorMsg('Password is Required');\r\n    }\r\n  };\r\n\r\n  const handleInputDefaultPasswordChange = (\r\n    event: ChangeEvent<HTMLInputElement>\r\n  ) => {\r\n    const { name, value } = event.target;\r\n    setChangePassword({ ...changePassword, [name]: value });\r\n  };\r\n\r\n  const handleupdatePassword = async (event: any) => {\r\n    event?.preventDefault();\r\n    try {\r\n      const token = sessionToken; //localStorage.getItem('SessionToken');\r\n      //const refreshToken = localStorage.getItem('RefreshToken');\r\n      const res = await APIservice.httpPost(\r\n        '/api/admin/users/updatePassword',\r\n        { password: changePassword.password },\r\n        token,\r\n        refreshToken\r\n      );\r\n      if (res.status === 200) {\r\n        localStorage.setItem('isFirstLogin', JSON.stringify(false));\r\n        setIsLogin(false);\r\n        setIsChangeEmail(false);\r\n        setIsChangePassword(false);\r\n        setIs2FAOpen(true);\r\n        setIs2FAQRCode(false);\r\n        setIs2FAEnter(false);\r\n      } else if (res && res.status === 401) {\r\n        navigate('/admin');\r\n      } else if (res.status == 500) {\r\n        toast.error(res.message, {\r\n          autoClose: 6000,\r\n          hideProgressBar: true,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: 'colored',\r\n          position: toast.POSITION.TOP_RIGHT\r\n        });\r\n      } else if (res.status == 400) {\r\n        toast.error(res.message, {\r\n          autoClose: 6000,\r\n          hideProgressBar: true,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: 'colored',\r\n          position: toast.POSITION.TOP_RIGHT\r\n        });\r\n      } else if (res.status == 300) {\r\n        toast.error(res.message, {\r\n          autoClose: 6000,\r\n          hideProgressBar: true,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: 'colored',\r\n          position: toast.POSITION.TOP_RIGHT\r\n        });\r\n      } else if (res.status == 404) {\r\n        toast.error(res.message, {\r\n          autoClose: 6000,\r\n          hideProgressBar: true,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: 'colored',\r\n          position: toast.POSITION.TOP_RIGHT\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n      toast.error(error, {\r\n        autoClose: 6000,\r\n        hideProgressBar: true,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: 'colored',\r\n        position: toast.POSITION.TOP_RIGHT\r\n      });\r\n    }\r\n  };\r\n\r\n  const backUpdatePassword = async (event: any) => {\r\n    setIsLogin(false);\r\n    setIsChangeEmail(true);\r\n    setIsChangePassword(false);\r\n  };\r\n\r\n  const skipUpdatePassword = async (event: any) => {\r\n    localStorage.setItem('RefreshToken', refreshToken);\r\n    localStorage.setItem('SessionToken', sessionToken);\r\n    localStorage.setItem('UserId', userId);\r\n    localStorage.setItem('Credentials', JSON.stringify(crendientials));\r\n    localStorage.setItem('isFirstLogin', JSON.stringify(false));\r\n    // navigate('/admin/dashboard');\r\n    updateFCMToken();\r\n    const token = sessionToken;\r\n    let response = await APIservice.httpPost(\r\n      '/api/admin/systemflags/getAdminSystemFlag',\r\n      {},\r\n      token,\r\n      refreshToken\r\n    );\r\n    let data = response.recordList[0].systemFlag[0].value;\r\n    localStorage.setItem('DateFormat', data);\r\n    let _data = response.recordList;\r\n    if (_data && _data.length > 0) {\r\n      for (let i = 0; i < _data.length; i++) {\r\n        for (let j = 0; j < _data[i].group.length; j++) {\r\n          if (\r\n            _data[i].group[j].systemFlag &&\r\n            _data[i].group[j].systemFlag.length > 0\r\n          ) {\r\n            let customFieldIndex = _data[i].group[j].systemFlag.findIndex(\r\n              (c) => c.name === 'isEnableCustomFields'\r\n            );\r\n            if (customFieldIndex >= 0) {\r\n              let isEnableCustomFields =\r\n                _data[i].group[j].systemFlag[customFieldIndex].value;\r\n              localStorage.setItem(\r\n                'isEnableCustomFields',\r\n                isEnableCustomFields\r\n              );\r\n            }\r\n\r\n            let profilePicApproveIndex = _data[i].group[j].systemFlag.findIndex(\r\n              (c) => c.name === 'isUserProfilePicApprove'\r\n            );\r\n            if (profilePicApproveIndex >= 0) {\r\n              let isUserProfilePicApprove =\r\n                _data[i].group[j].systemFlag[profilePicApproveIndex].value;\r\n              localStorage.setItem(\r\n                'isUserProfilePicApprove',\r\n                isUserProfilePicApprove\r\n              );\r\n            }\r\n\r\n            let familyIndex = _data[i].group[j].systemFlag.findIndex(\r\n              (c) => c.name === 'isEnableFamilyDetails'\r\n            );\r\n            if (familyIndex >= 0) {\r\n              let isEnableFamilyDetails =\r\n                _data[i].group[j].systemFlag[familyIndex].value;\r\n              localStorage.setItem(\r\n                'isEnableFamilyDetails',\r\n                isEnableFamilyDetails\r\n              );\r\n            }\r\n\r\n            let astroIndex = _data[i].group[j].systemFlag.findIndex(\r\n              (c) => c.name === 'isEnableAstrologicDetails'\r\n            );\r\n            if (astroIndex >= 0) {\r\n              let isEnableAstrologicDetails =\r\n                _data[i].group[j].systemFlag[astroIndex].value;\r\n              localStorage.setItem(\r\n                'isEnableAstrologicDetails',\r\n                isEnableAstrologicDetails\r\n              );\r\n            }\r\n\r\n            let lifeStyleIndex = _data[i].group[j].systemFlag.findIndex(\r\n              (c) => c.name === 'isEnableLifeStyles'\r\n            );\r\n            if (lifeStyleIndex >= 0) {\r\n              let isEnableLifeStyles =\r\n                _data[i].group[j].systemFlag[lifeStyleIndex].value;\r\n              localStorage.setItem('isEnableLifeStyles', isEnableLifeStyles);\r\n            }\r\n\r\n            let communityIndex = _data[i].group[j].systemFlag.findIndex(\r\n              (c) => c.name === 'isEnableCommunity'\r\n            );\r\n            if (communityIndex >= 0) {\r\n              let isEnableCommunity =\r\n                _data[i].group[j].systemFlag[communityIndex].value;\r\n              localStorage.setItem('isEnableCommunity', isEnableCommunity);\r\n            }\r\n\r\n            let subCommunityIndex = _data[i].group[j].systemFlag.findIndex(\r\n              (c) => c.name === 'isEnableSubCommunity'\r\n            );\r\n            if (subCommunityIndex >= 0) {\r\n              let isEnableSubCommunity =\r\n                _data[i].group[j].systemFlag[subCommunityIndex].value;\r\n              localStorage.setItem(\r\n                'isEnableSubCommunity',\r\n                isEnableSubCommunity\r\n              );\r\n            }\r\n          }\r\n        }\r\n\r\n        if (_data[i].systemFlag && _data[i].systemFlag.length > 0) {\r\n          let customFieldIndex = _data[i].systemFlag.findIndex(\r\n            (c) => c.name === 'isEnableCustomFields'\r\n          );\r\n          if (customFieldIndex >= 0) {\r\n            let isEnableCustomFields =\r\n              _data[i].systemFlag[customFieldIndex].value;\r\n            localStorage.setItem('isEnableCustomFields', isEnableCustomFields);\r\n          }\r\n\r\n          let profilePicApproveIndex = _data[i].systemFlag.findIndex(\r\n            (c) => c.name === 'isUserProfilePicApprove'\r\n          );\r\n          if (profilePicApproveIndex >= 0) {\r\n            let isUserProfilePicApprove =\r\n              _data[i].systemFlag[profilePicApproveIndex].value;\r\n            localStorage.setItem(\r\n              'isUserProfilePicApprove',\r\n              isUserProfilePicApprove\r\n            );\r\n          }\r\n\r\n          let familyIndex = _data[i].systemFlag.findIndex(\r\n            (c) => c.name === 'isEnableFamilyDetails'\r\n          );\r\n          if (familyIndex >= 0) {\r\n            let isEnableFamilyDetails = _data[i].systemFlag[familyIndex].value;\r\n            localStorage.setItem(\r\n              'isEnableFamilyDetails',\r\n              isEnableFamilyDetails\r\n            );\r\n          }\r\n\r\n          let astroIndex = _data[i].systemFlag.findIndex(\r\n            (c) => c.name === 'isEnableAstrologicDetails'\r\n          );\r\n          if (astroIndex >= 0) {\r\n            let isEnableAstrologicDetails =\r\n              _data[i].systemFlag[astroIndex].value;\r\n            localStorage.setItem(\r\n              'isEnableAstrologicDetails',\r\n              isEnableAstrologicDetails\r\n            );\r\n          }\r\n\r\n          let lifeStyleIndex = _data[i].systemFlag.findIndex(\r\n            (c) => c.name === 'isEnableLifeStyles'\r\n          );\r\n          if (lifeStyleIndex >= 0) {\r\n            let isEnableLifeStyles = _data[i].systemFlag[lifeStyleIndex].value;\r\n            localStorage.setItem('isEnableLifeStyles', isEnableLifeStyles);\r\n          }\r\n\r\n          let communityIndex = _data[i].systemFlag.findIndex(\r\n            (c) => c.name === 'isEnableCommunity'\r\n          );\r\n          if (communityIndex >= 0) {\r\n            let isEnableCommunity = _data[i].systemFlag[communityIndex].value;\r\n            localStorage.setItem('isEnableCommunity', isEnableCommunity);\r\n          }\r\n\r\n          let subCommunityIndex = _data[i].systemFlag.findIndex(\r\n            (c) => c.name === 'isEnableSubCommunity'\r\n          );\r\n          if (subCommunityIndex >= 0) {\r\n            let isEnableSubCommunity =\r\n              _data[i].systemFlag[subCommunityIndex].value;\r\n            localStorage.setItem('isEnableCommunity', isEnableSubCommunity);\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    if (\r\n      crendientials.roleId === 3 &&\r\n      crendientials.pagePermissions.length === 0\r\n    ) {\r\n      navigate('/admin/nopagepermission');\r\n    } else {\r\n      navigate('/admin/dashboard');\r\n    }\r\n  };\r\n\r\n  const handleSetup2FA = async (e: any) => {\r\n    e?.preventDefault();\r\n    try {\r\n      const token = sessionToken;\r\n      const res = await APIservice.httpPost(\r\n        '/api/admin/users/generateOTP',\r\n        {},\r\n        token,\r\n        refreshToken\r\n      );\r\n      if (res.status === 200) {\r\n        let cred = crendientials;\r\n        cred.isTwoFactorEnable = 1;\r\n        setCrendientials(cred);\r\n        setqrCodeUrl(res.recordList[0].otpAuthUrl);\r\n        setBase32(res.recordList[0].baseSecret);\r\n        setIs2FAOpen(false);\r\n        setIs2FAQRCode(true);\r\n        setIs2FAEnter(false);\r\n      } else if (res && res.status === 401) {\r\n        navigate('/admin');\r\n      } else if (res.status == 500) {\r\n        toast.error(res.message, {\r\n          autoClose: 6000,\r\n          hideProgressBar: true,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: 'colored',\r\n          position: toast.POSITION.TOP_RIGHT\r\n        });\r\n      } else if (res.status == 400) {\r\n        toast.error(res.message, {\r\n          autoClose: 6000,\r\n          hideProgressBar: true,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: 'colored',\r\n          position: toast.POSITION.TOP_RIGHT\r\n        });\r\n      } else if (res.status == 300) {\r\n        toast.error(res.message, {\r\n          autoClose: 6000,\r\n          hideProgressBar: true,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: 'colored',\r\n          position: toast.POSITION.TOP_RIGHT\r\n        });\r\n      } else if (res.status == 404) {\r\n        toast.error(res.message, {\r\n          autoClose: 6000,\r\n          hideProgressBar: true,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: 'colored',\r\n          position: toast.POSITION.TOP_RIGHT\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n      toast.error(error, {\r\n        autoClose: 6000,\r\n        hideProgressBar: true,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: 'colored',\r\n        position: toast.POSITION.TOP_RIGHT\r\n      });\r\n    }\r\n  };\r\n\r\n  const remindTwoFactor = async (e: any) => {\r\n    //null\r\n    e?.preventDefault();\r\n    try {\r\n      const token = sessionToken;\r\n      //const refreshToken = localStorage.getItem('RefreshToken');\r\n      const res = await APIservice.httpPost(\r\n        '/api/admin/users/updateAuthenticationStatus',\r\n        { isTwoFactorEnable: null },\r\n        token,\r\n        refreshToken\r\n      );\r\n      if (res.status === 200) {\r\n        localStorage.setItem('RefreshToken', refreshToken);\r\n        localStorage.setItem('SessionToken', sessionToken);\r\n        localStorage.setItem('UserId', userId);\r\n        localStorage.setItem('Credentials', JSON.stringify(crendientials));\r\n\r\n        let permissionDetail = JSON.parse(localStorage.getItem('Credentials'));\r\n        if (\r\n          permissionDetail.roleId === 3 &&\r\n          permissionDetail.pagePermissions.length === 0\r\n        ) {\r\n          navigate('/admin/nopagepermission');\r\n        } else {\r\n          navigate('/admin/dashboard');\r\n        }\r\n\r\n        // navigate('/admin/dashboard');\r\n        updateFCMToken();\r\n        const token = sessionToken;\r\n        let response = await APIservice.httpPost(\r\n          '/api/admin/systemflags/getAdminSystemFlag',\r\n          {},\r\n          token,\r\n          refreshToken\r\n        );\r\n        let data = response.recordList[0].systemFlag[0].value;\r\n        localStorage.setItem('DateFormat', data);\r\n      } else if (res && res.status === 401) {\r\n        navigate('/admin');\r\n      } else if (res.status == 500) {\r\n        toast.error(res.message, {\r\n          autoClose: 6000,\r\n          hideProgressBar: true,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: 'colored',\r\n          position: toast.POSITION.TOP_RIGHT\r\n        });\r\n      } else if (res.status == 400) {\r\n        toast.error(res.message, {\r\n          autoClose: 6000,\r\n          hideProgressBar: true,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: 'colored',\r\n          position: toast.POSITION.TOP_RIGHT\r\n        });\r\n      } else if (res.status == 300) {\r\n        toast.error(res.message, {\r\n          autoClose: 6000,\r\n          hideProgressBar: true,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: 'colored',\r\n          position: toast.POSITION.TOP_RIGHT\r\n        });\r\n      } else if (res.status == 404) {\r\n        toast.error(res.message, {\r\n          autoClose: 6000,\r\n          hideProgressBar: true,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: 'colored',\r\n          position: toast.POSITION.TOP_RIGHT\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n      toast.error(error, {\r\n        autoClose: 6000,\r\n        hideProgressBar: true,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: 'colored',\r\n        position: toast.POSITION.TOP_RIGHT\r\n      });\r\n    }\r\n  };\r\n\r\n  const skipTwoFactor = async (e: any) => {\r\n    //false\r\n    e?.preventDefault();\r\n    try {\r\n      const token = sessionToken; //localStorage.getItem('SessionToken');\r\n      // const refreshToken = localStorage.getItem('RefreshToken');\r\n      const res = await APIservice.httpPost(\r\n        '/api/admin/users/updateAuthenticationStatus',\r\n        { isTwoFactorEnable: false },\r\n        token,\r\n        refreshToken\r\n      );\r\n      if (res.status === 200) {\r\n        localStorage.setItem('RefreshToken', refreshToken);\r\n        localStorage.setItem('SessionToken', sessionToken);\r\n        localStorage.setItem('UserId', userId);\r\n        localStorage.setItem('Credentials', JSON.stringify(crendientials));\r\n        let permissionDetail = JSON.parse(localStorage.getItem('Credentials'));\r\n        if (\r\n          permissionDetail.roleId === 3 &&\r\n          permissionDetail.pagePermissions.length === 0\r\n        ) {\r\n          navigate('/admin/nopagepermission');\r\n        } else {\r\n          navigate('/admin/dashboard');\r\n        }\r\n\r\n        // navigate('/admin/dashboard');\r\n        updateFCMToken();\r\n        const token = sessionToken;\r\n        let response = await APIservice.httpPost(\r\n          '/api/admin/systemflags/getAdminSystemFlag',\r\n          {},\r\n          token,\r\n          refreshToken\r\n        );\r\n        let data = response.recordList[0].systemFlag[0].value;\r\n        localStorage.setItem('DateFormat', data);\r\n      } else if (res && res.status === 401) {\r\n        navigate('/admin');\r\n      } else if (res.status == 500) {\r\n        toast.error(res.message, {\r\n          autoClose: 6000,\r\n          hideProgressBar: true,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: 'colored',\r\n          position: toast.POSITION.TOP_RIGHT\r\n        });\r\n      } else if (res.status == 400) {\r\n        toast.error(res.message, {\r\n          autoClose: 6000,\r\n          hideProgressBar: true,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: 'colored',\r\n          position: toast.POSITION.TOP_RIGHT\r\n        });\r\n      } else if (res.status == 300) {\r\n        toast.error(res.message, {\r\n          autoClose: 6000,\r\n          hideProgressBar: true,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: 'colored',\r\n          position: toast.POSITION.TOP_RIGHT\r\n        });\r\n      } else if (res.status == 404) {\r\n        toast.error(res.message, {\r\n          autoClose: 6000,\r\n          hideProgressBar: true,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: 'colored',\r\n          position: toast.POSITION.TOP_RIGHT\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n      toast.error(error, {\r\n        autoClose: 6000,\r\n        hideProgressBar: true,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: 'colored',\r\n        position: toast.POSITION.TOP_RIGHT\r\n      });\r\n    }\r\n  };\r\n\r\n  const validateTwoFactorCode = (e: any) => {\r\n    const { name, value } = e.target;\r\n    if (value) {\r\n      setIsAuthenticationCodeErrorError(false);\r\n      setAuthenticationCodeErrorMsg('');\r\n    } else {\r\n      setIsAuthenticationCodeErrorError(true);\r\n      setAuthenticationCodeErrorMsg('Email is Required');\r\n    }\r\n  };\r\n\r\n  const handleInputTwoFactorCodeChange = (\r\n    event: ChangeEvent<HTMLInputElement>\r\n  ) => {\r\n    const { name, value } = event.target;\r\n    setAuthenticationCode({ ...authenticationCode, [name]: value });\r\n  };\r\n\r\n  const handleVerifyAuthenticateCode = async (e: any) => {\r\n    e?.preventDefault();\r\n    try {\r\n      const token = sessionToken;\r\n      const res = await APIservice.httpPost(\r\n        '/api/admin/users/validateOTP',\r\n        { token: authenticationCode.twoFactorCode },\r\n        token,\r\n        refreshToken\r\n      );\r\n      if (res.status === 200) {\r\n        localStorage.setItem('RefreshToken', refreshToken);\r\n        localStorage.setItem('SessionToken', sessionToken);\r\n        localStorage.setItem('UserId', userId);\r\n        localStorage.setItem('Credentials', JSON.stringify(crendientials));\r\n        localStorage.setItem('isFirstLogin', JSON.stringify(false));\r\n        navigate('/admin/dashboard');\r\n        updateFCMToken();\r\n        const token = sessionToken;\r\n        let response = await APIservice.httpPost(\r\n          '/api/admin/systemflags/getAdminSystemFlag',\r\n          {},\r\n          token,\r\n          refreshToken\r\n        );\r\n        let data = response.recordList[0].systemFlag[0].value;\r\n        localStorage.setItem('DateFormat', data);\r\n      } else if (res && res.status === 401) {\r\n        //navigate('/admin');\r\n        toast.error('Invalid Code', {\r\n          autoClose: 6000,\r\n          hideProgressBar: true,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: 'colored',\r\n          position: toast.POSITION.TOP_RIGHT\r\n        });\r\n      } else if (res.status == 500) {\r\n        toast.error(res.message, {\r\n          autoClose: 6000,\r\n          hideProgressBar: true,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: 'colored',\r\n          position: toast.POSITION.TOP_RIGHT\r\n        });\r\n      } else if (res.status == 400) {\r\n        toast.error(res.message, {\r\n          autoClose: 6000,\r\n          hideProgressBar: true,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: 'colored',\r\n          position: toast.POSITION.TOP_RIGHT\r\n        });\r\n      } else if (res.status == 300) {\r\n        toast.error(res.message, {\r\n          autoClose: 6000,\r\n          hideProgressBar: true,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: 'colored',\r\n          position: toast.POSITION.TOP_RIGHT\r\n        });\r\n      } else if (res.status == 404) {\r\n        toast.error(res.message, {\r\n          autoClose: 6000,\r\n          hideProgressBar: true,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: 'colored',\r\n          position: toast.POSITION.TOP_RIGHT\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n      toast.error(error, {\r\n        autoClose: 6000,\r\n        hideProgressBar: true,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: 'colored',\r\n        position: toast.POSITION.TOP_RIGHT\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleConfigurationChange = (e: any) => {\r\n    setApiUrl(e.target.value);\r\n    setIsAPIUrlValidation(false);\r\n    setIsVerified(false);\r\n  };\r\n\r\n  const handleApiConfiguration = () => {\r\n    if (apiUrl) {\r\n      setActiveStep(1);\r\n    }\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    setPreviousVersionInstalled(e.target.value);\r\n    setVersion(null);\r\n  };\r\n\r\n  const handleLoadUrl = async (e) => {\r\n    const response = await fetch('/admin/variable.json'); // Adjust the file path as needed\r\n    const data = await response.json();\r\n    setApiUrl(data.REACT_APP_BASEURL);\r\n    setIsUrlErrorMsg(false);\r\n  };\r\n  const handleConfiguration = async (e: any) => {\r\n    e?.preventDefault();\r\n    if (!apiUrl) {\r\n      setIsAPIUrlValidation(true);\r\n    } else {\r\n      setIsLoading(true);\r\n      // data.REACT_APP_BASEURL = apiUrl;\r\n      // const data1 = JSON.stringify(data)\r\n      APIservice.config.apiUrl = apiUrl;\r\n      getConfiguration();\r\n    }\r\n  };\r\n\r\n  const handleCreateDatabaseUser = (e: any) => {\r\n    setIsCreateDatabaseUser(e.target.checked);\r\n  };\r\n\r\n  const getConfiguration = async () => {\r\n    try {\r\n      const res = await APIservice.httpPost(\r\n        '/api/admin/configuration/getConfiguration',\r\n        {}\r\n      );\r\n      if (res && res.status == 200) {\r\n        // const text = \"This is the content of the file.\";\r\n        setIsTakeHostData(res.recordList[0].isTakeHostDetail);\r\n        if (res.recordList[0].isTakeHostDetail) {\r\n          setIsConfiguration(true);\r\n          setIsLogin(false);\r\n          setActiveStep(0);\r\n        }\r\n        setIsVerified(true);\r\n        setIsLoading(false);\r\n        setIsShowLoader(false);\r\n        // if (apiUrl !== '')\r\n        //   localStorage.setItem('REACT_APP_BASEURL', apiUrl);\r\n        // const blob = new Blob(['Hello, world!'], { type: 'text/plain;charset=utf-8' });\r\n        // saveAs(blob, '../hello.txt');\r\n        // fileSa\r\n        // const emptyBlob = new Blob([], { type: 'text/plain' });\r\n        // saveAs(emptyBlob, 'variable.json');\r\n\r\n        // const blob = new Blob([text], { type: 'text/plain;charset=utf-8' });\r\n        // saveAs(blob, 'variable.json');\r\n      } else if (res.status == 500) {\r\n        toast.error(res.message, {\r\n          autoClose: 6000,\r\n          hideProgressBar: true,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: 'colored',\r\n          position: toast.POSITION.TOP_RIGHT\r\n        });\r\n      } else if (res.status == 400) {\r\n        toast.error(res.message, {\r\n          autoClose: 6000,\r\n          hideProgressBar: true,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: 'colored',\r\n          position: toast.POSITION.TOP_RIGHT\r\n        });\r\n      } else if (res.status == 300) {\r\n        toast.error(res.message, {\r\n          autoClose: 6000,\r\n          hideProgressBar: true,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: 'colored',\r\n          position: toast.POSITION.TOP_RIGHT\r\n        });\r\n      } else if (res.status == 404) {\r\n        toast.error(res.message, {\r\n          autoClose: 6000,\r\n          hideProgressBar: true,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: 'colored',\r\n          position: toast.POSITION.TOP_RIGHT\r\n        });\r\n      }\r\n    } catch (error) {\r\n      setIsLoading(false);\r\n      setIsConfiguration(true);\r\n      setIsLogin(false);\r\n      setIsVerified(false);\r\n      setIsUrlErrorMsg(true);\r\n      toast.error(error, {\r\n        autoClose: 6000,\r\n        hideProgressBar: true,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: 'colored',\r\n        position: toast.POSITION.TOP_RIGHT\r\n      });\r\n    }\r\n  };\r\n\r\n  // const removeFile = async () => {\r\n  //   try {\r\n  //     // Make a fetch request to your server to delete the file\r\n  //     const response = await fetch(`variable.json`, {\r\n  //       method: 'DELETE',\r\n  //       headers: {\r\n  //         'Content-Type': 'application/json'\r\n  //         // You might need to include additional headers, such as authorization tokens\r\n  //       }\r\n  //     });\r\n\r\n  //     if (response.ok) {\r\n  //       console.log(`File \"${fileName}\" has been removed.`);\r\n  //     } else {\r\n  //       console.error('Failed to remove file.');\r\n  //     }\r\n  //   } catch (error) {\r\n  //     console.error('An error occurred while removing the file:', error);\r\n  //   }\r\n  // }\r\n\r\n  const handleHostInputChange = (event: ChangeEvent<HTMLInputElement>) => {\r\n    const { name, value } = event.target;\r\n    setHostInput({ ...hostData, [name]: value });\r\n    setIsLoading(false);\r\n    setIsTeseted(false);\r\n    setisNoteForNoDatabaseFound(false);\r\n    setIsExistDatbaseAvailable(false);\r\n    databases.length = 0;\r\n  };\r\n\r\n  const handleAfterHostConnectionInputChange = (\r\n    event: ChangeEvent<HTMLInputElement>\r\n  ) => {\r\n    const { name, value } = event.target;\r\n    setHostInput({ ...hostData, [name]: value });\r\n    // setIsLoading(true);\r\n    // setIsTeseted(true);\r\n  };\r\n\r\n  const handleUpdateHostData = async (e: any) => {\r\n    if (!hostData.MYSQL_HOST) {\r\n      setIsHostRequired(true);\r\n    }\r\n    if (!hostData.MYSQL_USER) {\r\n      setIsUserRequired(true);\r\n    }\r\n    if (!hostData.MYSQL_PORT) {\r\n      setIsPortRequired(true);\r\n    }\r\n    // if (!hostData.MYSQL_DATABASE) {\r\n    //   setIsDatabaseNameRequired(true)\r\n    // }\r\n\r\n    // if (!hostData.MYSQL_PASSWORD) {\r\n    //   setIsPasswordRequired(true)\r\n    // }\r\n    else {\r\n      setIsHostRequired(false);\r\n      setIsPasswordRequired(false);\r\n      setIsUserRequired(false);\r\n      setIsPortRequired(false);\r\n      setIsDatabaseNameRequired(false);\r\n      setIsExistDatbaseAvailable(false);\r\n      setIsLoading(true);\r\n      e?.preventDefault();\r\n      // data.REACT_APP_BASEURL = apiUrl;\r\n      const res = await APIservice.httpPost(\r\n        '/api/admin/configuration/testConnection',\r\n        hostData\r\n      );\r\n\r\n      if (res.status === 200) {\r\n        debugger;\r\n        setIsLogin(true);\r\n        setIsTakeHostData(false);\r\n        setIsTeseted(true);\r\n        setIsLoading(false);\r\n        setDatabases(res.recordList);\r\n        setIsExistDatbaseAvailable(false);\r\n        setIsExistingVersion(false);\r\n        if (res.recordList != 0) {\r\n          setIsExistingVersion(true);\r\n          // version  res.recordList\r\n          setVersion(res.recordList[0]);\r\n        } else {\r\n          setVersion(null);\r\n        }\r\n      } else if (res && res.status == 401) {\r\n        setIsExistingVersion(false);\r\n        setIsTeseted(false);\r\n        // setIsExistDatbaseAvailable(true);\r\n        setisNoteForNoDatabaseFound(false);\r\n        setIsLoading(false);\r\n        toast.error('Invalid Code', {\r\n          autoClose: 6000,\r\n          hideProgressBar: true,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: 'colored',\r\n          position: toast.POSITION.TOP_RIGHT\r\n        });\r\n      } else if (res.status == 500) {\r\n        setIsExistingVersion(false);\r\n        setIsTeseted(false);\r\n        setIsLoading(false);\r\n        toast.error(res.message, {\r\n          autoClose: 6000,\r\n          hideProgressBar: true,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: 'colored',\r\n          position: toast.POSITION.TOP_RIGHT\r\n        });\r\n      } else if (res.status == 400) {\r\n        setIsExistingVersion(false);\r\n        setIsTeseted(false);\r\n        setIsLoading(false);\r\n        setIsExistDatbaseAvailable(true);\r\n        setisNoteForNoDatabaseFound(false);\r\n        toast.error(res.message, {\r\n          autoClose: 6000,\r\n          hideProgressBar: true,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: 'colored',\r\n          position: toast.POSITION.TOP_RIGHT\r\n        });\r\n      } else if (res.status == 300) {\r\n        setIsExistingVersion(false);\r\n        setIsTeseted(false);\r\n        setIsLoading(false);\r\n        setisNoteForNoDatabaseFound(false);\r\n        toast.error(res.message, {\r\n          autoClose: 6000,\r\n          hideProgressBar: true,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: 'colored',\r\n          position: toast.POSITION.TOP_RIGHT\r\n        });\r\n      } else if (res.status == 404) {\r\n        setIsExistingVersion(false);\r\n        setIsTeseted(false);\r\n        setisNoteForNoDatabaseFound(false);\r\n        setIsLoading(false);\r\n        toast.error(res.message, {\r\n          autoClose: 6000,\r\n          hideProgressBar: true,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: 'colored',\r\n          position: toast.POSITION.TOP_RIGHT\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  const saveAnddatabaseConfiguration = async (e: any) => {\r\n    setIsInstallSucessfully(false);\r\n\r\n    if (isTested) {\r\n      // }\r\n      // else{\r\n      setActiveStep(1);\r\n      setIsSetUpDatabase(true);\r\n      setDatabaseState('creating');\r\n      setIsVersionRequired(false);\r\n      setIsDatabaseRequired(false);\r\n      setIsLoading(false);\r\n      e?.preventDefault();\r\n      // data.REACT_APP_BASEURL = apiUrl;\r\n      let data1 = {\r\n        version: isExistingVersion ? version : null, //    \"1.0\",// isPreviousVersionInstalled ? version : null,\r\n        database: hostData.MYSQL_DATABASE,\r\n        username: hostData.MYSQL_USER,\r\n        password: hostData.MYSQL_PASSWORD,\r\n        port: hostData.MYSQL_PORT,\r\n        hostName: hostData.MYSQL_HOST\r\n      };\r\n    }\r\n  };\r\n\r\n  const handlehost = async () => {\r\n    setActiveStep(1);\r\n  };\r\n\r\n  const handleErrorBack = async () => {\r\n    setActiveStep(0);\r\n    setIsSetUpDatabase(false);\r\n    setIsInstallSucessfully(true);\r\n    setIsLoading(false);\r\n    setIsTeseted(false);\r\n    setIsExistingVersion(false);\r\n    // isTested && !isExistingVersion\r\n  };\r\n\r\n  const databaseConfiguration = async (e: any) => {\r\n    setIsInstallSucessfully(false);\r\n    if (!version && isPreviousVersionInstalled !== 'false') {\r\n      setIsVersionRequired(true);\r\n    }\r\n    if (!hostData.MYSQL_DATABASE) {\r\n      setIsDatabaseRequired(true);\r\n    } else {\r\n      setActiveStep(2);\r\n      setIsSetUpDatabase(true);\r\n      setDatabaseState('creating');\r\n      setIsVersionRequired(false);\r\n      setIsDatabaseRequired(false);\r\n      setIsLoading(true);\r\n      e?.preventDefault();\r\n\r\n      // data.REACT_APP_BASEURL = apiUrl;\r\n      let data1 = {\r\n        version: isExistingVersion ? version : null, //    '1.0',// isPreviousVersionInstalled ? version : null,\r\n        // 'MYSQL_DATABASE': hostData.MYSQL_DATABASE,\r\n        MYSQL_DATABASE: hostData.MYSQL_DATABASE,\r\n        hostName: hostData.MYSQL_HOST,\r\n        isCreateDatabaseUser: isCreatedatabaseUser,\r\n        username: hostData.MYSQL_USER,\r\n        password: hostData.MYSQL_PASSWORD,\r\n        port: hostData.MYSQL_PORT\r\n      };\r\n\r\n      const res = await APIservice.httpPost(\r\n        '/api/admin/configuration/databaseConfiguration',\r\n        data1\r\n      );\r\n\r\n      if (res.status === 200) {\r\n        setUserName(res.recordList[0].email);\r\n        setPassword('Demo@1234');\r\n        setDatabaseState('created');\r\n\r\n        if (ismasterData) {\r\n          setIsInstallMasterData(true);\r\n          isInstallMasterData = true;\r\n          let data1 = {\r\n            version: version\r\n          };\r\n          const res = await APIservice.httpPost(\r\n            '/api/admin/configuration/installMasterData',\r\n            data1\r\n          );\r\n          if (res && res.status == 200) {\r\n            setIsInstallMasterData(true);\r\n            isInstallMasterData = true;\r\n            setMasterdataState('created');\r\n          }\r\n        }\r\n        if (isSampleData) {\r\n          let data1 = {\r\n            version: version\r\n          };\r\n          const res = await APIservice.httpPost(\r\n            '/api/admin/configuration/installSampleData',\r\n            data1\r\n          );\r\n          if (res && res.status == 200) {\r\n            setIsInstallSampleData(true);\r\n            isInstalledSampleData = true;\r\n            setSampledataState('created');\r\n          }\r\n        }\r\n        // setIsLogin(true);\r\n\r\n        if (ismasterData || isSampleData) {\r\n          if (ismasterData && isInstallMasterData == true) {\r\n            setIsInstallSucessfully(true);\r\n          }\r\n          if (isSampleData && isInstalledSampleData == true) {\r\n            setIsInstallSucessfully(true);\r\n          }\r\n        } else {\r\n          setIsInstallSucessfully(true);\r\n        }\r\n        setIsTakeHostData(false);\r\n        setIsTeseted(true);\r\n        setIsLoading(false);\r\n      } else if (res && res.status == 401) {\r\n        setDatabaseState('Error');\r\n        setActiveStep(1);\r\n        toast.error('Invalid Code', {\r\n          autoClose: 6000,\r\n          hideProgressBar: true,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: 'colored',\r\n          position: toast.POSITION.TOP_RIGHT\r\n        });\r\n      } else if (res.status == 500) {\r\n        setDatabaseState('Error');\r\n        toast.error(res.message, {\r\n          autoClose: 6000,\r\n          hideProgressBar: true,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: 'colored',\r\n          position: toast.POSITION.TOP_RIGHT\r\n        });\r\n      } else if (res.status == 400) {\r\n        setDatabaseState('Error');\r\n        toast.error(res.message, {\r\n          autoClose: 6000,\r\n          hideProgressBar: true,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: 'colored',\r\n          position: toast.POSITION.TOP_RIGHT\r\n        });\r\n      } else if (res.status == 300) {\r\n        setDatabaseState('Error');\r\n        toast.error(res.message, {\r\n          autoClose: 6000,\r\n          hideProgressBar: true,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: 'colored',\r\n          position: toast.POSITION.TOP_RIGHT\r\n        });\r\n      } else if (res.status == 404) {\r\n        setDatabaseState('Error');\r\n        toast.error(res.message, {\r\n          autoClose: 6000,\r\n          hideProgressBar: true,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: 'colored',\r\n          position: toast.POSITION.TOP_RIGHT\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  const generatePassword = () => {\r\n    const length = 8;\r\n    const charset =\r\n      'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';\r\n    let password = '';\r\n    for (let i = 0; i < length; i++) {\r\n      const randomIndex = Math.floor(Math.random() * charset.length);\r\n      password += charset[randomIndex];\r\n    }\r\n    setHostInput({ ...hostData, ['password']: password });\r\n    // hostData.password = password;\r\n  };\r\n\r\n  const handleGotoLogin = async () => {\r\n    const res = await APIservice.httpPost(\r\n      '/api/admin/configuration/restartConnection',\r\n      hostData\r\n    );\r\n    if (res.status === 200) {\r\n      if (res.recordList == false) {\r\n        toast.warning('Please restart your API server before loggin in.', {\r\n          autoClose: 6000,\r\n          hideProgressBar: true,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: 'colored',\r\n          position: toast.POSITION.TOP_RIGHT\r\n        });\r\n        setIsRestartServerRequired(true);\r\n      } else {\r\n        setIsRestartServerRequired(false);\r\n        setIsLogin(true);\r\n        setIsConfiguration(false);\r\n        if (!version) {\r\n          setLogin({ email: userName, password: password });\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const installMasterData = async (e: any) => {\r\n    setIsLoading(true);\r\n    e?.preventDefault();\r\n    // data.REACT_APP_BASEURL = apiUrl;\r\n    const res = await APIservice.httpPost(\r\n      '/api/admin/configuration/installMasterData',\r\n      hostData\r\n    );\r\n    if (res.status === 200) {\r\n      setIsLogin(true);\r\n      setIsTakeHostData(false);\r\n      setIsTeseted(true);\r\n      setIsLoading(false);\r\n    } else if (res && res.status == 401) {\r\n      toast.error('Invalid Code', {\r\n        autoClose: 6000,\r\n        hideProgressBar: true,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: 'colored',\r\n        position: toast.POSITION.TOP_RIGHT\r\n      });\r\n    } else if (res.status == 500) {\r\n      toast.error(res.message, {\r\n        autoClose: 6000,\r\n        hideProgressBar: true,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: 'colored',\r\n        position: toast.POSITION.TOP_RIGHT\r\n      });\r\n    } else if (res.status == 400) {\r\n      toast.error(res.message, {\r\n        autoClose: 6000,\r\n        hideProgressBar: true,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: 'colored',\r\n        position: toast.POSITION.TOP_RIGHT\r\n      });\r\n    } else if (res.status == 300) {\r\n      toast.error(res.message, {\r\n        autoClose: 6000,\r\n        hideProgressBar: true,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: 'colored',\r\n        position: toast.POSITION.TOP_RIGHT\r\n      });\r\n    } else if (res.status == 404) {\r\n      toast.error(res.message, {\r\n        autoClose: 6000,\r\n        hideProgressBar: true,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: 'colored',\r\n        position: toast.POSITION.TOP_RIGHT\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleVersionChange = async (e: any) => {\r\n    setVersion(e.target.value);\r\n  };\r\n\r\n  const handleExistingDatabaseChange = async (e: any) => {\r\n    setSelectedDatabase(e.target.value);\r\n  };\r\n\r\n  const [activeStep, setActiveStep] = React.useState(0);\r\n  const [skipped, setSkipped] = React.useState(new Set<number>());\r\n\r\n  const isStepOptional = (step: number) => {\r\n    return step === 1;\r\n  };\r\n\r\n  const isStepSkipped = (step: number) => {\r\n    return skipped.has(step);\r\n  };\r\n\r\n  const handleNext = () => {\r\n    let newSkipped = skipped;\r\n    if (isStepSkipped(activeStep)) {\r\n      newSkipped = new Set(newSkipped.values());\r\n      newSkipped.delete(activeStep);\r\n    }\r\n\r\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n    setSkipped(newSkipped);\r\n  };\r\n\r\n  const handleInstallMasterData = (e: any) => {\r\n    setIsMasterData(e.target.checked);\r\n  };\r\n\r\n  const handleInstallSampleData = (e: any) => {\r\n    setIsSampleData(e.target.checked);\r\n  };\r\n\r\n  const handleBack = () => {\r\n    if (activeStep === 1) {\r\n      setActiveStep(0);\r\n      setIsLoading(false);\r\n    } else {\r\n      setActiveStep(1);\r\n    }\r\n  };\r\n\r\n  const handleSkip = () => {\r\n    if (!isStepOptional(activeStep)) {\r\n      // You probably want to guard against something like this,\r\n      // it should never occur unless someone's actively trying to break something.\r\n      throw new Error(\"You can't skip a step that isn't optional.\");\r\n    }\r\n\r\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n    setSkipped((prevSkipped) => {\r\n      const newSkipped = new Set(prevSkipped.values());\r\n      newSkipped.add(activeStep);\r\n      return newSkipped;\r\n    });\r\n  };\r\n\r\n  const handleReset = () => {\r\n    setActiveStep(0);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <ToastContainer\r\n        position=\"top-right\"\r\n        autoClose={6000}\r\n        hideProgressBar={true}\r\n        newestOnTop={false}\r\n        closeOnClick\r\n        rtl={false}\r\n        pauseOnFocusLoss\r\n        draggable\r\n        pauseOnHover\r\n      />\r\n      <OverviewWrapper>\r\n        <Helmet>\r\n          <title>Matrimony</title>\r\n        </Helmet>\r\n        <Container>\r\n          {!isConfiguration && (\r\n            <Row\r\n              className=\"d-flex justify-content-center align-items-center\"\r\n              style={{\r\n                position: 'fixed',\r\n                left: 0,\r\n                top: 0,\r\n                width: '100%',\r\n                height: '100%'\r\n              }}\r\n            >\r\n              {!isShowLoader && (\r\n                <Col md={8} lg={6} xs={12} style={{ maxWidth: '500px' }}>\r\n                  <div style={{ height: '72px' }}>\r\n                    <Logo />\r\n                    {/* <img src=\"/Image20221010173301.png\" height=\"50\" alt=\"logo\" /> */}\r\n                  </div>\r\n                  <Card style={{ borderRadius: '10px' }}>\r\n                    <CardContent style={{ padding: '24px' }}>\r\n                      {isLogin && (\r\n                        <Form onSubmit={onFormSubmit}>\r\n                          <Typography\r\n                            className=\"mb-3\"\r\n                            align=\"center\"\r\n                            fontSize=\"25px\"\r\n                            fontWeight=\"bolder\"\r\n                          >\r\n                            Login\r\n                          </Typography>\r\n                          <TextField\r\n                            required\r\n                            type=\"email\"\r\n                            sx={{ width: '100%', mt: 3 }}\r\n                            name=\"email\"\r\n                            label=\"Email\"\r\n                            autoFocus\r\n                            value={login.email}\r\n                            onChange={(e: any) => {\r\n                              validateEmail(e);\r\n                              handleInputChange(e);\r\n                            }}\r\n                          />\r\n                          <FormHelperText\r\n                            style={{ color: 'red', height: '22px' }}\r\n                          >\r\n                            {isEmailValidateError && emailValidateErrorMsg}\r\n                          </FormHelperText>\r\n                          <TextField\r\n                            required\r\n                            sx={{ width: '100%', mt: '1%' }}\r\n                            name=\"password\"\r\n                            label=\"Password\"\r\n                            type={showPassword ? 'text' : 'password'}\r\n                            InputProps={{\r\n                              endAdornment: (\r\n                                <InputAdornment position=\"end\">\r\n                                  <IconButton\r\n                                    onClick={() =>\r\n                                      setShowPassword(!showPassword)\r\n                                    }\r\n                                    edge=\"end\"\r\n                                  >\r\n                                    {showPassword === true ? (\r\n                                      <VisibilityIcon />\r\n                                    ) : (\r\n                                      <VisibilityOffIcon />\r\n                                    )}\r\n                                  </IconButton>\r\n                                </InputAdornment>\r\n                              )\r\n                            }}\r\n                            value={login.password}\r\n                            onChange={(e: any) => {\r\n                              ValidatePassword(e);\r\n                              handleInputChange(e);\r\n                            }}\r\n                          />\r\n\r\n                          <FormHelperText\r\n                            style={{ color: 'red', height: '22px' }}\r\n                          >\r\n                            {isPasswordValidateError &&\r\n                              passwordValidateErrorMsg}\r\n                          </FormHelperText>\r\n\r\n                          <Button\r\n                            fullWidth\r\n                            type=\"submit\"\r\n                            variant=\"contained\"\r\n                            onClick={handlesubmit}\r\n                            style={{ fontWeight: 'bolder', marginTop: '1%' }}\r\n                          >\r\n                            <div>\r\n                              {isLoading ? (\r\n                                <LoaderLogin title=\"Loading...\" />\r\n                              ) : (\r\n                                'LOGIN'\r\n                              )}\r\n                            </div>\r\n                          </Button>\r\n                          <Stack\r\n                            direction=\"row\"\r\n                            alignItems=\"center\"\r\n                            justifyContent=\"flex-end\"\r\n                            sx={{ my: 1 }}\r\n                          >\r\n                            <RouterLink\r\n                              to=\"/forgotpassword\"\r\n                              style={{\r\n                                color: '#5569ff',\r\n                                textDecoration: 'none',\r\n                                justifyContent: 'flex-end',\r\n                                fontSize: '15px'\r\n                              }}\r\n                            >\r\n                              Forgot password?\r\n                            </RouterLink>\r\n                          </Stack>\r\n                        </Form>\r\n                      )}\r\n                      {isChangeEmail && (\r\n                        <>\r\n                          <Form>\r\n                            <Typography\r\n                              className=\"mb-3\"\r\n                              align=\"center\"\r\n                              fontSize=\"25px\"\r\n                              fontWeight=\"bolder\"\r\n                            >\r\n                              Change Default Email\r\n                            </Typography>\r\n                            <TextField\r\n                              required\r\n                              type=\"email\"\r\n                              sx={{ width: '100%', mt: 3 }}\r\n                              name=\"email\"\r\n                              label=\"Email\"\r\n                              autoFocus\r\n                              value={changeEmail.email}\r\n                              onChange={(e: any) => {\r\n                                validateChangeEmail(e);\r\n                                handleInputDefaultEmailChange(e);\r\n                              }}\r\n                            />\r\n                            <FormHelperText\r\n                              style={{ color: 'red', height: '22px' }}\r\n                            >\r\n                              {isChangeEmailValidateError &&\r\n                                changeEmailValidateErrorMsg}\r\n                            </FormHelperText>\r\n\r\n                            <Button\r\n                              fullWidth\r\n                              type=\"submit\"\r\n                              variant=\"contained\"\r\n                              onClick={handleupdateEmail}\r\n                              style={{ fontWeight: 'bolder', marginTop: '1%' }}\r\n                            >\r\n                              <div>\r\n                                {isLoading ? (\r\n                                  <LoaderLogin title=\"Loading...\" />\r\n                                ) : (\r\n                                  'Change Email'\r\n                                )}\r\n                              </div>\r\n                            </Button>\r\n                            <Stack\r\n                              direction=\"row\"\r\n                              alignItems=\"center\"\r\n                              justifyContent=\"space-evenly\"\r\n                              sx={{ my: 1 }}\r\n                            >\r\n                              <Link\r\n                                style={{\r\n                                  color: '#5569ff',\r\n                                  textDecoration: 'none',\r\n                                  justifyContent: 'flex-end',\r\n                                  fontSize: '15px',\r\n                                  cursor: 'pointer'\r\n                                }}\r\n                                onClick={skipUpdateEmail}\r\n                              >\r\n                                Skip\r\n                              </Link>\r\n                            </Stack>\r\n                          </Form>\r\n                        </>\r\n                      )}\r\n                      {isChangePassword && (\r\n                        <>\r\n                          <Form>\r\n                            <Typography\r\n                              className=\"mb-3\"\r\n                              align=\"center\"\r\n                              fontSize=\"25px\"\r\n                              fontWeight=\"bolder\"\r\n                            >\r\n                              Change Default Password\r\n                            </Typography>\r\n                            <TextField\r\n                              required\r\n                              sx={{ width: '100%', mt: '1%' }}\r\n                              name=\"password\"\r\n                              label=\"Password\"\r\n                              type={showChangePassword ? 'text' : 'password'}\r\n                              InputProps={{\r\n                                endAdornment: (\r\n                                  <InputAdornment position=\"end\">\r\n                                    <IconButton\r\n                                      onClick={() =>\r\n                                        setShowChangePassword(\r\n                                          !showChangePassword\r\n                                        )\r\n                                      }\r\n                                      edge=\"end\"\r\n                                    >\r\n                                      {showChangePassword === true ? (\r\n                                        <VisibilityIcon />\r\n                                      ) : (\r\n                                        <VisibilityOffIcon />\r\n                                      )}\r\n                                    </IconButton>\r\n                                  </InputAdornment>\r\n                                )\r\n                              }}\r\n                              value={changePassword.password}\r\n                              onChange={(e: any) => {\r\n                                ValidateChangePassword(e);\r\n                                handleInputDefaultPasswordChange(e);\r\n                              }}\r\n                            />\r\n                            <FormHelperText\r\n                              style={{ color: 'red', height: '22px' }}\r\n                            >\r\n                              {isChangePasswordValidateError &&\r\n                                changePasswordValidateErrorMsg}\r\n                            </FormHelperText>\r\n                            <Button\r\n                              fullWidth\r\n                              type=\"submit\"\r\n                              variant=\"contained\"\r\n                              onClick={handleupdatePassword}\r\n                              style={{ fontWeight: 'bolder', marginTop: '1%' }}\r\n                            >\r\n                              <div>\r\n                                {isLoading ? (\r\n                                  <LoaderLogin title=\"Loading...\" />\r\n                                ) : (\r\n                                  'Change Password'\r\n                                )}\r\n                              </div>\r\n                            </Button>\r\n                            <Stack\r\n                              direction=\"row\"\r\n                              alignItems=\"center\"\r\n                              justifyContent=\"space-evenly\"\r\n                              sx={{ my: 1 }}\r\n                            >\r\n                              <Link\r\n                                style={{\r\n                                  color: '#5569ff',\r\n                                  textDecoration: 'none',\r\n                                  justifyContent: 'flex-end',\r\n                                  fontSize: '15px',\r\n                                  cursor: 'pointer'\r\n                                }}\r\n                                onClick={backUpdatePassword}\r\n                              >\r\n                                Back\r\n                              </Link>\r\n                              <Link\r\n                                style={{\r\n                                  color: '#5569ff',\r\n                                  textDecoration: 'none',\r\n                                  justifyContent: 'flex-end',\r\n                                  fontSize: '15px',\r\n                                  cursor: 'pointer'\r\n                                }}\r\n                                onClick={skipUpdatePassword}\r\n                              >\r\n                                Skip\r\n                              </Link>\r\n                            </Stack>\r\n                          </Form>\r\n                        </>\r\n                      )}\r\n                      {is2FAOpen && (\r\n                        <Form>\r\n                          <Typography\r\n                            className=\"mb-3\"\r\n                            align=\"center\"\r\n                            fontSize=\"25px\"\r\n                            fontWeight=\"bolder\"\r\n                          >\r\n                            Set Up Two-Factor Authentication\r\n                          </Typography>\r\n                          <Typography\r\n                            noWrap\r\n                            style={{\r\n                              fontSize: '15px',\r\n                              fontWeight: 'bold',\r\n                              marginBottom: 'none'\r\n                            }}\r\n                          >\r\n                            Send Authentication Code to your login Email\r\n                          </Typography>\r\n                          <Button\r\n                            fullWidth\r\n                            type=\"submit\"\r\n                            variant=\"contained\"\r\n                            disabled={login?.email === 'demo@admin.com'}\r\n                            onClick={handleSetup2FA}\r\n                            style={{ fontWeight: 'bolder', marginTop: '1%' }}\r\n                          >\r\n                            <div>\r\n                              {isLoading ? (\r\n                                <LoaderLogin title=\"Loading...\" />\r\n                              ) : (\r\n                                'Setup 2FA'\r\n                              )}\r\n                            </div>\r\n                          </Button>\r\n                          <Stack\r\n                            direction=\"row\"\r\n                            alignItems=\"center\"\r\n                            justifyContent=\"space-evenly\"\r\n                            sx={{ my: 1 }}\r\n                          >\r\n                            <Link\r\n                              style={{\r\n                                color: '#5569ff',\r\n                                textDecoration: 'none',\r\n                                justifyContent: 'flex-end',\r\n                                fontSize: '15px',\r\n                                cursor: 'pointer'\r\n                              }}\r\n                              onClick={remindTwoFactor}\r\n                            >\r\n                              Remind me Later\r\n                            </Link>\r\n                            {login?.email === 'demo@admin.com' ? (\r\n                              <>Skip For Now</>\r\n                            ) : (\r\n                              <Link\r\n                                style={{\r\n                                  color: '#5569ff',\r\n                                  textDecoration: 'none',\r\n                                  justifyContent: 'flex-end',\r\n                                  fontSize: '15px',\r\n                                  cursor: 'pointer'\r\n                                }}\r\n                                onClick={skipTwoFactor}\r\n                              >\r\n                                Skip For Now\r\n                              </Link>\r\n                            )}\r\n                          </Stack>\r\n                        </Form>\r\n                      )}\r\n                      {is2FAQRCode && (\r\n                        <Form>\r\n                          <Typography\r\n                            className=\"mb-3\"\r\n                            align=\"center\"\r\n                            fontSize=\"25px\"\r\n                            fontWeight=\"bolder\"\r\n                          >\r\n                            Two-Factor Authentication\r\n                          </Typography>\r\n                          <h4 className={styles.heading4}>\r\n                            Configuring Google Authenticator or Authy\r\n                          </h4>\r\n                          <div className={styles.orderedList}>\r\n                            <li>\r\n                              Install Google Authenticator (IOS - Android) or\r\n                              Authy (IOS - Android).\r\n                            </li>\r\n                            <li>In the authenticator app, select \"+\" icon.</li>\r\n                            <li>\r\n                              Select \"Scan a barcode (or QR code)\" and use the\r\n                              phone's camera to scan this barcode.\r\n                            </li>\r\n                          </div>\r\n                          <div>\r\n                            <h4 className={styles.heading4}>Scan QR Code</h4>\r\n                            <div className=\"flex justify-center\">\r\n                              <QRCode value={qrcodeUrl} />\r\n                            </div>\r\n                          </div>\r\n                          <div>\r\n                            <h4 className={styles.heading4}>\r\n                              Or Enter Code Into Your App\r\n                            </h4>\r\n                            <p className=\"text-sm\">\r\n                              SecretKey: {base32} (Base32 encoded)\r\n                            </p>\r\n                          </div>\r\n\r\n                          <TextField\r\n                            required\r\n                            type=\"text\"\r\n                            sx={{ width: '100%', mt: 3 }}\r\n                            name=\"twoFactorCode\"\r\n                            label=\"Authentication Code\"\r\n                            autoFocus\r\n                            value={authenticationCode.twoFactorCode}\r\n                            onChange={(e: any) => {\r\n                              validateTwoFactorCode(e);\r\n                              handleInputTwoFactorCodeChange(e);\r\n                            }}\r\n                          />\r\n                          <FormHelperText\r\n                            style={{ color: 'red', height: '22px' }}\r\n                          >\r\n                            {isAuthenticationCodeError &&\r\n                              authenticationCodeErrorMsg}\r\n                          </FormHelperText>\r\n\r\n                          <Button\r\n                            fullWidth\r\n                            type=\"submit\"\r\n                            variant=\"contained\"\r\n                            onClick={handleVerifyAuthenticateCode}\r\n                            style={{ fontWeight: 'bolder', marginTop: '1%' }}\r\n                          >\r\n                            <div>\r\n                              {isLoading ? (\r\n                                <LoaderLogin title=\"Loading...\" />\r\n                              ) : (\r\n                                'Authenticate'\r\n                              )}\r\n                            </div>\r\n                          </Button>\r\n                        </Form>\r\n                      )}\r\n                      {is2FAEnter && (\r\n                        <Form>\r\n                          <Typography\r\n                            className=\"mb-3\"\r\n                            align=\"center\"\r\n                            fontSize=\"25px\"\r\n                            fontWeight=\"bolder\"\r\n                          >\r\n                            Two-Factor Authentication\r\n                          </Typography>\r\n                          <Typography\r\n                            noWrap\r\n                            style={{\r\n                              fontSize: '15px',\r\n                              fontWeight: 'bold',\r\n                              marginBottom: 'none'\r\n                            }}\r\n                          >\r\n                            Enter Authentication Code\r\n                          </Typography>\r\n                          <TextField\r\n                            required\r\n                            type=\"text\"\r\n                            sx={{ width: '100%', mt: 3 }}\r\n                            name=\"twoFactorCode\"\r\n                            label=\"Authentication Code\"\r\n                            autoFocus\r\n                            value={authenticationCode.twoFactorCode}\r\n                            onChange={(e: any) => {\r\n                              validateTwoFactorCode(e);\r\n                              handleInputTwoFactorCodeChange(e);\r\n                            }}\r\n                          />\r\n                          <FormHelperText\r\n                            style={{ color: 'red', height: '22px' }}\r\n                          >\r\n                            {isAuthenticationCodeError &&\r\n                              authenticationCodeErrorMsg}\r\n                          </FormHelperText>\r\n\r\n                          <Button\r\n                            fullWidth\r\n                            type=\"submit\"\r\n                            variant=\"contained\"\r\n                            onClick={handleVerifyAuthenticateCode}\r\n                            style={{ fontWeight: 'bolder', marginTop: '1%' }}\r\n                          >\r\n                            <div>\r\n                              {isLoading ? (\r\n                                <LoaderLogin title=\"Loading...\" />\r\n                              ) : (\r\n                                'Authenticate'\r\n                              )}\r\n                            </div>\r\n                          </Button>\r\n                        </Form>\r\n                      )}\r\n                    </CardContent>\r\n                  </Card>\r\n                </Col>\r\n              )}\r\n            </Row>\r\n          )}\r\n\r\n          {isShowLoader && (\r\n            <>\r\n              {' '}\r\n              <Loader1 title=\"Loading...\" />\r\n            </>\r\n          )}\r\n\r\n          {(isConfiguration || isTakeHostData) && !isShowLoader && (\r\n            // {(isConfiguration || isTakeHostData) &&\r\n            <>\r\n              {/* <div style={{ height: '72px', marginTop: \"20px\" }}>\r\n                <Logo />\r\n              </div> */}\r\n\r\n              <div style={{ textAlign: 'center', marginTop: '40px' }}>\r\n                <img\r\n                  src=\"/admin/Image20221010173301.png\"\r\n                  height=\"50\"\r\n                  alt=\"logo\"\r\n                />\r\n              </div>\r\n              <Typography\r\n                sx={{\r\n                  textAlign: 'center',\r\n                  fontSize: '36px',\r\n                  marginTop: '11px',\r\n                  fontWeight: '600',\r\n                  marginBottom: '20px',\r\n                  color: '#596bfa'\r\n                }}\r\n              >\r\n                Welcome to Matrimony Configuration\r\n              </Typography>\r\n              <Typography\r\n                sx={{\r\n                  textAlign: 'center',\r\n                  fontSize: '12px',\r\n                  fontWeight: '600px',\r\n                  marginBottom: '20px'\r\n                }}\r\n              >\r\n                Please follow below steps to setup\r\n              </Typography>\r\n\r\n              <Row>\r\n                <Col md={3} lg={3} xs={12}></Col>\r\n                <Col md={6} lg={6} xs={12}>\r\n                  <Card\r\n                    sx={{\r\n                      padding: '10px',\r\n                      marginTop: '10px',\r\n                      margin: 'auto',\r\n                      minHeight: 'calc(100vh - 240px)',\r\n                      position: 'relative',\r\n                      paddingBottom: '80px'\r\n                    }}\r\n                  >\r\n                    <Row>\r\n                      <Col md={12} lg={12} xs={12}>\r\n                        <Box sx={{ width: '100%' }}>\r\n                          <Stepper\r\n                            activeStep={activeStep}\r\n                            style={{ margin: '0px auto 30px auto' }}\r\n                          >\r\n                            {steps.map((label, index) => {\r\n                              const stepProps: { completed?: boolean } = {};\r\n                              const labelProps: {\r\n                                optional?: React.ReactNode;\r\n                              } = {};\r\n\r\n                              if (isStepSkipped(index)) {\r\n                                stepProps.completed = false;\r\n                              }\r\n                              return (\r\n                                <Step key={label} {...stepProps}>\r\n                                  <StepLabel {...labelProps}>{label}</StepLabel>\r\n                                </Step>\r\n                              );\r\n                            })}\r\n                          </Stepper>\r\n                          {activeStep === steps.length ? (\r\n                            <React.Fragment>\r\n                              <Typography sx={{ mt: 2, mb: 1 }}>\r\n                                All steps completed - you&apos;re finished\r\n                              </Typography>\r\n                              <Box\r\n                                sx={{\r\n                                  display: 'flex',\r\n                                  flexDirection: 'row',\r\n                                  pt: 2\r\n                                }}\r\n                              >\r\n                                <Box sx={{ flex: '1 1 auto' }} />\r\n                                <Button onClick={handleReset}>Reset</Button>\r\n                              </Box>\r\n                            </React.Fragment>\r\n                          ) : (\r\n                            <React.Fragment>\r\n                              {activeStep == 0 && (\r\n                                <>\r\n                                  <Form>\r\n                                    <div>\r\n                                      <TextField\r\n                                        required\r\n                                        type=\"text\"\r\n                                        sx={{ width: '100%' }}\r\n                                        name=\"MYSQL_HOST\"\r\n                                        label=\"Database Host\" // \"Host Name\"\r\n                                        autoFocus\r\n                                        value={hostData.MYSQL_HOST}\r\n                                        onChange={(e: any) => {\r\n                                          handleHostInputChange(e);\r\n                                        }}\r\n                                      />\r\n                                      {isHostRequired && (\r\n                                        <FormHelperText\r\n                                          style={{\r\n                                            color: 'red',\r\n                                            height: '22px'\r\n                                          }}\r\n                                        >\r\n                                          HostName is required\r\n                                        </FormHelperText>\r\n                                      )}\r\n                                      <TextField\r\n                                        required\r\n                                        type=\"text\"\r\n                                        sx={{ width: '100%', mt: 3 }}\r\n                                        name=\"MYSQL_PORT\"\r\n                                        label=\"Database Port\"\r\n                                        autoFocus\r\n                                        value={hostData.MYSQL_PORT}\r\n                                        onChange={(e: any) => {\r\n                                          handleHostInputChange(e);\r\n                                        }}\r\n                                      />\r\n                                      {isPORTRequired && (\r\n                                        <FormHelperText\r\n                                          style={{\r\n                                            color: 'red',\r\n                                            height: '22px'\r\n                                          }}\r\n                                        >\r\n                                          PORT is required\r\n                                        </FormHelperText>\r\n                                      )}\r\n                                      <TextField\r\n                                        required\r\n                                        type=\"text\"\r\n                                        sx={{ width: '100%', mt: 3 }}\r\n                                        name=\"MYSQL_DATABASE\"\r\n                                        label=\"Database Name\"\r\n                                        autoFocus\r\n                                        value={hostData.MYSQL_DATABASE}\r\n                                        onChange={(e: any) => {\r\n                                          handleHostInputChange(e);\r\n                                        }}\r\n                                      />\r\n                                      {isDatabaseNameRequired && (\r\n                                        <FormHelperText\r\n                                          style={{\r\n                                            color: 'red',\r\n                                            height: '22px'\r\n                                          }}\r\n                                        >\r\n                                          Database Name is required\r\n                                        </FormHelperText>\r\n                                      )}\r\n                                      <TextField\r\n                                        required\r\n                                        type=\"text\"\r\n                                        sx={{ width: '100%', mt: 3 }}\r\n                                        name=\"MYSQL_USER\"\r\n                                        label=\"User Name\"\r\n                                        autoFocus\r\n                                        value={hostData.MYSQL_USER}\r\n                                        onChange={(e: any) => {\r\n                                          handleHostInputChange(e);\r\n                                        }}\r\n                                      />\r\n                                      {isUserRequired && (\r\n                                        <FormHelperText\r\n                                          style={{\r\n                                            color: 'red',\r\n                                            height: '22px'\r\n                                          }}\r\n                                        >\r\n                                          UserName is required\r\n                                        </FormHelperText>\r\n                                      )}\r\n                                      <TextField\r\n                                        required\r\n                                        type={\r\n                                          showPassword ? 'text' : 'password'\r\n                                        }\r\n                                        sx={{ width: '100%', mt: 3 }}\r\n                                        name=\"MYSQL_PASSWORD\"\r\n                                        label=\"Password\"\r\n                                        autoFocus\r\n                                        value={hostData.MYSQL_PASSWORD}\r\n                                        onChange={(e: any) => {\r\n                                          handleHostInputChange(e);\r\n                                        }}\r\n                                        InputProps={{\r\n                                          endAdornment: (\r\n                                            <InputAdornment position=\"end\">\r\n                                              <IconButton\r\n                                                onClick={() =>\r\n                                                  setShowPassword(!showPassword)\r\n                                                }\r\n                                                edge=\"end\"\r\n                                              >\r\n                                                {showPassword === true ? (\r\n                                                  <VisibilityIcon />\r\n                                                ) : (\r\n                                                  <VisibilityOffIcon />\r\n                                                )}\r\n                                              </IconButton>\r\n                                            </InputAdornment>\r\n                                          )\r\n                                        }}\r\n                                      />{' '}\r\n                                    </div>\r\n\r\n                                    {isExistDatbaseAvailable && (\r\n                                      <div style={{ marginTop: '20px' }}>\r\n                                        <FormControlLabel\r\n                                          control={<ErrorIcon />}\r\n                                          label=\" No database was found. Please create a new blank database with the same name on your MySQL server, and ensure that the user has all the necessary privileges. After that, reconfigure the setup and restart the process.\"\r\n                                          sx={{\r\n                                            color: 'red',\r\n                                            fontWeight: 'bold'\r\n                                          }}\r\n                                        />\r\n                                      </div>\r\n                                    )}\r\n\r\n                                    {isTested && !isLoading && version == null && (\r\n                                      <div>\r\n                                        {' '}\r\n                                        <Checkbox checked={true} />\r\n                                        Connection Successful\r\n                                      </div>\r\n                                    )}\r\n\r\n                                    {isTested && !isLoading && version != null && (\r\n                                      <div>\r\n                                        {' '}\r\n                                        <Checkbox checked={true} />\r\n                                        Connection Established Successfully!\r\n                                        You're on Version {version}\r\n                                      </div>\r\n                                    )}\r\n                                  </Form>\r\n\r\n                                  <div\r\n                                    style={{\r\n                                      position: 'absolute',\r\n                                      bottom: '20px',\r\n                                      width: '96%',\r\n                                      display: 'flex',\r\n                                      flexDirection: 'column',\r\n                                      alignItems: 'center',\r\n                                      gap: '10px'\r\n                                    }}\r\n                                  >\r\n                                    <Button\r\n                                      fullWidth\r\n                                      type=\"button\"\r\n                                      variant=\"contained\"\r\n                                      onClick={handleUpdateHostData}\r\n                                      style={{ fontWeight: 'bolder' }}\r\n                                      disabled={isTested && !isLoading}\r\n                                    >\r\n                                      <div>\r\n                                        {!isTested &&\r\n                                          !isLoading &&\r\n                                          'Test Connection'}\r\n                                        {isLoading && 'Testing'}\r\n                                        {isTested &&\r\n                                          !isLoading &&\r\n                                          'Connection Established'}\r\n                                      </div>\r\n                                    </Button>\r\n\r\n                                    <Button\r\n                                      fullWidth\r\n                                      type=\"submit\"\r\n                                      variant=\"contained\"\r\n                                      disabled={!isTested} // {!hostData.MYSQL_DATABASE}\r\n                                      onClick={saveAnddatabaseConfiguration}\r\n                                      style={{\r\n                                        fontWeight: 'bolder',\r\n                                        marginTop: '1%'\r\n                                      }}\r\n                                    >\r\n                                      <div>\r\n                                        {isLoading ? (\r\n                                          <LoaderLogin title=\"Loading...\" />\r\n                                        ) : (\r\n                                          'Save & Configure'\r\n                                        )}\r\n                                      </div>\r\n                                    </Button>\r\n                                  </div>\r\n                                </>\r\n                              )}\r\n\r\n                              {activeStep == 1 && (\r\n                                <>\r\n                                  <Form onSubmit={databaseConfiguration}>\r\n                                    {isTested && isExistingVersion && (\r\n                                      <>\r\n                                        <FormControl\r\n                                          sx={{\r\n                                            width: '100%',\r\n                                            display: 'inline'\r\n                                          }}\r\n                                        >\r\n                                          <div>\r\n                                            {' '}\r\n                                            <Checkbox checked={true} /> Existing\r\n                                            database version {version} detected{' '}\r\n                                          </div>\r\n                                        </FormControl>\r\n                                      </>\r\n                                    )}\r\n                                    {isTested && (\r\n                                      <div style={{ marginTop: '10px' }}>\r\n                                        <Checkbox\r\n                                          onChange={handleInstallMasterData}\r\n                                          inputProps={{\r\n                                            'aria-label': 'controlled'\r\n                                          }}\r\n                                          style={{ padding: '9px 0px' }}\r\n                                        />\r\n                                        Install MasterData\r\n                                      </div>\r\n                                    )}\r\n                                    {isTested && !isExistingVersion && (\r\n                                      <>\r\n                                        <Checkbox\r\n                                          onChange={handleInstallSampleData}\r\n                                          style={{ padding: '9px 0px' }}\r\n                                          inputProps={{\r\n                                            'aria-label': 'controlled'\r\n                                          }}\r\n                                          disabled={!ismasterData}\r\n                                        />\r\n                                        Install SampleData\r\n                                      </>\r\n                                    )}\r\n                                  </Form>\r\n                                  <div\r\n                                    style={{\r\n                                      position: 'absolute',\r\n                                      bottom: '20px',\r\n                                      width: '96%',\r\n                                      display: 'flex',\r\n                                      flexDirection: 'column',\r\n                                      alignItems: 'center',\r\n                                      gap: '10px'\r\n                                    }}\r\n                                  >\r\n                                    <Button\r\n                                      fullWidth\r\n                                      type=\"submit\"\r\n                                      variant=\"contained\"\r\n                                      disabled={!hostData.MYSQL_DATABASE}\r\n                                      onClick={databaseConfiguration}\r\n                                      style={{\r\n                                        fontWeight: 'bolder',\r\n                                        marginTop: '1%'\r\n                                      }}\r\n                                    >\r\n                                      <div>\r\n                                        {isLoading ? (\r\n                                          <LoaderLogin title=\"Loading...\" />\r\n                                        ) : (\r\n                                          'continue'\r\n                                        )}\r\n                                      </div>\r\n                                    </Button>\r\n                                    <Button\r\n                                      fullWidth\r\n                                      color=\"inherit\"\r\n                                      onClick={handleBack}\r\n                                      sx={{ mr: 1 }}\r\n                                      variant=\"outlined\"\r\n                                    >\r\n                                      Back\r\n                                    </Button>\r\n                                  </div>\r\n                                </>\r\n                              )}\r\n\r\n                              {activeStep == 2 && (\r\n                                <>\r\n                                  <Typography\r\n                                    style={{\r\n                                      display: 'flex',\r\n                                      alignItems: 'center',\r\n                                      flexDirection: 'column'\r\n                                    }}\r\n                                  >\r\n                                    {!isInstallSuccessfully && (\r\n                                      <>\r\n                                        <Typography\r\n                                          style={{ marginBottom: '10px' }}\r\n                                        >\r\n                                          Please wait while we are installing\r\n                                          the database\r\n                                        </Typography>\r\n                                      </>\r\n                                    )}\r\n                                    <Typography>\r\n                                      {databaseState === 'creating' ? (\r\n                                        <>\r\n                                          <Typography\r\n                                            style={{\r\n                                              margin: '10px 5px',\r\n                                              fontSize: '18px'\r\n                                            }}\r\n                                          >\r\n                                            <CircularProgress\r\n                                              thickness={1}\r\n                                              style={{\r\n                                                height: '18px',\r\n                                                width: '18px',\r\n                                                marginRight: '20px'\r\n                                              }}\r\n                                            />\r\n                                            Creating Database...\r\n                                          </Typography>\r\n                                        </>\r\n                                      ) : (\r\n                                        <>\r\n                                          {isSetupdatabase &&\r\n                                          databaseState === 'created' ? (\r\n                                            <Typography\r\n                                              style={{\r\n                                                margin: '10px 5px',\r\n                                                fontSize: '18px'\r\n                                              }}\r\n                                            >\r\n                                              <CheckCircleIcon\r\n                                                style={{\r\n                                                  color: '#78b144',\r\n                                                  marginRight: '10px'\r\n                                                }}\r\n                                              />\r\n                                              Database Created\r\n                                            </Typography>\r\n                                          ) : (\r\n                                            <Typography\r\n                                              style={{\r\n                                                margin: '10px 5px',\r\n                                                fontSize: '18px'\r\n                                              }}\r\n                                            >\r\n                                              <CancelIcon\r\n                                                style={{\r\n                                                  color: 'red',\r\n                                                  marginRight: '10px'\r\n                                                }}\r\n                                              />\r\n                                              Error in database creation\r\n                                            </Typography>\r\n                                          )}\r\n                                        </>\r\n                                      )}\r\n\r\n                                      {ismasterData && (\r\n                                        <>\r\n                                          {masterdataState === 'creating' &&\r\n                                          databaseState !== 'Error' ? (\r\n                                            <>\r\n                                              <Typography\r\n                                                style={{\r\n                                                  margin: '10px 5px',\r\n                                                  fontSize: '18px'\r\n                                                }}\r\n                                              >\r\n                                                {/* <CircularProgress color=\"primary\" /> */}\r\n                                                <CircularProgress\r\n                                                  thickness={1}\r\n                                                  style={{\r\n                                                    height: '18px',\r\n                                                    width: '18px',\r\n                                                    marginRight: '20px'\r\n                                                  }}\r\n                                                />\r\n                                                Installing MasterData...\r\n                                              </Typography>\r\n                                            </>\r\n                                          ) : (\r\n                                            <>\r\n                                              {ismasterData &&\r\n                                              isInstallMasterData ? (\r\n                                                <Typography\r\n                                                  style={{\r\n                                                    margin: '10px 5px',\r\n                                                    fontSize: '18px'\r\n                                                  }}\r\n                                                >\r\n                                                  <CheckCircleIcon\r\n                                                    style={{\r\n                                                      color: '#78b144',\r\n                                                      marginRight: '10px'\r\n                                                    }}\r\n                                                  />\r\n                                                  MasterData Installed\r\n                                                </Typography>\r\n                                              ) : (\r\n                                                <Typography\r\n                                                  style={{\r\n                                                    margin: '10px 5px',\r\n                                                    fontSize: '18px'\r\n                                                  }}\r\n                                                >\r\n                                                  <CancelIcon\r\n                                                    style={{\r\n                                                      color: 'red',\r\n                                                      marginRight: '10px'\r\n                                                    }}\r\n                                                  />\r\n                                                  Error in installing Masterdata\r\n                                                </Typography>\r\n                                              )}\r\n                                            </>\r\n                                          )}\r\n                                        </>\r\n                                      )}\r\n\r\n                                      {isSampleData && (\r\n                                        <>\r\n                                          {sampledataState === 'creating' &&\r\n                                          databaseState !== 'Error' ? (\r\n                                            <>\r\n                                              <Typography\r\n                                                style={{\r\n                                                  margin: '10px 5px',\r\n                                                  fontSize: '18px'\r\n                                                }}\r\n                                              >\r\n                                                <CircularProgress\r\n                                                  thickness={1}\r\n                                                  style={{\r\n                                                    height: '18px',\r\n                                                    width: '18px',\r\n                                                    marginRight: '20px'\r\n                                                  }}\r\n                                                />\r\n                                                Installing SampleData...\r\n                                              </Typography>\r\n                                            </>\r\n                                          ) : (\r\n                                            <>\r\n                                              {isSampleData &&\r\n                                              isInstalledSampleData ? (\r\n                                                <Typography\r\n                                                  style={{\r\n                                                    margin: '10px 5px',\r\n                                                    fontSize: '18px'\r\n                                                  }}\r\n                                                >\r\n                                                  <CheckCircleIcon\r\n                                                    style={{\r\n                                                      color: '#78b144',\r\n                                                      marginRight: '10px'\r\n                                                    }}\r\n                                                  />\r\n                                                  SampleData Installed\r\n                                                </Typography>\r\n                                              ) : (\r\n                                                <Typography\r\n                                                  style={{\r\n                                                    margin: '10px 5px',\r\n                                                    fontSize: '18px'\r\n                                                  }}\r\n                                                >\r\n                                                  <CancelIcon\r\n                                                    style={{\r\n                                                      color: 'red',\r\n                                                      marginRight: '10px'\r\n                                                    }}\r\n                                                  />\r\n                                                  Error in installing SampleData\r\n                                                </Typography>\r\n                                              )}\r\n                                            </>\r\n                                          )}\r\n                                        </>\r\n                                      )}\r\n                                    </Typography>\r\n                                    {databaseState === 'Error' && (\r\n                                      <Button\r\n                                        fullWidth\r\n                                        type=\"submit\"\r\n                                        variant=\"contained\"\r\n                                        onClick={handleErrorBack}\r\n                                        style={{\r\n                                          fontWeight: 'bolder',\r\n                                          marginTop: '2%',\r\n                                          width: '15%'\r\n                                        }}\r\n                                      >\r\n                                        Back\r\n                                      </Button>\r\n                                    )}\r\n                                    {isInstallSuccessfully && (\r\n                                      <>\r\n                                        <Typography\r\n                                          style={{\r\n                                            fontSize: '42px',\r\n                                            textAlign: 'center',\r\n                                            fontWeight: '900',\r\n                                            marginTop: '10px',\r\n                                            color: '#78b144'\r\n                                          }}\r\n                                        >\r\n                                          Congratulations!\r\n                                        </Typography>\r\n                                        <Typography\r\n                                          style={{\r\n                                            fontSize: '17px',\r\n                                            textAlign: 'center',\r\n                                            fontWeight: '600',\r\n                                            margin: '40px 0px'\r\n                                          }}\r\n                                        >\r\n                                          Your configuration process has been\r\n                                          successfully completed. Below are your\r\n                                          credentials. We appreciate your\r\n                                          cooperation in this matter and look\r\n                                          forward to your continued success with\r\n                                          our services.\r\n                                        </Typography>\r\n                                        <Typography\r\n                                          style={{\r\n                                            fontSize: '19px',\r\n                                            textAlign: 'center',\r\n                                            fontWeight: '600',\r\n                                            marginTop: '10px',\r\n                                            color: 'red'\r\n                                          }}\r\n                                        >\r\n                                          Please restart API(Nodejs APP) - Check\r\n                                          documentation\r\n                                        </Typography>\r\n                                        {!version && (\r\n                                          <>\r\n                                            <Box\r\n                                              style={{\r\n                                                border: '1px solid #ddd',\r\n                                                marginTop: '20px',\r\n                                                padding: '8px',\r\n                                                width: '300px'\r\n                                              }}\r\n                                            >\r\n                                              <Button\r\n                                                type=\"button\"\r\n                                                variant=\"contained\"\r\n                                                style={{\r\n                                                  fontWeight: 'bolder',\r\n                                                  width: '15%',\r\n                                                  float: 'right',\r\n                                                  right: '-10px',\r\n                                                  top: '-10px',\r\n                                                  padding: '3px',\r\n                                                  minWidth: '0px'\r\n                                                }}\r\n                                                onClick={handleCopy}\r\n                                              >\r\n                                                <ContentCopyIcon />\r\n                                              </Button>\r\n                                              <Typography\r\n                                                style={{\r\n                                                  fontSize: '14px',\r\n                                                  marginTop: '10px'\r\n                                                }}\r\n                                              >\r\n                                                Username : {userName}\r\n                                              </Typography>\r\n                                              <Typography\r\n                                                style={{ fontSize: '14px' }}\r\n                                              >\r\n                                                Password: {password}\r\n                                              </Typography>\r\n                                            </Box>\r\n                                          </>\r\n                                        )}\r\n                                        <div\r\n                                          style={{\r\n                                            position: 'absolute',\r\n                                            bottom: '20px',\r\n                                            width: '96%',\r\n                                            display: 'flex',\r\n                                            flexDirection: 'column',\r\n                                            alignItems: 'center',\r\n                                            gap: '10px'\r\n                                          }}\r\n                                        >\r\n                                          <Button\r\n                                            fullWidth\r\n                                            type=\"submit\"\r\n                                            variant=\"contained\"\r\n                                            onClick={handleGotoLogin}\r\n                                            style={{\r\n                                              fontWeight: 'bolder',\r\n                                              marginTop: '5%'\r\n                                            }}\r\n                                          >\r\n                                            Go To Login\r\n                                          </Button>\r\n                                        </div>\r\n                                      </>\r\n                                    )}\r\n                                  </Typography>\r\n                                </>\r\n                              )}\r\n                            </React.Fragment>\r\n                          )}\r\n                        </Box>\r\n                      </Col>\r\n                    </Row>\r\n                  </Card>\r\n                </Col>\r\n                <Col md={3} lg={3} xs={12}></Col>\r\n              </Row>\r\n            </>\r\n          )}\r\n        </Container>\r\n      </OverviewWrapper>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n"],"names":["props","title","_jsx","className","children","OverviewWrapper","styled","Box","steps","initialState","email","password","initialDefaultState","initialDefaultPasswordState","initialAuthenticationCodeState","twoFactorCode","initialHostState","MYSQL_HOST","MYSQL_DATABASE","MYSQL_USER","MYSQL_PASSWORD","MYSQL_PORT","username","styles","heading4","orderedList","login","setLogin","React","isEmailValidateError","setIsEmailValidateError","useState","emailValidateErrorMsg","setEmailValidateErrorMsg","isPasswordValidateError","setIsPasswordValidateError","passwordValidateErrorMsg","setPasswordValidateErrorMsg","showPassword","setShowPassword","isLoading","setIsLoading","isNoteForNoDatabaseFound","setisNoteForNoDatabaseFound","navigate","useNavigate","isLogin","setIsLogin","changeEmail","setChangeEmail","isChangeEmailValidateError","setIsChangeEmailValidateError","changeEmailValidateErrorMsg","setChangeEmailValidateErrorMsg","isChangeEmail","setIsChangeEmail","changePassword","setChangePassword","isChangePasswordValidateError","setIsChangePasswordValidateError","changePasswordValidateErrorMsg","setChangePasswordValidateErrorMsg","showChangePassword","setShowChangePassword","isChangePassword","setIsChangePassword","is2FAOpen","setIs2FAOpen","is2FAQRCode","setIs2FAQRCode","is2FAEnter","setIs2FAEnter","isConfiguration","setIsConfiguration","isUrlErrorMsg","setIsUrlErrorMsg","isVerified","setIsVerified","apiUrl","setApiUrl","isTakeHostData","setIsTakeHostData","hostData","setHostInput","setEmail","isAuthenticationCodeError","setIsAuthenticationCodeErrorError","authenticationCodeErrorMsg","setAuthenticationCodeErrorMsg","authenticationCode","setAuthenticationCode","refreshToken","setRefreshToken","sessionToken","setSessionToken","userId","setUserId","crendientials","setCrendientials","defaultCurrency","setDefaultCurrency","qrcodeUrl","setqrCodeUrl","base32","setBase32","isTested","setIsTeseted","version","setVersion","isExistingVersion","setIsExistingVersion","isInstallSuccessfully","setIsInstallSucessfully","ismasterData","setIsMasterData","isSampleData","setIsSampleData","isSetupdatabase","setIsSetUpDatabase","databaseState","setDatabaseState","masterdataState","setMasterdataState","sampledataState","setSampledataState","isInstallMasterData","setIsInstallMasterData","isPreviousVersionInstalled","setPreviousVersionInstalled","isAPIUrlValidation","setIsAPIUrlValidation","isHostRequired","setIsHostRequired","isUserRequired","setIsUserRequired","isPORTRequired","setIsPortRequired","isDatabaseNameRequired","setIsDatabaseNameRequired","isPasswordRequired","setIsPasswordRequired","isVersionSelectionRequired","setIsVersionRequired","isDatabaseSelectionRequired","setIsDatabaseRequired","isExistDatbaseAvailable","setIsExistDatbaseAvailable","isInstalledSampleData","setIsInstallSampleData","databases","setDatabases","isCreatedatabaseUser","setIsCreateDatabaseUser","isRestartServerRequired","setIsRestartServerRequired","userName","setUserName","setPassword","setSelectedDatabase","isShowLoader","setIsShowLoader","handleInputChange","event","name","value","target","mediumRegex","RegExp","useEffect","setTimeout","getConfiguration","updateFCMToken","async","token","localStorage","getItem","fcmToken","sessionStorage","APIservice","httpPost","error","toast","message","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","validateTwoFactorCode","e","handleInputTwoFactorCodeChange","handleVerifyAuthenticateCode","preventDefault","res","status","setItem","JSON","stringify","data","recordList","systemFlag","position","POSITION","TOP_RIGHT","console","log","isTakeHostDetail","setActiveStep","handleHostInputChange","length","databaseConfiguration","data1","hostName","isCreateDatabaseUser","port","activeStep","skipped","setSkipped","Set","isStepSkipped","step","has","_jsxs","ToastContainer","newestOnTop","rtl","pauseOnFocusLoss","Helmet","Container","Row","style","left","top","width","height","Col","md","lg","xs","maxWidth","Logo","Card","borderRadius","CardContent","padding","Form","onSubmit","Typography","align","fontSize","fontWeight","TextField","required","type","sx","mt","label","autoFocus","onChange","validateEmail","FormHelperText","color","InputProps","endAdornment","InputAdornment","IconButton","onClick","edge","VisibilityIcon","VisibilityOffIcon","ValidatePassword","Button","fullWidth","variant","flag","validator","test","validateForm","detail","id","isFirstLogin","parse","isTwoFactorEnable","response","profilePicApproveIndex","findIndex","c","isUserProfilePicApprove","_data","i","j","group","customFieldIndex","isEnableCustomFields","familyIndex","isEnableFamilyDetails","astroIndex","isEnableAstrologicDetails","lifeStyleIndex","isEnableLifeStyles","communityIndex","isEnableCommunity","subCommunityIndex","isEnableSubCommunity","roleId","pagePermissions","index","history","go","marginTop","LoaderLogin","Stack","direction","alignItems","justifyContent","my","RouterLink","to","textDecoration","_Fragment","validateChangeEmail","handleInputDefaultEmailChange","Link","cursor","ValidateChangePassword","handleInputDefaultPasswordChange","noWrap","marginBottom","disabled","cred","otpAuthUrl","baseSecret","permissionDetail","QRCode","Loader1","textAlign","src","alt","margin","minHeight","paddingBottom","Stepper","map","stepProps","completed","Step","StepLabel","mb","display","flexDirection","pt","flex","handleReset","FormControlLabel","control","ErrorIcon","Checkbox","checked","bottom","gap","FormControl","inputProps","handleBack","mr","CircularProgress","thickness","marginRight","CheckCircleIcon","CancelIcon","border","float","right","minWidth","handleCopy","this","navigator","clipboard","writeText","then","alert","catch","err","ContentCopyIcon","warning"],"sourceRoot":""}