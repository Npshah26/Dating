{"version":3,"file":"static/js/1795.3d22a0da.chunk.js","mappings":"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","sources":["components/PageTitleWrapper/index.tsx","content/Loader.tsx","content/customNotification/CustomNotification.tsx","../node_modules/@mui/icons-material/ForwardToInbox.js","../node_modules/@mui/icons-material/Search.js","../node_modules/@mui/material/TableHead/tableHeadClasses.js","../node_modules/@mui/material/TableHead/TableHead.js","../node_modules/@mui/material/Table/tableClasses.js","../node_modules/@mui/material/Table/Table.js"],"sourcesContent":["import { FC, ReactNode } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Box, Container, styled } from '@mui/material';\r\n\r\nconst PageTitle = styled(Box)(\r\n  ({ theme }) => `\r\n        padding: ${theme.spacing(1)};\r\n`\r\n);\r\n\r\ninterface PageTitleWrapperProps {\r\n  children?: ReactNode;\r\n}\r\n\r\nconst PageTitleWrapper: FC<PageTitleWrapperProps> = ({ children }) => {\r\n  return (\r\n    <PageTitle className=\"MuiPageTitle-wrapper\">\r\n      <Container maxWidth=\"lg\">{children}</Container>\r\n    </PageTitle>\r\n  );\r\n};\r\n\r\nPageTitleWrapper.propTypes = {\r\n  children: PropTypes.node.isRequired\r\n};\r\n\r\nexport default PageTitleWrapper;\r\n","import React from 'react';\r\nimport './Loader.css';\r\n\r\ninterface Props {\r\n  title: string;\r\n}\r\n\r\nconst Loader1 = (props: Props) => {\r\n  const { title } = props;\r\n  return (\r\n    // <div className=\"loader\">\r\n    //     <img className=\"img\" src={loader} alt=\"\" />\r\n    //     <span>{title}</span>\r\n    // </div>\r\n    <div className=\"spinner-container\">\r\n      <div className=\"loading-spinner\"></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loader1;\r\n","import { Helmet } from 'react-helmet-async';\r\nimport PageTitleWrapper from '../../components/PageTitleWrapper';\r\nimport {\r\n  Grid,\r\n  Container,\r\n  Box,\r\n  Breadcrumbs,\r\n  Button,\r\n  Card,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n  Divider,\r\n  FormHelperText,\r\n  IconButton,\r\n  Stack,\r\n  Switch,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  TextField,\r\n  Tooltip,\r\n  Typography,\r\n  useTheme,\r\n  styled,\r\n  FormControl,\r\n  InputAdornment,\r\n  Paper\r\n} from '@mui/material';\r\nimport EditTwoToneIcon from '@mui/icons-material/EditTwoTone';\r\nimport AddTwoToneIcon from '@mui/icons-material/AddTwoTone';\r\nimport HomeIcon from '@mui/icons-material/Home';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport React, { useState, ChangeEvent, useEffect } from 'react';\r\nimport Loader1 from '../Loader';\r\nimport APIservice from 'src/utils/APIservice';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport '../../content/smallScreen.css';\r\nimport 'react-quill/dist/quill.snow.css';\r\nimport { FormGroup } from 'react-bootstrap';\r\nimport ForwardToInboxIcon from '@mui/icons-material/ForwardToInbox';\r\nimport checkIsDemoUser from 'src/utils/IsDemoUserCheck';\r\nimport { useSnackbar } from '../useSnackbar';\r\n\r\nconst BootstrapDialog = styled(Dialog)(({ theme }) => ({\r\n  '& .MuiDialogContent-root': {\r\n    padding: theme.spacing(2)\r\n  },\r\n  '& .MuiDialogActions-root': {\r\n    padding: theme.spacing(1)\r\n  },\r\n  '& .MuiPaper-root': {\r\n    height: '700px'\r\n  }\r\n}));\r\n\r\nexport interface DialogTitleProps {\r\n  id: string;\r\n  children?: React.ReactNode;\r\n  onClose: () => void;\r\n}\r\n\r\nfunction BootstrapDialogTitle(props: DialogTitleProps) {\r\n  const { children, onClose, ...other } = props;\r\n\r\n  return (\r\n    <DialogTitle\r\n      sx={{ m: 0, p: 2, fontSize: '18px', fontWeight: 'bold' }}\r\n      {...other}\r\n    >\r\n      {children}\r\n      {onClose ? (\r\n        <IconButton\r\n          aria-label=\"close\"\r\n          onClick={onClose}\r\n          sx={{\r\n            position: 'absolute',\r\n            right: 13,\r\n            top: 13,\r\n            color: (theme) => theme.palette.grey[500]\r\n          }}\r\n        >\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </DialogTitle>\r\n  );\r\n}\r\n\r\nconst initialState = {\r\n  id: 0,\r\n  name: '',\r\n  title: '',\r\n  description: null,\r\n  isSend: false,\r\n  imageUrl: null,\r\n  sendCount: 0\r\n};\r\n\r\nconst CustomNotification = () => {\r\n  const navigate = useNavigate();\r\n  const theme = useTheme();\r\n  const [page, setPage] = useState<number>(0);\r\n  const [limit, setLimit] = useState<number>(10);\r\n  const [row, setRow] = useState<number>(10);\r\n  const [v1, setV1] = React.useState<any>(initialState);\r\n  const [isOpen, setIsOpen] = React.useState(false);\r\n  const [isloading, setIsLoading] = useState(false);\r\n  const [ischeck, setIsCheck] = useState(false);\r\n  let [search, setSearch] = useState('');\r\n\r\n  const [customNotifications, setCustomNotifications] = React.useState<any[]>(\r\n    []\r\n  );\r\n  const [isNameError, setIsNameError] = useState(false);\r\n  const [NameErrorMsg, setNameErrorMsg] = useState('');\r\n  const [isTitleError, setIsTitleError] = useState(false);\r\n  const [TitleErrorMsg, setTitleErrorMsg] = useState('');\r\n  const [isDescriptionError, setIsDescriptionError] = useState(false);\r\n  const [DescriptionErrorMsg, setDescriptionErrorMsg] = useState('');\r\n  const [image, setImage] = React.useState('');\r\n  let [credentail, setCredentail] = useState<any>();\r\n\r\n  const [isReadPermission, setIsReadPermission] = useState(true);\r\n  const [isWritePermission, setIsWritePermission] = useState(true);\r\n  const [isEditPermission, setIsEditPermission] = useState(true);\r\n  const [isDeletePermission, setIsDeletePermission] = useState(true);\r\n\r\n  const [isConfirmNotification, setConfirmNotification] = useState(false);\r\n  const [isNotificationConfirmation, setIsNotificationConfirmationDialog] =\r\n    useState(false);\r\n\r\n  const [apiUrl, setApiUrl] = useState<any>();\r\n\r\n  const { showSnackBar, SnackbarComponent } = useSnackbar();\r\n\r\n  useEffect(() => {\r\n    let cred = JSON.parse(localStorage.getItem('Credentials'));\r\n    setCredentail(cred);\r\n    if (cred) {\r\n      if (cred.roleId != 1) {\r\n        let ind = cred.pagePermissions.findIndex(\r\n          (c: any) => c.title === 'Block Users'\r\n        );\r\n        if (ind >= 0) {\r\n          setIsReadPermission(cred.pagePermissions[ind].isReadPermission);\r\n          setIsWritePermission(cred.pagePermissions[ind].isAddPermission);\r\n          setIsEditPermission(cred.pagePermissions[ind].isEditPermission);\r\n          setIsDeletePermission(cred.pagePermissions[ind].isDeletePermission);\r\n\r\n          if (cred.pagePermissions[ind].isReadPermission) getdata(page, limit);\r\n        }\r\n      } else {\r\n        getdata(page, limit);\r\n        loadjson();\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  const loadjson = async () => {\r\n    let res = await fetch('/admin/variable.json'); // Adjust the file path as needed\r\n    let url = await res.json();\r\n    setApiUrl(url);\r\n  };\r\n\r\n  const getdata = async (startIndex: number, fetchRecord: number) => {\r\n    try {\r\n      if (search) {\r\n        const token = localStorage.getItem('SessionToken');\r\n        const refreshToken = localStorage.getItem('RefreshToken');\r\n        let obj = {\r\n          startIndex: startIndex,\r\n          fetchRecord: fetchRecord,\r\n          isActive: null,\r\n          searchString: search ? search : ''\r\n        };\r\n        const res = await APIservice.httpPost(\r\n          '/api/admin/customNotification/getCustomNotification',\r\n          obj,\r\n          token,\r\n          refreshToken\r\n        );\r\n        setCustomNotifications(res.recordList);\r\n        setRow(res.totalRecords);\r\n      } else {\r\n        setIsLoading(true);\r\n        const token = localStorage.getItem('SessionToken');\r\n        const refreshToken = localStorage.getItem('RefreshToken');\r\n        let obj = {\r\n          startIndex: startIndex,\r\n          fetchRecord: fetchRecord,\r\n          isActive: null\r\n        };\r\n        const res = await APIservice.httpPost(\r\n          '/api/admin/customNotification/getCustomNotification',\r\n          obj,\r\n          token,\r\n          refreshToken\r\n        );\r\n        setCustomNotifications(res.recordList);\r\n        setRow(res.totalRecords);\r\n        if (res && res.status == 200) {\r\n          setIsOpen(false);\r\n        } else if (res.status == 401) {\r\n          navigate('/admin');\r\n          localStorage.clear();\r\n        } else if (res.status == 500) {\r\n          setIsOpen(false);\r\n          toast.error(res.message, {\r\n            autoClose: 6000,\r\n            hideProgressBar: true,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n            theme: 'colored',\r\n            position: toast.POSITION.TOP_RIGHT\r\n          });\r\n        } else if (res.status == 300) {\r\n          setIsOpen(false);\r\n          toast.error(res.message, {\r\n            autoClose: 6000,\r\n            hideProgressBar: true,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n            theme: 'colored',\r\n            position: toast.POSITION.TOP_RIGHT\r\n          });\r\n        } else if (res.status == 400) {\r\n          setIsOpen(false);\r\n          toast.error(res.message, {\r\n            autoClose: 6000,\r\n            hideProgressBar: true,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n            theme: 'colored',\r\n            position: toast.POSITION.TOP_RIGHT\r\n          });\r\n        } else if (res.status == 404) {\r\n          setIsOpen(false);\r\n          toast.error(res.message, {\r\n            autoClose: 6000,\r\n            hideProgressBar: true,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n            theme: 'colored',\r\n            position: toast.POSITION.TOP_RIGHT\r\n          });\r\n        }\r\n        setIsLoading(false);\r\n      }\r\n    } catch (error) {\r\n      setIsLoading(false);\r\n      setIsOpen(false);\r\n      toast.error(error, {\r\n        autoClose: 6000,\r\n        hideProgressBar: true,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: 'colored',\r\n        position: toast.POSITION.TOP_RIGHT\r\n      });\r\n    }\r\n  };\r\n\r\n  const searchData = (e) => {\r\n    setSearch(e.target.value);\r\n    search = e.target.value;\r\n    getdata(page, limit);\r\n  };\r\n\r\n  const handlePageChange = (event: any, newPage: number): void => {\r\n    setPage(newPage);\r\n    getdata(newPage * limit, limit);\r\n  };\r\n\r\n  const handleLimitChange = (event: ChangeEvent<HTMLInputElement>): void => {\r\n    setLimit(parseInt(event.target.value));\r\n    setPage(0);\r\n    getdata(0, parseInt(event.target.value));\r\n  };\r\n\r\n  const handleClickOpenAdd = async () => {\r\n    setV1(initialState);\r\n    setIsOpen(true);\r\n    setIsNameError(false);\r\n    setNameErrorMsg('');\r\n    setIsTitleError(false);\r\n    setTitleErrorMsg('');\r\n    setIsDescriptionError(false);\r\n    setDescriptionErrorMsg('');\r\n    setImage('');\r\n  };\r\n\r\n  const handleSwitch = async (id: number, status: number) => {\r\n    let obj = {\r\n      id: id,\r\n      status: status\r\n    };\r\n    setV1(obj);\r\n    setIsCheck(true);\r\n  };\r\n\r\n  const handleSwitchCheck = async () => {\r\n    const token = localStorage.getItem('SessionToken');\r\n    const refreshToken = localStorage.getItem('RefreshToken');\r\n    let obj = {\r\n      id: v1.id\r\n    };\r\n    const res = await APIservice.httpPost(\r\n      '/api/admin/customNotification/activeInactiveCustomNotification',\r\n      obj,\r\n      token,\r\n      refreshToken\r\n    );\r\n    setIsCheck(false);\r\n    getdata(page * limit, limit);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setIsCheck(false);\r\n  };\r\n\r\n  const handleClickResend = async (obj: any) => {\r\n    try {\r\n      setIsLoading(true);\r\n      const token = localStorage.getItem('SessionToken');\r\n      const refreshToken = localStorage.getItem('RefreshToken');\r\n      const res = await APIservice.httpPost(\r\n        '/api/admin/customNotification/sendCustomNotification',\r\n        { id: obj.id },\r\n        token,\r\n        refreshToken\r\n      );\r\n      if (res && res.status == 200) {\r\n        setPage(0);\r\n        setIsOpen(false);\r\n        getdata(0, limit);\r\n      } else if (res.status == 401) {\r\n        navigate('/admin');\r\n        localStorage.clear();\r\n      } else if (res.status == 500) {\r\n        setIsOpen(false);\r\n        toast.error(res.message, {\r\n          autoClose: 6000,\r\n          hideProgressBar: true,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: 'colored',\r\n          position: toast.POSITION.TOP_RIGHT\r\n        });\r\n      } else if (res.status == 300) {\r\n        setIsOpen(false);\r\n        toast.error(res.message, {\r\n          autoClose: 6000,\r\n          hideProgressBar: true,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: 'colored',\r\n          position: toast.POSITION.TOP_RIGHT\r\n        });\r\n      } else if (res.status == 404) {\r\n        setIsOpen(false);\r\n        toast.error(res.message, {\r\n          autoClose: 6000,\r\n          hideProgressBar: true,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: 'colored',\r\n          position: toast.POSITION.TOP_RIGHT\r\n        });\r\n      } else if (res.status == 400) {\r\n        setIsOpen(false);\r\n        toast.error(res.message, {\r\n          autoClose: 6000,\r\n          hideProgressBar: true,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: 'colored',\r\n          position: toast.POSITION.TOP_RIGHT\r\n        });\r\n      }\r\n      setIsLoading(false);\r\n    } catch (error: any) {\r\n      setIsLoading(false);\r\n      setIsOpen(false);\r\n      toast.error(error, {\r\n        autoClose: 6000,\r\n        hideProgressBar: true,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: 'colored',\r\n        position: toast.POSITION.TOP_RIGHT\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleClickOpenEdit = (obj: any) => {\r\n    if (obj.imageUrl) setImage(obj.imageUrl);\r\n    else setImage('');\r\n    setV1(obj);\r\n    setIsOpen(true);\r\n    setIsNameError(false);\r\n    setNameErrorMsg('');\r\n    setIsTitleError(false);\r\n    setTitleErrorMsg('');\r\n    setIsDescriptionError(false);\r\n    setDescriptionErrorMsg('');\r\n  };\r\n\r\n  const handleCloseCustomNotificationDialog = () => {\r\n    setIsOpen(false);\r\n  };\r\n\r\n  const handleInputChange = (arr: any) => {\r\n    const { name, value } = arr.target;\r\n    setV1({ ...v1, [name]: value });\r\n    setIsOpen(true);\r\n  };\r\n\r\n  const validateName = (arr) => {\r\n    const { name, value } = arr.target;\r\n    if (value) {\r\n      setIsNameError(false);\r\n      setNameErrorMsg('');\r\n    } else {\r\n      setIsNameError(true);\r\n      setNameErrorMsg('Custom Notification Name is required');\r\n    }\r\n  };\r\n  const validateTitle = (arr) => {\r\n    const { name, value } = arr.target;\r\n    if (value) {\r\n      setIsTitleError(false);\r\n      setTitleErrorMsg('');\r\n    } else {\r\n      setIsTitleError(true);\r\n      setTitleErrorMsg('Custom Notification Title is required');\r\n    }\r\n  };\r\n  const validateDescription = (arr) => {\r\n    let value = arr;\r\n    if (value) {\r\n      setIsDescriptionError(false);\r\n      setDescriptionErrorMsg('');\r\n    } else {\r\n      setIsDescriptionError(true);\r\n      setDescriptionErrorMsg('Custom Notification Description is required');\r\n    }\r\n  };\r\n\r\n  const validateForm = (e: any) => {\r\n    e?.preventDefault();\r\n    var flag = true;\r\n    if (!v1.name) {\r\n      setIsNameError(true);\r\n      setNameErrorMsg('Custom Notification Name is required');\r\n      flag = false;\r\n    } else {\r\n      setIsNameError(false);\r\n      setNameErrorMsg('');\r\n      // flag = true;\r\n    }\r\n    if (!v1.description) {\r\n      setIsDescriptionError(true);\r\n      setDescriptionErrorMsg('Custom Description is required');\r\n      flag = false;\r\n    } else {\r\n      setIsDescriptionError(false);\r\n      setDescriptionErrorMsg('');\r\n      // flag = true;\r\n    }\r\n    if (!v1.title) {\r\n      setIsTitleError(true);\r\n      setTitleErrorMsg('Custom Notification Title is required');\r\n      flag = false;\r\n    } else {\r\n      setIsTitleError(false);\r\n      setTitleErrorMsg('');\r\n      // flag = true;\r\n    }\r\n    if (!flag) {\r\n      setConfirmNotification(false);\r\n    }\r\n    return flag;\r\n  };\r\n\r\n  const handleDescriptionChange = (dateVal: string) => {\r\n    setV1({ ...v1, description: dateVal });\r\n  };\r\n\r\n  const onFileChange = (e: any) => {\r\n    const file = e.target.files[0];\r\n    const name = e.target.name;\r\n    const reader = new FileReader();\r\n\r\n    reader.onload = () => {\r\n      setImage(reader.result.toString());\r\n      setV1({\r\n        ...v1,\r\n        [name]: reader.result.toString()\r\n      });\r\n    };\r\n    reader.readAsDataURL(file);\r\n  };\r\n\r\n  const onImageChange = (e: any) => {\r\n    const { name, value } = e.target;\r\n    setV1({\r\n      ...v1,\r\n      [name]: value\r\n    });\r\n  };\r\n\r\n  const handleConfirmationNotification = (element: any) => {\r\n    debugger;\r\n    setConfirmNotification(true);\r\n  };\r\n\r\n  const handleConfirmNotificationClose = () => {\r\n    debugger;\r\n    setIsNotificationConfirmationDialog(false);\r\n    setConfirmNotification(false);\r\n  };\r\n\r\n  const saveCustomNotification = async (e: any, isSend: boolean) => {\r\n    var flag = validateForm(e);\r\n    if (flag) {\r\n      try {\r\n        setIsLoading(true);\r\n        v1.imageUrl = v1.imageUrl ? v1.imageUrl : null;\r\n        if (v1.id) {\r\n          const token = localStorage.getItem('SessionToken');\r\n          const refreshToken = localStorage.getItem('RefreshToken');\r\n          let val = v1;\r\n          let pckgs = [];\r\n          val.isActive = v1.isActive == 1 ? true : false;\r\n          val.isDelete = v1.isDelete == 1 ? true : false;\r\n          val.isSend = isSend;\r\n          const res = await APIservice.httpPost(\r\n            '/api/admin/customNotification/insertUpdateCustomNotification',\r\n            val,\r\n            token,\r\n            refreshToken\r\n          );\r\n          if (res && res.status == 200) {\r\n            setConfirmNotification(false);\r\n            setIsOpen(false);\r\n            getdata(page * limit, limit);\r\n          } else if (res.status == 401) {\r\n            navigate('/admin');\r\n            localStorage.clear();\r\n          } else if (res.status == 500) {\r\n            setConfirmNotification(false);\r\n            setIsOpen(false);\r\n            toast.error(res.message, {\r\n              autoClose: 6000,\r\n              hideProgressBar: true,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              draggable: true,\r\n              progress: undefined,\r\n              theme: 'colored',\r\n              position: toast.POSITION.TOP_RIGHT\r\n            });\r\n          } else if (res.status == 300) {\r\n            setConfirmNotification(false);\r\n            setIsOpen(false);\r\n            toast.error(res.message, {\r\n              autoClose: 6000,\r\n              hideProgressBar: true,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              draggable: true,\r\n              progress: undefined,\r\n              theme: 'colored',\r\n              position: toast.POSITION.TOP_RIGHT\r\n            });\r\n          } else if (res.status == 404) {\r\n            setConfirmNotification(false);\r\n            setIsOpen(false);\r\n            toast.error(res.message, {\r\n              autoClose: 6000,\r\n              hideProgressBar: true,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              draggable: true,\r\n              progress: undefined,\r\n              theme: 'colored',\r\n              position: toast.POSITION.TOP_RIGHT\r\n            });\r\n          } else if (res.status == 400) {\r\n            setConfirmNotification(false);\r\n            setIsOpen(false);\r\n            toast.error(res.message, {\r\n              autoClose: 6000,\r\n              hideProgressBar: true,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              draggable: true,\r\n              progress: undefined,\r\n              theme: 'colored',\r\n              position: toast.POSITION.TOP_RIGHT\r\n            });\r\n          }\r\n        } else {\r\n          const token = localStorage.getItem('SessionToken');\r\n          const refreshToken = localStorage.getItem('RefreshToken');\r\n          let val = v1;\r\n          val.isSend = isSend;\r\n          const res = await APIservice.httpPost(\r\n            '/api/admin/customNotification/insertUpdateCustomNotification',\r\n            val,\r\n            token,\r\n            refreshToken\r\n          );\r\n          if (res && res.status == 200) {\r\n            setPage(0);\r\n            setConfirmNotification(false);\r\n            setIsOpen(false);\r\n            getdata(0, limit);\r\n          } else if (res.status == 401) {\r\n            navigate('/admin');\r\n            localStorage.clear();\r\n          } else if (res.status == 500) {\r\n            setConfirmNotification(false);\r\n            setIsOpen(false);\r\n            toast.error(res.message, {\r\n              autoClose: 6000,\r\n              hideProgressBar: true,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              draggable: true,\r\n              progress: undefined,\r\n              theme: 'colored',\r\n              position: toast.POSITION.TOP_RIGHT\r\n            });\r\n          } else if (res.status == 300) {\r\n            setConfirmNotification(false);\r\n            setIsOpen(false);\r\n            toast.error(res.message, {\r\n              autoClose: 6000,\r\n              hideProgressBar: true,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              draggable: true,\r\n              progress: undefined,\r\n              theme: 'colored',\r\n              position: toast.POSITION.TOP_RIGHT\r\n            });\r\n          } else if (res.status == 404) {\r\n            setConfirmNotification(false);\r\n            setIsOpen(false);\r\n            toast.error(res.message, {\r\n              autoClose: 6000,\r\n              hideProgressBar: true,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              draggable: true,\r\n              progress: undefined,\r\n              theme: 'colored',\r\n              position: toast.POSITION.TOP_RIGHT\r\n            });\r\n          } else if (res.status == 400) {\r\n            setConfirmNotification(false);\r\n            setIsOpen(false);\r\n            toast.error(res.message, {\r\n              autoClose: 6000,\r\n              hideProgressBar: true,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              draggable: true,\r\n              progress: undefined,\r\n              theme: 'colored',\r\n              position: toast.POSITION.TOP_RIGHT\r\n            });\r\n          }\r\n        }\r\n        setIsLoading(false);\r\n      } catch (error: any) {\r\n        setIsLoading(false);\r\n        setConfirmNotification(false);\r\n        setIsOpen(false);\r\n        toast.error(error, {\r\n          autoClose: 6000,\r\n          hideProgressBar: true,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: 'colored',\r\n          position: toast.POSITION.TOP_RIGHT\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <ToastContainer\r\n        style={{ top: '8.5%', right: '0%' }}\r\n        // position=\"top-right\"\r\n        autoClose={6000}\r\n        hideProgressBar={true}\r\n        newestOnTop={false}\r\n        closeOnClick\r\n        rtl={false}\r\n        pauseOnFocusLoss\r\n        draggable\r\n        pauseOnHover\r\n      />\r\n      <Helmet>\r\n        <title>Custom Notification</title>\r\n      </Helmet>\r\n      <PageTitleWrapper>\r\n        <Box p={1}>\r\n          <Grid container justifyContent=\"space-between\" alignItems=\"center\">\r\n            <Grid item>\r\n              <Stack alignItems=\"left\" justifyContent=\"space-between\">\r\n                <Breadcrumbs aria-label=\"breadcrumb\">\r\n                  <Link\r\n                    to=\"/admin/dashboard\"\r\n                    style={{ display: 'flex', color: 'black' }}\r\n                  >\r\n                    <HomeIcon />\r\n                  </Link>\r\n                  <Typography\r\n                    variant=\"subtitle2\"\r\n                    color=\"inherit\"\r\n                    fontWeight=\"bold\"\r\n                  >\r\n                    Custom Notification\r\n                  </Typography>\r\n                </Breadcrumbs>\r\n              </Stack>\r\n            </Grid>\r\n            <Grid item>\r\n              <Grid container spacing={1.5}>\r\n                {isWritePermission ? (\r\n                  <>\r\n                    <Grid item>\r\n                      <Button\r\n                        className=\"buttonLarge\"\r\n                        sx={{\r\n                          mt: {\r\n                            xs: 0,\r\n                            md: 0,\r\n                            display: 'flex',\r\n                            alignItems: 'center',\r\n                            padding: '8.3px',\r\n                            top: '3px'\r\n                          }\r\n                        }}\r\n                        variant=\"contained\"\r\n                        onClick={handleClickOpenAdd}\r\n                        size=\"small\"\r\n                      >\r\n                        <AddTwoToneIcon fontSize=\"small\" />\r\n                        Create Custom Notification\r\n                      </Button>\r\n                      <Button\r\n                        className=\"button\"\r\n                        sx={{\r\n                          mt: {\r\n                            xs: 0,\r\n                            md: 0,\r\n                            display: 'flex',\r\n                            alignItems: 'center',\r\n                            padding: '8.3px',\r\n                            top: '3px'\r\n                          }\r\n                        }}\r\n                        variant=\"contained\"\r\n                        onClick={handleClickOpenAdd}\r\n                        size=\"small\"\r\n                      >\r\n                        <AddTwoToneIcon fontSize=\"small\" />\r\n                      </Button>\r\n                    </Grid>\r\n                    <Grid item>\r\n                      <FormControl\r\n                        sx={{ mt: { xs: 0.3, md: 0.3, lg: 0.3, sm: 0.3 } }}\r\n                      >\r\n                        <TextField\r\n                          // size=\"small\"\r\n                          id=\"outlined-basic\"\r\n                          label=\"Search\"\r\n                          variant=\"outlined\"\r\n                          name=\"searchString\"\r\n                          value={search}\r\n                          onChange={(e) => searchData(e)}\r\n                          size=\"small\"\r\n                          InputProps={{\r\n                            startAdornment: (\r\n                              <InputAdornment position=\"start\">\r\n                                <SearchIcon />\r\n                              </InputAdornment>\r\n                            )\r\n                          }}\r\n                        />\r\n                      </FormControl>\r\n                    </Grid>\r\n                  </>\r\n                ) : (\r\n                  <></>\r\n                )}\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </Box>\r\n      </PageTitleWrapper>\r\n      <Container maxWidth=\"lg\">\r\n        <Grid\r\n          container\r\n          direction=\"row\"\r\n          justifyContent=\"center\"\r\n          alignItems=\"stretch\"\r\n          spacing={3}\r\n        >\r\n          <Grid item xs={12}>\r\n            <>\r\n              <Card className=\"religioncard\">\r\n                <div>\r\n                  {isloading ? (\r\n                    <Loader1 title=\"Loading...\" />\r\n                  ) : (\r\n                    <>\r\n                      <Divider />\r\n                      {customNotifications && customNotifications.length > 0 ? (\r\n                        <>\r\n                          <TableContainer className=\"religiontableContainer\">\r\n                            <Table stickyHeader>\r\n                              <TableHead>\r\n                                <TableRow>\r\n                                  <TableCell colSpan={1}>\r\n                                    <Typography\r\n                                      noWrap\r\n                                      style={{\r\n                                        fontSize: '13px',\r\n                                        fontWeight: 'bold',\r\n                                        marginBottom: 'none'\r\n                                      }}\r\n                                    >\r\n                                      Sr. No\r\n                                    </Typography>\r\n                                  </TableCell>\r\n                                  <TableCell colSpan={1}>\r\n                                    <Typography\r\n                                      noWrap\r\n                                      style={{\r\n                                        fontSize: '13px',\r\n                                        fontWeight: 'bold',\r\n                                        marginBottom: 'none'\r\n                                      }}\r\n                                    >\r\n                                      Name\r\n                                    </Typography>\r\n                                  </TableCell>\r\n                                  <TableCell colSpan={1}>\r\n                                    <Typography\r\n                                      noWrap\r\n                                      style={{\r\n                                        fontSize: '13px',\r\n                                        fontWeight: 'bold',\r\n                                        marginBottom: 'none'\r\n                                      }}\r\n                                    >\r\n                                      Title\r\n                                    </Typography>\r\n                                  </TableCell>\r\n                                  <TableCell colSpan={3}>\r\n                                    <Typography\r\n                                      noWrap\r\n                                      style={{\r\n                                        fontSize: '13px',\r\n                                        fontWeight: 'bold',\r\n                                        marginBottom: 'none'\r\n                                      }}\r\n                                    >\r\n                                      Description\r\n                                    </Typography>\r\n                                  </TableCell>\r\n                                  <TableCell align=\"right\" colSpan={1}>\r\n                                    <Typography\r\n                                      noWrap\r\n                                      style={{\r\n                                        fontSize: '13px',\r\n                                        fontWeight: 'bold',\r\n                                        marginBottom: 'none'\r\n                                      }}\r\n                                    >\r\n                                      Actions\r\n                                    </Typography>\r\n                                  </TableCell>\r\n                                </TableRow>\r\n                              </TableHead>\r\n                              <TableBody>\r\n                                {customNotifications.map(\r\n                                  (arr: any, index: number) => {\r\n                                    return (\r\n                                      <TableRow hover key={arr.id}>\r\n                                        <TableCell colSpan={1}>\r\n                                          <Typography\r\n                                            variant=\"body1\"\r\n                                            fontWeight=\"bold\"\r\n                                            color=\"text.primary\"\r\n                                            gutterBottom\r\n                                            noWrap\r\n                                          >\r\n                                            {page * limit + index + 1}\r\n                                          </Typography>\r\n                                        </TableCell>\r\n                                        <TableCell colSpan={1}>\r\n                                          <Typography\r\n                                            variant=\"body1\"\r\n                                            fontWeight=\"bold\"\r\n                                            color=\"text.primary\"\r\n                                            gutterBottom\r\n                                            noWrap\r\n                                            sx={{ textTransform: 'capitalize' }}\r\n                                          >\r\n                                            {arr.name}\r\n                                          </Typography>\r\n                                        </TableCell>\r\n                                        <TableCell colSpan={1}>\r\n                                          <Typography\r\n                                            variant=\"body1\"\r\n                                            fontWeight=\"bold\"\r\n                                            color=\"text.primary\"\r\n                                            gutterBottom\r\n                                            noWrap\r\n                                            sx={{ textTransform: 'capitalize' }}\r\n                                          >\r\n                                            {arr.title}\r\n                                          </Typography>\r\n                                        </TableCell>\r\n                                        <TableCell colSpan={3}>\r\n                                          <Typography\r\n                                            variant=\"body1\"\r\n                                            fontWeight=\"bold\"\r\n                                            color=\"text.primary\"\r\n                                            gutterBottom\r\n                                            noWrap\r\n                                            sx={{\r\n                                              textTransform: 'capitalize',\r\n                                              width: '250px'\r\n                                            }}\r\n                                          >\r\n                                            {arr.description}\r\n                                          </Typography>\r\n                                        </TableCell>\r\n                                        <TableCell colSpan={1} align=\"right\">\r\n                                          {isEditPermission ? (\r\n                                            <>\r\n                                              <Tooltip\r\n                                                title={\r\n                                                  arr.isActive === 0\r\n                                                    ? 'Inactive'\r\n                                                    : 'Active'\r\n                                                }\r\n                                                arrow\r\n                                              >\r\n                                                <Switch\r\n                                                  disabled={\r\n                                                    credentail?.isDemoAdmin\r\n                                                  }\r\n                                                  checked={\r\n                                                    arr.isActive === 0\r\n                                                      ? false\r\n                                                      : true\r\n                                                  }\r\n                                                  onClick={(e) =>\r\n                                                    handleSwitch(\r\n                                                      arr.id,\r\n                                                      arr.isActive\r\n                                                    )\r\n                                                  }\r\n                                                  inputProps={{\r\n                                                    'aria-label': 'controlled'\r\n                                                  }}\r\n                                                />\r\n                                              </Tooltip>\r\n                                              <Tooltip title=\"Edit\" arrow>\r\n                                                <IconButton\r\n                                                  disabled={\r\n                                                    credentail?.isDemoAdmin\r\n                                                  }\r\n                                                  sx={{\r\n                                                    '&:hover': {\r\n                                                      background:\r\n                                                        theme.colors.primary\r\n                                                          .lighter\r\n                                                    },\r\n                                                    color:\r\n                                                      theme.palette.primary.main\r\n                                                  }}\r\n                                                  color=\"inherit\"\r\n                                                  size=\"small\"\r\n                                                  onClick={(e) =>\r\n                                                    handleClickOpenEdit(arr)\r\n                                                  }\r\n                                                  data-toggle=\"modal\"\r\n                                                  data-target=\"#exampleModal\"\r\n                                                >\r\n                                                  <EditTwoToneIcon fontSize=\"small\" />\r\n                                                </IconButton>\r\n                                              </Tooltip>\r\n                                              <Tooltip title=\"Send\" arrow>\r\n                                                <IconButton\r\n                                                  disabled={\r\n                                                    credentail?.isDemoAdmin\r\n                                                  }\r\n                                                  sx={{\r\n                                                    '&:hover': {\r\n                                                      background:\r\n                                                        theme.colors.primary\r\n                                                          .lighter\r\n                                                    },\r\n                                                    color:\r\n                                                      theme.palette.primary.main\r\n                                                  }}\r\n                                                  color=\"inherit\"\r\n                                                  size=\"small\"\r\n                                                  onClick={(e) =>\r\n                                                    handleClickResend(arr)\r\n                                                  }\r\n                                                >\r\n                                                  <ForwardToInboxIcon fontSize=\"small\" />\r\n                                                </IconButton>\r\n                                              </Tooltip>\r\n                                            </>\r\n                                          ) : (\r\n                                            <></>\r\n                                          )}\r\n                                        </TableCell>\r\n                                      </TableRow>\r\n                                    );\r\n                                  }\r\n                                )}\r\n                              </TableBody>\r\n                            </Table>\r\n                          </TableContainer>\r\n                          <Box p={2}>\r\n                            <TablePagination\r\n                              component=\"div\"\r\n                              count={row}\r\n                              onPageChange={handlePageChange}\r\n                              onRowsPerPageChange={handleLimitChange}\r\n                              page={page}\r\n                              rowsPerPage={limit}\r\n                              rowsPerPageOptions={[10, 20, 30, 40]}\r\n                            />\r\n                          </Box>\r\n                        </>\r\n                      ) : (\r\n                        <Paper\r\n                          sx={{\r\n                            display: 'flex',\r\n                            justifyContent: 'center',\r\n                            alignItems: 'center',\r\n                            textAlign: 'center',\r\n                            verticalAlign: 'middle',\r\n                            boxShadow: 'none'\r\n                          }}\r\n                          className=\"religioncard\"\r\n                        >\r\n                          <Typography variant=\"h5\" paragraph>\r\n                            Data not Found\r\n                          </Typography>\r\n                        </Paper>\r\n                      )}\r\n                      <div>\r\n                        <Dialog\r\n                          open={ischeck}\r\n                          onClose={handleClose}\r\n                          fullWidth\r\n                          maxWidth=\"xs\"\r\n                        >\r\n                          <DialogTitle\r\n                            sx={{\r\n                              m: 0,\r\n                              p: 2,\r\n                              fontSize: '20px',\r\n                              fontWeight: 'bolder'\r\n                            }}\r\n                          >\r\n                            {v1.status === 0 ? 'Inactive' : 'Active'}\r\n                          </DialogTitle>\r\n                          <DialogContent>\r\n                            <DialogContentText\r\n                              style={{\r\n                                fontSize: '1rem',\r\n                                letterSpacing: '0.00938em'\r\n                              }}\r\n                            >\r\n                              {v1.status === 0\r\n                                ? 'Are you sure you want to Active?'\r\n                                : 'Are you sure you want to Inactive?'}\r\n                            </DialogContentText>\r\n                          </DialogContent>\r\n                          <DialogActions>\r\n                            <Button\r\n                              onClick={handleClose}\r\n                              variant=\"outlined\"\r\n                              style={{ marginRight: '10px' }}\r\n                            >\r\n                              Cancel\r\n                            </Button>\r\n                            <Button\r\n                              //  disabled={credentail?.isDemoAdmin}\r\n                              onClick={() => checkIsDemoUser(handleSwitchCheck)()}\r\n                              variant=\"outlined\"\r\n                              style={{ marginRight: '10px' }}\r\n                            >\r\n                              Yes\r\n                            </Button>\r\n                          </DialogActions>\r\n                        </Dialog>\r\n                      </div>\r\n\r\n                      <div>\r\n                        <BootstrapDialog\r\n                          open={isOpen}\r\n                          onClose={handleCloseCustomNotificationDialog}\r\n                          PaperProps={{ sx: { height: '40%' } }}\r\n                          fullWidth\r\n                          maxWidth=\"md\"\r\n                        >\r\n                          <BootstrapDialogTitle\r\n                            id=\"customized-dialog-title\"\r\n                            onClose={handleCloseCustomNotificationDialog}\r\n                          >\r\n                            {v1.id\r\n                              ? 'Edit Custom Notification'\r\n                              : 'Add Custom Notification'}\r\n                          </BootstrapDialogTitle>\r\n                          <DialogContent dividers>\r\n                            <SnackbarComponent />\r\n                            <div style={{ textAlign: 'center' }}>\r\n                              <FormGroup\r\n                                style={{\r\n                                  alignItems: 'center',\r\n                                  marginBottom: '10px'\r\n                                }}\r\n                              >\r\n                                <input\r\n                                  style={{\r\n                                    display: 'none'\r\n                                  }}\r\n                                  id=\"icon-button-file\"\r\n                                  type=\"file\"\r\n                                  accept=\"image/*\"\r\n                                  name=\"imageUrl\"\r\n                                  onChange={(e) => {\r\n                                    onFileChange(e);\r\n                                  }}\r\n                                  className=\"upload-button\"\r\n                                />\r\n                                <label htmlFor=\"icon-button-file\">\r\n                                  {image ? (\r\n                                    <img\r\n                                      src={image}\r\n                                      alt=\"notification Url\"\r\n                                      style={{\r\n                                        height: '120px',\r\n                                        width: 'auto'\r\n                                        // borderRadius: '50%',\r\n                                      }}\r\n                                    />\r\n                                  ) : (\r\n                                    <img\r\n                                      src=\"/dummy.png\"\r\n                                      alt=\"notification Url\"\r\n                                      style={{\r\n                                        height: '100px',\r\n                                        width: '100px'\r\n                                        // borderRadius: '50%',\r\n                                      }}\r\n                                    />\r\n                                  )}\r\n                                </label>\r\n                              </FormGroup>\r\n                            </div>\r\n                            <TextField\r\n                              autoFocus\r\n                              margin=\"dense\"\r\n                              id=\"name\"\r\n                              label=\"Custom Notification Name\"\r\n                              type=\"text\"\r\n                              fullWidth\r\n                              variant=\"outlined\"\r\n                              name=\"name\"\r\n                              value={v1.name}\r\n                              onChange={(arr) => {\r\n                                handleInputChange(arr);\r\n                                validateName(arr);\r\n                              }}\r\n                              required={true}\r\n                            />\r\n                            <FormHelperText\r\n                              style={{ color: 'red', height: '22px' }}\r\n                            >\r\n                              {isNameError && NameErrorMsg}\r\n                            </FormHelperText>\r\n                            {/* </Grid> */}\r\n                            {/* <Grid item xs={12}> */}\r\n                            <TextField\r\n                              autoFocus\r\n                              margin=\"dense\"\r\n                              id=\"name\"\r\n                              label=\"Custom Notification Title\"\r\n                              type=\"text\"\r\n                              fullWidth\r\n                              variant=\"outlined\"\r\n                              name=\"title\"\r\n                              value={v1.title}\r\n                              onChange={(arr) => {\r\n                                handleInputChange(arr);\r\n                                validateTitle(arr);\r\n                              }}\r\n                              required={true}\r\n                            />\r\n                            <FormHelperText\r\n                              style={{ color: 'red', height: '22px' }}\r\n                            >\r\n                              {isTitleError && TitleErrorMsg}\r\n                            </FormHelperText>\r\n                            <TextField\r\n                              id=\"outlined-multiline-static\"\r\n                              label=\"Description\"\r\n                              multiline\r\n                              fullWidth\r\n                              rows={4}\r\n                              defaultValue=\"\"\r\n                              value={v1.description}\r\n                              name=\"description\"\r\n                              onChange={(arr) => {\r\n                                handleInputChange(arr);\r\n                                validateDescription(arr);\r\n                              }}\r\n                              required={true}\r\n                            />\r\n                            <FormHelperText\r\n                              style={{ color: 'red', height: '22px' }}\r\n                            >\r\n                              {isDescriptionError && DescriptionErrorMsg}\r\n                            </FormHelperText>\r\n                          </DialogContent>\r\n                          <Box\r\n                            sx={{\r\n                              display: 'flex',\r\n                              justifyContent: 'space-between',\r\n                              p: '8px'\r\n                            }}\r\n                          >\r\n                            <FormHelperText\r\n                              style={{\r\n                                color: 'red',\r\n                                height: '22px',\r\n                                margin: 'none',\r\n                                padding: '8px'\r\n                              }}\r\n                            ></FormHelperText>\r\n                            <div>\r\n                              <Typography>\r\n                                <Button\r\n                                  onClick={handleCloseCustomNotificationDialog}\r\n                                  variant=\"outlined\"\r\n                                  style={{ marginRight: '10px' }}\r\n                                >\r\n                                  Cancel\r\n                                </Button>\r\n                                {/* <Button disabled={credentail?.email === \"demo@admin.com\"} onClick={(e) => { saveCustomNotification(e, true) }} variant=\"outlined\" style={{ marginRight: '10px' }}>Send & Save</Button> */}\r\n                                <Button\r\n                                  // disabled={credentail?.isDemoAdmin}\r\n                                  onClick={(e) =>\r\n                                    checkIsDemoUser(\r\n                                      () => handleConfirmationNotification(e),\r\n                                      showSnackBar\r\n                                    )()\r\n                                  }\r\n                                  variant=\"outlined\"\r\n                                  style={{ marginRight: '10px' }}\r\n                                >\r\n                                  Send & Save\r\n                                </Button>\r\n                                <Button\r\n                                  // disabled={credentail?.isDemoAdmin}\r\n                                  onClick={(e) =>\r\n                                    checkIsDemoUser(\r\n                                      () => saveCustomNotification(e, false),\r\n                                      showSnackBar\r\n                                    )()\r\n                                  }\r\n                                  variant=\"outlined\"\r\n                                  style={{ marginRight: '10px' }}\r\n                                >\r\n                                  Save\r\n                                </Button>\r\n                              </Typography>\r\n                            </div>\r\n                          </Box>\r\n                        </BootstrapDialog>\r\n                      </div>\r\n                    </>\r\n                  )}\r\n                </div>\r\n              </Card>\r\n              <div>\r\n                <Dialog\r\n                  open={isConfirmNotification}\r\n                  onClose={handleConfirmNotificationClose}\r\n                  fullWidth\r\n                  maxWidth=\"xs\"\r\n                >\r\n                  <DialogTitle\r\n                    sx={{\r\n                      m: 0,\r\n                      p: 2,\r\n                      fontSize: '16px',\r\n                      fontWeight: 'bolder'\r\n                      // borderBottom: '1px solid #ddd'\r\n                    }}\r\n                  >\r\n                    Are you sure you want to send and save this notification?\r\n                  </DialogTitle>\r\n                  <DialogContent></DialogContent>\r\n                  <DialogActions>\r\n                    <Button\r\n                      onClick={handleConfirmNotificationClose}\r\n                      variant=\"outlined\"\r\n                      style={{ marginRight: '10px' }}\r\n                    >\r\n                      Cancel\r\n                    </Button>\r\n                    <Button\r\n                      //  disabled={credentail?.isDemoAdmin}\r\n                      onClick={(e) => {\r\n                        checkIsDemoUser(() =>\r\n                          saveCustomNotification(e, true)\r\n                        )();\r\n                      }}\r\n                      variant=\"outlined\"\r\n                      style={{ marginRight: '10px' }}\r\n                    >\r\n                      Save And Send\r\n                    </Button>\r\n                  </DialogActions>\r\n                </Dialog>\r\n              </div>\r\n            </>\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CustomNotification;\r\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M20 4H4c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h9v-2H4V8l8 5 8-5v5h2V6c0-1.1-.9-2-2-2zm-8 7L4 6h16l-8 5zm7 4 4 4-4 4v-3h-4v-2h4v-3z\"\n}), 'ForwardToInbox');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\"\n}), 'Search');\nexports.default = _default;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getTableHeadUtilityClass(slot) {\n  return generateUtilityClass('MuiTableHead', slot);\n}\nconst tableHeadClasses = generateUtilityClasses('MuiTableHead', ['root']);\nexport default tableHeadClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport Tablelvl2Context from '../Table/Tablelvl2Context';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport styled from '../styles/styled';\nimport { getTableHeadUtilityClass } from './tableHeadClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getTableHeadUtilityClass, classes);\n};\nconst TableHeadRoot = styled('thead', {\n  name: 'MuiTableHead',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  display: 'table-header-group'\n});\nconst tablelvl2 = {\n  variant: 'head'\n};\nconst defaultComponent = 'thead';\nconst TableHead = /*#__PURE__*/React.forwardRef(function TableHead(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiTableHead'\n  });\n  const {\n      className,\n      component = defaultComponent\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    component\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(Tablelvl2Context.Provider, {\n    value: tablelvl2,\n    children: /*#__PURE__*/_jsx(TableHeadRoot, _extends({\n      as: component,\n      className: clsx(classes.root, className),\n      ref: ref,\n      role: component === defaultComponent ? null : 'rowgroup',\n      ownerState: ownerState\n    }, other))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? TableHead.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component, normally `TableRow`.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default TableHead;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getTableUtilityClass(slot) {\n  return generateUtilityClass('MuiTable', slot);\n}\nconst tableClasses = generateUtilityClasses('MuiTable', ['root', 'stickyHeader']);\nexport default tableClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"component\", \"padding\", \"size\", \"stickyHeader\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport TableContext from './TableContext';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport styled from '../styles/styled';\nimport { getTableUtilityClass } from './tableClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    stickyHeader\n  } = ownerState;\n  const slots = {\n    root: ['root', stickyHeader && 'stickyHeader']\n  };\n  return composeClasses(slots, getTableUtilityClass, classes);\n};\nconst TableRoot = styled('table', {\n  name: 'MuiTable',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.stickyHeader && styles.stickyHeader];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  display: 'table',\n  width: '100%',\n  borderCollapse: 'collapse',\n  borderSpacing: 0,\n  '& caption': _extends({}, theme.typography.body2, {\n    padding: theme.spacing(2),\n    color: (theme.vars || theme).palette.text.secondary,\n    textAlign: 'left',\n    captionSide: 'bottom'\n  })\n}, ownerState.stickyHeader && {\n  borderCollapse: 'separate'\n}));\nconst defaultComponent = 'table';\nconst Table = /*#__PURE__*/React.forwardRef(function Table(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiTable'\n  });\n  const {\n      className,\n      component = defaultComponent,\n      padding = 'normal',\n      size = 'medium',\n      stickyHeader = false\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    component,\n    padding,\n    size,\n    stickyHeader\n  });\n  const classes = useUtilityClasses(ownerState);\n  const table = React.useMemo(() => ({\n    padding,\n    size,\n    stickyHeader\n  }), [padding, size, stickyHeader]);\n  return /*#__PURE__*/_jsx(TableContext.Provider, {\n    value: table,\n    children: /*#__PURE__*/_jsx(TableRoot, _extends({\n      as: component,\n      role: component === defaultComponent ? null : 'table',\n      ref: ref,\n      className: clsx(classes.root, className),\n      ownerState: ownerState\n    }, other))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Table.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the table, normally `TableHead` and `TableBody`.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * Allows TableCells to inherit padding of the Table.\n   * @default 'normal'\n   */\n  padding: PropTypes.oneOf(['checkbox', 'none', 'normal']),\n  /**\n   * Allows TableCells to inherit size of the Table.\n   * @default 'medium'\n   */\n  size: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.string]),\n  /**\n   * Set the header sticky.\n   *\n   * ⚠️ It doesn't work with IE11.\n   * @default false\n   */\n  stickyHeader: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Table;"],"names":["PageTitle","styled","Box","_ref","theme","spacing","_ref2","children","_jsx","className","Container","maxWidth","props","title","BootstrapDialog","Dialog","padding","height","BootstrapDialogTitle","onClose","other","_jsxs","DialogTitle","sx","m","p","fontSize","fontWeight","IconButton","onClick","position","right","top","color","palette","grey","CloseIcon","initialState","id","name","description","isSend","imageUrl","sendCount","CustomNotification","navigate","useNavigate","useTheme","page","setPage","useState","limit","setLimit","row","setRow","v1","setV1","React","isOpen","setIsOpen","isloading","setIsLoading","ischeck","setIsCheck","search","setSearch","customNotifications","setCustomNotifications","isNameError","setIsNameError","NameErrorMsg","setNameErrorMsg","isTitleError","setIsTitleError","TitleErrorMsg","setTitleErrorMsg","isDescriptionError","setIsDescriptionError","DescriptionErrorMsg","setDescriptionErrorMsg","image","setImage","credentail","setCredentail","isReadPermission","setIsReadPermission","isWritePermission","setIsWritePermission","isEditPermission","setIsEditPermission","isDeletePermission","setIsDeletePermission","isConfirmNotification","setConfirmNotification","isNotificationConfirmation","setIsNotificationConfirmationDialog","apiUrl","setApiUrl","showSnackBar","SnackbarComponent","useSnackbar","useEffect","cred","JSON","parse","localStorage","getItem","roleId","ind","pagePermissions","findIndex","c","isAddPermission","getdata","loadjson","async","res","fetch","url","json","startIndex","fetchRecord","token","refreshToken","obj","isActive","searchString","APIservice","httpPost","recordList","totalRecords","status","clear","toast","error","message","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","POSITION","TOP_RIGHT","handleClickOpenAdd","handleSwitchCheck","handleClose","handleCloseCustomNotificationDialog","handleInputChange","arr","value","target","handleConfirmNotificationClose","saveCustomNotification","e","flag","preventDefault","validateForm","val","isDelete","ToastContainer","style","newestOnTop","rtl","pauseOnFocusLoss","Helmet","PageTitleWrapper","Grid","container","justifyContent","alignItems","item","Stack","Breadcrumbs","Link","to","display","HomeIcon","Typography","variant","_Fragment","Button","mt","xs","md","size","AddTwoToneIcon","FormControl","lg","sm","TextField","label","onChange","searchData","InputProps","startAdornment","InputAdornment","SearchIcon","direction","Card","Loader1","Divider","length","TableContainer","Table","stickyHeader","TableHead","TableRow","TableCell","colSpan","noWrap","marginBottom","align","TableBody","map","index","hover","gutterBottom","textTransform","width","Tooltip","arrow","Switch","disabled","isDemoAdmin","checked","handleSwitch","inputProps","background","colors","primary","lighter","main","handleClickOpenEdit","EditTwoToneIcon","handleClickResend","ForwardToInboxIcon","TablePagination","component","count","onPageChange","handlePageChange","event","newPage","onRowsPerPageChange","parseInt","rowsPerPage","rowsPerPageOptions","Paper","textAlign","verticalAlign","boxShadow","paragraph","open","fullWidth","DialogContent","DialogContentText","letterSpacing","DialogActions","marginRight","checkIsDemoUser","PaperProps","dividers","FormGroup","type","accept","file","files","reader","FileReader","onload","result","toString","readAsDataURL","onFileChange","htmlFor","src","alt","autoFocus","margin","validateName","required","FormHelperText","validateTitle","multiline","rows","defaultValue","validateDescription","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d","getTableHeadUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","TableHeadRoot","overridesResolver","styles","root","tablelvl2","defaultComponent","inProps","ref","useDefaultProps","_objectWithoutPropertiesLoose","ownerState","_extends","classes","composeClasses","useUtilityClasses","Tablelvl2Context","Provider","as","clsx","role","getTableUtilityClass","TableRoot","borderCollapse","borderSpacing","typography","body2","vars","text","secondary","captionSide","slots","table","TableContext"],"sourceRoot":""}