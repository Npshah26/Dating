{"version":3,"file":"static/js/4481.ba8a8711.chunk.js","mappings":"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","sources":["components/PageTitleWrapper/index.tsx","content/Loader.tsx","content/Subcommunity/SubCommunity.tsx","../node_modules/@mui/icons-material/Search.js","../node_modules/@mui/material/TableHead/tableHeadClasses.js","../node_modules/@mui/material/TableHead/TableHead.js","../node_modules/@mui/material/Table/tableClasses.js","../node_modules/@mui/material/Table/Table.js"],"sourcesContent":["import { FC, ReactNode } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Box, Container, styled } from '@mui/material';\r\n\r\nconst PageTitle = styled(Box)(\r\n  ({ theme }) => `\r\n        padding: ${theme.spacing(1)};\r\n`\r\n);\r\n\r\ninterface PageTitleWrapperProps {\r\n  children?: ReactNode;\r\n}\r\n\r\nconst PageTitleWrapper: FC<PageTitleWrapperProps> = ({ children }) => {\r\n  return (\r\n    <PageTitle className=\"MuiPageTitle-wrapper\">\r\n      <Container maxWidth=\"lg\">{children}</Container>\r\n    </PageTitle>\r\n  );\r\n};\r\n\r\nPageTitleWrapper.propTypes = {\r\n  children: PropTypes.node.isRequired\r\n};\r\n\r\nexport default PageTitleWrapper;\r\n","import React from 'react';\r\nimport './Loader.css';\r\n\r\ninterface Props {\r\n  title: string;\r\n}\r\n\r\nconst Loader1 = (props: Props) => {\r\n  const { title } = props;\r\n  return (\r\n    // <div className=\"loader\">\r\n    //     <img className=\"img\" src={loader} alt=\"\" />\r\n    //     <span>{title}</span>\r\n    // </div>\r\n    <div className=\"spinner-container\">\r\n      <div className=\"loading-spinner\"></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loader1;\r\n","import { Helmet } from 'react-helmet-async';\r\nimport PageTitleWrapper from '../../components/PageTitleWrapper';\r\nimport {\r\n  Grid,\r\n  Container,\r\n  Box,\r\n  Breadcrumbs,\r\n  Button,\r\n  Card,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n  Divider,\r\n  FormHelperText,\r\n  IconButton,\r\n  Stack,\r\n  styled,\r\n  Switch,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  TextField,\r\n  Tooltip,\r\n  Typography,\r\n  useTheme,\r\n  FormControl,\r\n  InputAdornment,\r\n  Paper,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem\r\n} from '@mui/material';\r\nimport EditTwoToneIcon from '@mui/icons-material/EditTwoTone';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport AddTwoToneIcon from '@mui/icons-material/AddTwoTone';\r\nimport HomeIcon from '@mui/icons-material/Home';\r\nimport Footer from 'src/components/Footer';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport React, { useState, ChangeEvent } from 'react';\r\nimport Loader1 from '../Loader';\r\nimport APIservice from 'src/utils/APIservice';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport '../smallScreen.css';\r\nimport { Religion } from 'src/models/religion';\r\nimport { Community } from 'src/models/community';\r\nimport checkIsDemoUser from 'src/utils/IsDemoUserCheck';\r\nimport { useSnackbar } from '../useSnackbar';\r\n\r\nconst BootstrapDialog = styled(Dialog)(({ theme }) => ({\r\n  '& .MuiDialogContent-root': {\r\n    padding: theme.spacing(2)\r\n  },\r\n  '& .MuiDialogActions-root': {\r\n    padding: theme.spacing(1)\r\n  },\r\n  '& .MuiPaper-root': {\r\n    height: '410px'\r\n  }\r\n}));\r\n\r\nexport interface DialogTitleProps {\r\n  id: string;\r\n  children?: React.ReactNode;\r\n  onClose: () => void;\r\n}\r\n\r\nfunction BootstrapDialogTitle(props: DialogTitleProps) {\r\n  const { children, onClose, ...other } = props;\r\n\r\n  return (\r\n    <DialogTitle\r\n      sx={{ m: 0, p: 2, fontSize: '18px', fontWeight: 'bold' }}\r\n      {...other}\r\n    >\r\n      {children}\r\n      {onClose ? (\r\n        <IconButton\r\n          aria-label=\"close\"\r\n          onClick={onClose}\r\n          sx={{\r\n            position: 'absolute',\r\n            right: 13,\r\n            top: 13,\r\n            color: (theme) => theme.palette.grey[500]\r\n          }}\r\n        >\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </DialogTitle>\r\n  );\r\n}\r\n\r\nconst initialState = {\r\n  id: 0,\r\n  name: '',\r\n  religionId: 0,\r\n  communityId: 0\r\n};\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n      width: 250\r\n    }\r\n  }\r\n};\r\n\r\nfunction SubCommunity() {\r\n  const [religions, setReligions] = React.useState<Religion[]>([]);\r\n  const [communities, setCommunities] = React.useState<Community[]>([]);\r\n  const [page, setPage] = useState<number>(0);\r\n  const [limit, setLimit] = useState<number>(10);\r\n  const [row, setRow] = useState<number>(10);\r\n  const [subCommunities, setSubCommunities] = React.useState<any>([]);\r\n  const [v1, setV1] = React.useState<any>(initialState);\r\n  const [isOpen, setIsOpen] = React.useState(false);\r\n  const [isloading, setIsLoading] = useState(false);\r\n  const [ischeck, setIsCheck] = useState(false);\r\n  const [isSubCommunityError, setSubCommunityError] = useState(false);\r\n  const [subCommunityErrorMsg, setSubCommunityErrorMsg] = useState('');\r\n  let [search, setSearch] = useState('');\r\n  const [isReligionError, setIsReligionError] = useState(false);\r\n  const [isReligionErrorMsg, setIsReligionErrorMsg] = useState('');\r\n  const [isCommunityError, setIsCommunityError] = useState(false);\r\n  const [isCommunityErrorMsg, setIsCommunityErrorMsg] = useState('');\r\n  let [credentail, setCredentail] = useState<any>();\r\n\r\n  const [isReadPermission, setIsReadPermission] = useState(true);\r\n  const [isWritePermission, setIsWritePermission] = useState(true);\r\n  const [isEditPermission, setIsEditPermission] = useState(true);\r\n  const [isDeletePermission, setIsDeletePermission] = useState(true);\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const [isNameError, setNameError] = useState(false);\r\n  const [NameErrorMsg, setNameErrorMsg] = useState('');\r\n\r\n  const { showSnackBar, SnackbarComponent } = useSnackbar();\r\n\r\n  // window.onpopstate = () => {\r\n  //   navigate(-1);\r\n  // }\r\n\r\n  React.useEffect(() => {\r\n    let cred = JSON.parse(localStorage.getItem('Credentials'));\r\n    setCredentail(cred);\r\n    if (cred) {\r\n      if (cred.roleId != 1) {\r\n        let ind = cred.pagePermissions.findIndex(\r\n          (c: any) => c.title === 'Block Users'\r\n        );\r\n        if (ind >= 0) {\r\n          setIsReadPermission(cred.pagePermissions[ind].isReadPermission);\r\n          setIsWritePermission(cred.pagePermissions[ind].isAddPermission);\r\n          setIsEditPermission(cred.pagePermissions[ind].isEditPermission);\r\n          setIsDeletePermission(cred.pagePermissions[ind].isDeletePermission);\r\n\r\n          if (cred.pagePermissions[ind].isReadPermission) loadData();\r\n        }\r\n      } else {\r\n        loadData();\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  const loadData = async () => {\r\n    await getReligionData();\r\n    //getCommunityData();\r\n    await getdata(page, limit);\r\n    setIsOpen(false);\r\n  };\r\n\r\n  const getReligionData = async () => {\r\n    try {\r\n      setIsLoading(true);\r\n      const token = localStorage.getItem('SessionToken');\r\n      const refreshToken = localStorage.getItem('RefreshToken');\r\n      const res = await APIservice.httpPost(\r\n        '/api/admin/religion/getReligion',\r\n        {\r\n          isActive: true\r\n        },\r\n        token,\r\n        refreshToken\r\n      );\r\n      if (res && res.status == 200) {\r\n        setIsLoading(false);\r\n        setReligions(res.recordList);\r\n      } else {\r\n        setIsLoading(false);\r\n        setReligions([]);\r\n      }\r\n    } catch (error) {\r\n      setIsLoading(false);\r\n      toast.error(error, {\r\n        autoClose: 6000,\r\n        hideProgressBar: true,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: 'colored',\r\n        position: toast.POSITION.TOP_RIGHT\r\n      });\r\n    }\r\n  };\r\n\r\n  const getCommunityData = async (id?: number) => {\r\n    try {\r\n      setIsLoading(true);\r\n      const token = localStorage.getItem('SessionToken');\r\n      const refreshToken = localStorage.getItem('RefreshToken');\r\n      const res = await APIservice.httpPost(\r\n        '/api/admin/community/getCommunity',\r\n        {\r\n          isActive: true,\r\n          religionId: id ? id : 0\r\n        },\r\n        token,\r\n        refreshToken\r\n      );\r\n      if (res && res.status == 200) {\r\n        setIsLoading(false);\r\n        setCommunities(res.recordList);\r\n      } else {\r\n        setIsLoading(false);\r\n        setCommunities([]);\r\n      }\r\n    } catch (error) {\r\n      setIsLoading(false);\r\n      toast.error(error, {\r\n        autoClose: 6000,\r\n        hideProgressBar: true,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: 'colored',\r\n        position: toast.POSITION.TOP_RIGHT\r\n      });\r\n    }\r\n  };\r\n\r\n  const reg = new RegExp(/^[a-zA-Z_ ]+$/);\r\n  const validateName = (arr) => {\r\n    const { name, value } = arr.target;\r\n    if (value) {\r\n      if (reg.test(arr.target.value)) {\r\n        setNameError(false);\r\n        setNameErrorMsg('');\r\n      } else {\r\n        setNameError(true);\r\n        setNameErrorMsg('Alphabet and space allowed');\r\n      }\r\n    } else {\r\n      setNameError(true);\r\n      setNameErrorMsg('Sub Community is required');\r\n    }\r\n  };\r\n\r\n  const validateReligion = (arr) => {\r\n    debugger;\r\n    const { name, value } = arr.target;\r\n    if (value) {\r\n      setIsReligionError(false);\r\n      setIsReligionErrorMsg('');\r\n    } else {\r\n      setIsReligionError(true);\r\n      setIsReligionErrorMsg('Religion is required');\r\n    }\r\n  };\r\n\r\n  const validateCommunity = (arr) => {\r\n    const { name, value } = arr.target;\r\n    if (value) {\r\n      setIsCommunityError(false);\r\n      setIsCommunityErrorMsg('');\r\n    } else {\r\n      setIsCommunityError(true);\r\n      setIsCommunityErrorMsg('Community is required');\r\n    }\r\n  };\r\n\r\n  const validateForm = (e: any) => {\r\n    e?.preventDefault();\r\n    var flag = true;\r\n    if (!v1.name) {\r\n      setNameError(true);\r\n      setNameErrorMsg('Sub Community is required');\r\n      flag = false;\r\n    } else {\r\n      if (reg.test(v1.name)) {\r\n        setNameError(false);\r\n        setNameErrorMsg('');\r\n        flag = true;\r\n      } else {\r\n        setNameError(true);\r\n        setNameErrorMsg('Alphabet and space allowed');\r\n        flag = false;\r\n      }\r\n    }\r\n    if (!v1.religionId) {\r\n      setIsReligionError(true);\r\n      setIsReligionErrorMsg('Religion is required');\r\n      flag = false;\r\n    }\r\n    if (!v1.communityId) {\r\n      setIsCommunityError(true);\r\n      setIsCommunityErrorMsg('Community is required');\r\n      flag = false;\r\n    }\r\n    return flag;\r\n  };\r\n\r\n  const handleCloseSubCommunityDialog = () => {\r\n    setIsOpen(false);\r\n  };\r\n\r\n  const handleClickisAdd = async () => {\r\n    setV1(initialState);\r\n    setIsOpen(true);\r\n    setNameError(false);\r\n    setNameErrorMsg('');\r\n    setIsReligionError(false);\r\n    setIsReligionErrorMsg('');\r\n    setIsCommunityError(false);\r\n    setIsCommunityErrorMsg('');\r\n    setSubCommunityError(false);\r\n    setSubCommunityErrorMsg('');\r\n  };\r\n\r\n  const handleClickisEdit = async (\r\n    no: number,\r\n    st: string,\r\n    religionId: number,\r\n    communityId: number\r\n  ) => {\r\n    if (religionId) {\r\n      await getCommunityData(religionId);\r\n    }\r\n    let obj = {\r\n      id: no,\r\n      name: st,\r\n      religionId: religionId,\r\n      communityId: communityId\r\n    };\r\n    setV1(obj);\r\n    setIsOpen(true);\r\n    setNameError(false);\r\n    setNameErrorMsg('');\r\n    setIsReligionError(false);\r\n    setIsReligionErrorMsg('');\r\n    setIsCommunityError(false);\r\n    setIsCommunityErrorMsg('');\r\n    setSubCommunityError(false);\r\n    setSubCommunityErrorMsg('');\r\n  };\r\n\r\n  const handleInputChange = (arr: any) => {\r\n    const { name, value } = arr.target;\r\n    setV1({ ...v1, [name]: value });\r\n  };\r\n\r\n  const handleReligionChange = async (e: any) => {\r\n    const { name, value } = e.target;\r\n    setV1({\r\n      ...v1,\r\n      [name]: value,\r\n      communityId: 0\r\n    });\r\n    await getCommunityData(value);\r\n  };\r\n\r\n  const handleCommunityChange = async (e: any) => {\r\n    const { name, value } = e.target;\r\n    setV1({\r\n      ...v1,\r\n      [name]: value\r\n    });\r\n  };\r\n\r\n  const handleSwitch = async (id: number, status: number) => {\r\n    let obj = {\r\n      id: id,\r\n      status: status\r\n    };\r\n    setV1(obj);\r\n    setIsCheck(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setIsCheck(false);\r\n  };\r\n\r\n  const handleSwitchCheck = async () => {\r\n    const token = localStorage.getItem('SessionToken');\r\n    const refreshToken = localStorage.getItem('RefreshToken');\r\n    let obj = {\r\n      id: v1.id\r\n    };\r\n    const res = await APIservice.httpPost(\r\n      '/api/admin/subCommunity/activeInactiveSubCommunity',\r\n      obj,\r\n      token,\r\n      refreshToken\r\n    );\r\n    setIsCheck(false);\r\n    getdata(page * limit, limit);\r\n  };\r\n\r\n  const getdata = async (startIndex: number, fetchRecord: number) => {\r\n    try {\r\n      setIsLoading(true);\r\n      if (search) {\r\n        const token = localStorage.getItem('SessionToken');\r\n        const refreshToken = localStorage.getItem('RefreshToken');\r\n        let obj = {\r\n          startIndex: startIndex,\r\n          fetchRecord: fetchRecord,\r\n          name: search ? search : ''\r\n        };\r\n        const res = await APIservice.httpPost(\r\n          '/api/admin/subCommunity/getSubCommunity',\r\n          obj,\r\n          token,\r\n          refreshToken\r\n        );\r\n        setSubCommunities(res.recordList);\r\n        setRow(res.totalRecords);\r\n      } else {\r\n        setIsLoading(true);\r\n        const token = localStorage.getItem('SessionToken');\r\n        const refreshToken = localStorage.getItem('RefreshToken');\r\n        let obj = {\r\n          startIndex: startIndex,\r\n          fetchRecord: fetchRecord\r\n        };\r\n        const res = await APIservice.httpPost(\r\n          '/api/admin/subCommunity/getSubCommunity',\r\n          obj,\r\n          token,\r\n          refreshToken\r\n        );\r\n        setSubCommunities(res.recordList);\r\n        setRow(res.totalRecords);\r\n        if (res && res.status == 200) {\r\n          setIsOpen(false);\r\n        } else if (res.status == 401) {\r\n          navigate('/admin');\r\n          localStorage.clear();\r\n        } else if (res.status == 500) {\r\n          setIsOpen(false);\r\n          toast.error(res.message, {\r\n            autoClose: 6000,\r\n            hideProgressBar: true,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n            theme: 'colored',\r\n            position: toast.POSITION.TOP_RIGHT\r\n          });\r\n        } else if (res.status == 400) {\r\n          setIsOpen(false);\r\n          toast.error(res.message, {\r\n            autoClose: 6000,\r\n            hideProgressBar: true,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n            theme: 'colored',\r\n            position: toast.POSITION.TOP_RIGHT\r\n          });\r\n        } else if (res.status == 300) {\r\n          setIsOpen(false);\r\n          toast.error(res.message, {\r\n            autoClose: 6000,\r\n            hideProgressBar: true,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n            theme: 'colored',\r\n            position: toast.POSITION.TOP_RIGHT\r\n          });\r\n        } else if (res.status == 404) {\r\n          setIsOpen(false);\r\n          toast.error(res.message, {\r\n            autoClose: 6000,\r\n            hideProgressBar: true,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n            theme: 'colored',\r\n            position: toast.POSITION.TOP_RIGHT\r\n          });\r\n        }\r\n        setIsLoading(false);\r\n      }\r\n    } catch (error) {\r\n      setIsLoading(false);\r\n      setIsOpen(false);\r\n      toast.error(error, {\r\n        autoClose: 6000,\r\n        hideProgressBar: true,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: 'colored',\r\n        position: toast.POSITION.TOP_RIGHT\r\n      });\r\n    }\r\n  };\r\n\r\n  const saveSubCommunity = async (e: any) => {\r\n    var flag = validateForm(e);\r\n    if (flag) {\r\n      try {\r\n        if (v1.id) {\r\n          //Update\r\n          const token = localStorage.getItem('SessionToken');\r\n          const refreshToken = localStorage.getItem('RefreshToken');\r\n          let val = {\r\n            id: v1.id,\r\n            name: v1.name,\r\n            religionId: v1.religionId,\r\n            communityId: v1.communityId\r\n          };\r\n          const res = await APIservice.httpPost(\r\n            '/api/admin/subCommunity/insertUpdateSubCommunity',\r\n            val,\r\n            token,\r\n            refreshToken\r\n          );\r\n          if (res && res.status == 200) {\r\n            getdata(page * limit, limit);\r\n            setIsOpen(false);\r\n          } else if (res.status == 401) {\r\n            navigate('/admin');\r\n            localStorage.clear();\r\n          } else if (res.status == 500) {\r\n            setIsOpen(false);\r\n            toast.error(res.message, {\r\n              autoClose: 6000,\r\n              hideProgressBar: true,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              draggable: true,\r\n              progress: undefined,\r\n              theme: 'colored',\r\n              position: toast.POSITION.TOP_RIGHT\r\n            });\r\n          } else if (res.status == 300) {\r\n            setIsOpen(false);\r\n            toast.error(res.message, {\r\n              autoClose: 6000,\r\n              hideProgressBar: true,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              draggable: true,\r\n              progress: undefined,\r\n              theme: 'colored',\r\n              position: toast.POSITION.TOP_RIGHT\r\n            });\r\n          } else if (res.status == 404) {\r\n            setIsOpen(false);\r\n            toast.error(res.message, {\r\n              autoClose: 6000,\r\n              hideProgressBar: true,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              draggable: true,\r\n              progress: undefined,\r\n              theme: 'colored',\r\n              position: toast.POSITION.TOP_RIGHT\r\n            });\r\n          } else if (res.status == 400) {\r\n            setIsOpen(false);\r\n            toast.error(res.message, {\r\n              autoClose: 6000,\r\n              hideProgressBar: true,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              draggable: true,\r\n              progress: undefined,\r\n              theme: 'colored',\r\n              position: toast.POSITION.TOP_RIGHT\r\n            });\r\n          } else if (res.status == 203) {\r\n            setSubCommunityError(true);\r\n            setSubCommunityErrorMsg('Sub Community already exists!');\r\n          }\r\n        } else {\r\n          //insert\r\n          const token = localStorage.getItem('SessionToken');\r\n          const refreshToken = localStorage.getItem('RefreshToken');\r\n          const res = await APIservice.httpPost(\r\n            '/api/admin/subCommunity/insertUpdateSubCommunity',\r\n            v1,\r\n            token,\r\n            refreshToken\r\n          );\r\n\r\n          if (res && res.status == 200) {\r\n            setPage(0);\r\n            setIsOpen(false);\r\n            getdata(0, limit);\r\n          } else if (res.status == 401) {\r\n            navigate('/admin');\r\n            localStorage.clear();\r\n          } else if (res.status == 500) {\r\n            setIsOpen(false);\r\n            toast.error(res.message, {\r\n              autoClose: 6000,\r\n              hideProgressBar: true,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              draggable: true,\r\n              progress: undefined,\r\n              theme: 'colored',\r\n              position: toast.POSITION.TOP_RIGHT\r\n            });\r\n          } else if (res.status == 300) {\r\n            setIsOpen(false);\r\n            toast.error(res.message, {\r\n              autoClose: 6000,\r\n              hideProgressBar: true,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              draggable: true,\r\n              progress: undefined,\r\n              theme: 'colored',\r\n              position: toast.POSITION.TOP_RIGHT\r\n            });\r\n          } else if (res.status == 404) {\r\n            setIsOpen(false);\r\n            toast.error(res.message, {\r\n              autoClose: 6000,\r\n              hideProgressBar: true,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              draggable: true,\r\n              progress: undefined,\r\n              theme: 'colored',\r\n              position: toast.POSITION.TOP_RIGHT\r\n            });\r\n          } else if (res.status == 400) {\r\n            setIsOpen(false);\r\n            toast.error(res.message, {\r\n              autoClose: 6000,\r\n              hideProgressBar: true,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              draggable: true,\r\n              progress: undefined,\r\n              theme: 'colored',\r\n              position: toast.POSITION.TOP_RIGHT\r\n            });\r\n          } else if (res.status == 203) {\r\n            setSubCommunityError(true);\r\n            setSubCommunityErrorMsg('Sub Community already exists!');\r\n          }\r\n        }\r\n      } catch (error: any) {\r\n        setIsOpen(false);\r\n        toast.error(error, {\r\n          autoClose: 6000,\r\n          hideProgressBar: true,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: 'colored',\r\n          position: toast.POSITION.TOP_RIGHT\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  const searchData = (e) => {\r\n    setSearch(e.target.value);\r\n    search = e.target.value;\r\n    getdata(page, limit);\r\n  };\r\n\r\n  const handlePageChange = (event: any, newPage: number): void => {\r\n    setPage(newPage);\r\n    getdata(newPage * limit, limit);\r\n  };\r\n\r\n  const handleLimitChange = (event: ChangeEvent<HTMLInputElement>): void => {\r\n    setLimit(parseInt(event.target.value));\r\n    setPage(0);\r\n    getdata(0, parseInt(event.target.value));\r\n  };\r\n\r\n  const theme = useTheme();\r\n\r\n  return (\r\n    <>\r\n      <SnackbarComponent />\r\n      <ToastContainer\r\n        style={{ top: '10%', left: '80%' }}\r\n        autoClose={6000}\r\n        hideProgressBar={true}\r\n        newestOnTop={false}\r\n        closeOnClick\r\n        rtl={false}\r\n        pauseOnFocusLoss\r\n        draggable\r\n        pauseOnHover\r\n      />\r\n      <Helmet>\r\n        <title>Sub Community</title>\r\n      </Helmet>\r\n      <PageTitleWrapper>\r\n        <Box p={1}>\r\n          <Grid container justifyContent=\"space-between\" alignItems=\"center\">\r\n            <Grid item>\r\n              <Stack alignItems=\"left\" justifyContent=\"space-between\">\r\n                <Breadcrumbs aria-label=\"breadcrumb\">\r\n                  <Link\r\n                    to=\"/admin/dashboard\"\r\n                    style={{ display: 'flex', color: 'black' }}\r\n                  >\r\n                    <HomeIcon />\r\n                  </Link>\r\n                  <Typography\r\n                    variant=\"subtitle2\"\r\n                    color=\"inherit\"\r\n                    fontWeight=\"bold\"\r\n                  >\r\n                    Sub Community\r\n                  </Typography>\r\n                </Breadcrumbs>\r\n              </Stack>\r\n            </Grid>\r\n            <Grid item>\r\n              <Grid container spacing={1.5}>\r\n                <Grid item>\r\n                  {isWritePermission ? (\r\n                    <>\r\n                      <Button\r\n                        className=\"buttonLarge\"\r\n                        sx={{\r\n                          mt: {\r\n                            xs: 0,\r\n                            md: 0,\r\n                            display: 'flex',\r\n                            alignItems: 'center',\r\n                            padding: '8.3px',\r\n                            top: '3px'\r\n                          }\r\n                        }}\r\n                        variant=\"contained\"\r\n                        onClick={handleClickisAdd}\r\n                        size=\"small\"\r\n                      >\r\n                        <AddTwoToneIcon fontSize=\"small\" /> Create Sub Community\r\n                      </Button>\r\n                      <Button\r\n                        className=\"button\"\r\n                        sx={{\r\n                          mt: {\r\n                            xs: 0,\r\n                            md: 0,\r\n                            display: 'flex',\r\n                            alignItems: 'center',\r\n                            padding: '8.3px',\r\n                            top: '3px'\r\n                          }\r\n                        }}\r\n                        variant=\"contained\"\r\n                        onClick={handleClickisAdd}\r\n                        size=\"small\"\r\n                      >\r\n                        <AddTwoToneIcon fontSize=\"small\" />\r\n                      </Button>\r\n                    </>\r\n                  ) : (\r\n                    <></>\r\n                  )}\r\n                </Grid>\r\n                <Grid item>\r\n                  <FormControl\r\n                    sx={{ mt: { xs: 0.3, md: 0.3, lg: 0.3, sm: 0.3 } }}\r\n                  >\r\n                    <TextField\r\n                      name=\"searchString\"\r\n                      value={search}\r\n                      onChange={(e) => searchData(e)}\r\n                      // size=\"small\"\r\n                      id=\"outlined-basic\"\r\n                      label=\"Search\"\r\n                      variant=\"outlined\"\r\n                      size=\"small\"\r\n                      InputProps={{\r\n                        startAdornment: (\r\n                          <InputAdornment position=\"start\">\r\n                            <SearchIcon />\r\n                          </InputAdornment>\r\n                        )\r\n                      }}\r\n                    />\r\n                  </FormControl>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </Box>\r\n      </PageTitleWrapper>\r\n      <Container maxWidth=\"lg\">\r\n        <Grid\r\n          container\r\n          direction=\"row\"\r\n          justifyContent=\"center\"\r\n          alignItems=\"stretch\"\r\n          spacing={3}\r\n        >\r\n          <Grid item xs={12}>\r\n            <>\r\n              <Card className=\"scommunitycard\">\r\n                <div>\r\n                  {isloading ? (\r\n                    <Loader1 title=\"Loading...\" />\r\n                  ) : (\r\n                    <>\r\n                      <Divider />\r\n                      {subCommunities && subCommunities.length > 0 ? (\r\n                        <>\r\n                          <TableContainer className=\"scommunitytableContainer\">\r\n                            <Table stickyHeader>\r\n                              <TableHead>\r\n                                <TableRow>\r\n                                  <TableCell>\r\n                                    <Typography\r\n                                      noWrap\r\n                                      style={{\r\n                                        fontSize: '13px',\r\n                                        fontWeight: 'bold',\r\n                                        marginBottom: 'none'\r\n                                      }}\r\n                                    >\r\n                                      Sr. No\r\n                                    </Typography>\r\n                                  </TableCell>\r\n                                  <TableCell>\r\n                                    <Typography\r\n                                      noWrap\r\n                                      style={{\r\n                                        fontSize: '13px',\r\n                                        fontWeight: 'bold',\r\n                                        marginBottom: 'none'\r\n                                      }}\r\n                                    >\r\n                                      Religion\r\n                                    </Typography>\r\n                                  </TableCell>\r\n                                  <TableCell>\r\n                                    <Typography\r\n                                      noWrap\r\n                                      style={{\r\n                                        fontSize: '13px',\r\n                                        fontWeight: 'bold',\r\n                                        marginBottom: 'none'\r\n                                      }}\r\n                                    >\r\n                                      Community\r\n                                    </Typography>\r\n                                  </TableCell>\r\n                                  <TableCell>\r\n                                    <Typography\r\n                                      noWrap\r\n                                      style={{\r\n                                        fontSize: '13px',\r\n                                        fontWeight: 'bold',\r\n                                        marginBottom: 'none'\r\n                                      }}\r\n                                    >\r\n                                      Sub Community\r\n                                    </Typography>\r\n                                  </TableCell>\r\n                                  <TableCell align=\"right\">\r\n                                    <Typography\r\n                                      noWrap\r\n                                      style={{\r\n                                        fontSize: '13px',\r\n                                        fontWeight: 'bold',\r\n                                        marginBottom: 'none'\r\n                                      }}\r\n                                    >\r\n                                      Actions\r\n                                    </Typography>\r\n                                  </TableCell>\r\n                                </TableRow>\r\n                              </TableHead>\r\n                              <TableBody>\r\n                                {subCommunities.map(\r\n                                  (arr: any, index: number) => {\r\n                                    return (\r\n                                      <TableRow hover key={arr.id}>\r\n                                        <TableCell>\r\n                                          <Typography\r\n                                            variant=\"body1\"\r\n                                            fontWeight=\"bold\"\r\n                                            color=\"text.primary\"\r\n                                            gutterBottom\r\n                                            noWrap\r\n                                          >\r\n                                            {page * limit + index + 1}\r\n                                          </Typography>\r\n                                        </TableCell>\r\n                                        <TableCell>\r\n                                          <Typography\r\n                                            variant=\"body1\"\r\n                                            fontWeight=\"bold\"\r\n                                            color=\"text.primary\"\r\n                                            gutterBottom\r\n                                            noWrap\r\n                                            sx={{ textTransform: 'capitalize' }}\r\n                                          >\r\n                                            {arr.religionName}\r\n                                          </Typography>\r\n                                        </TableCell>\r\n                                        <TableCell>\r\n                                          <Typography\r\n                                            variant=\"body1\"\r\n                                            fontWeight=\"bold\"\r\n                                            color=\"text.primary\"\r\n                                            gutterBottom\r\n                                            noWrap\r\n                                            sx={{ textTransform: 'capitalize' }}\r\n                                          >\r\n                                            {arr.communityName}\r\n                                          </Typography>\r\n                                        </TableCell>\r\n                                        <TableCell>\r\n                                          <Typography\r\n                                            variant=\"body1\"\r\n                                            fontWeight=\"bold\"\r\n                                            color=\"text.primary\"\r\n                                            gutterBottom\r\n                                            noWrap\r\n                                            sx={{ textTransform: 'capitalize' }}\r\n                                          >\r\n                                            {arr.name}\r\n                                          </Typography>\r\n                                        </TableCell>\r\n                                        <TableCell align=\"right\">\r\n                                          {isEditPermission ? (\r\n                                            <>\r\n                                              <Tooltip\r\n                                                title={\r\n                                                  arr.isActive === 0\r\n                                                    ? 'Inactive'\r\n                                                    : 'active'\r\n                                                }\r\n                                                arrow\r\n                                              >\r\n                                                <Switch\r\n                                                  // disabled={credentail?.isDemoAdmin}\r\n                                                  checked={\r\n                                                    arr.isActive === 0\r\n                                                      ? false\r\n                                                      : true\r\n                                                  }\r\n                                                  onClick={(e) =>\r\n                                                    checkIsDemoUser(\r\n                                                      () =>\r\n                                                        handleSwitch(\r\n                                                          arr.id,\r\n                                                          arr.isActive\r\n                                                        ),\r\n                                                      showSnackBar\r\n                                                    )()\r\n                                                  }\r\n                                                  inputProps={{\r\n                                                    'aria-label': 'controlled'\r\n                                                  }}\r\n                                                />\r\n                                              </Tooltip>\r\n                                              <Tooltip title=\"Edit\" arrow>\r\n                                                <IconButton\r\n                                                  // disabled={credentail?.isDemoAdmin}\r\n                                                  sx={{\r\n                                                    '&:hover': {\r\n                                                      background:\r\n                                                        theme.colors.primary\r\n                                                          .lighter\r\n                                                    },\r\n                                                    color:\r\n                                                      theme.palette.primary.main\r\n                                                  }}\r\n                                                  color=\"inherit\"\r\n                                                  size=\"small\"\r\n                                                  onClick={(e) =>\r\n                                                    handleClickisEdit(\r\n                                                      arr.id,\r\n                                                      arr.name,\r\n                                                      arr.religionId,\r\n                                                      arr.communityId\r\n                                                    )\r\n                                                  }\r\n                                                >\r\n                                                  <EditTwoToneIcon fontSize=\"small\" />\r\n                                                </IconButton>\r\n                                              </Tooltip>\r\n                                            </>\r\n                                          ) : (\r\n                                            <></>\r\n                                          )}\r\n                                        </TableCell>\r\n                                      </TableRow>\r\n                                    );\r\n                                  }\r\n                                )}\r\n                              </TableBody>\r\n                            </Table>\r\n                          </TableContainer>\r\n                          <Box p={2}>\r\n                            <TablePagination\r\n                              component=\"div\"\r\n                              count={row}\r\n                              onPageChange={handlePageChange}\r\n                              onRowsPerPageChange={handleLimitChange}\r\n                              page={page}\r\n                              rowsPerPage={limit}\r\n                              rowsPerPageOptions={[10, 20, 30, 40]}\r\n                            />\r\n                          </Box>\r\n                        </>\r\n                      ) : (\r\n                        <Paper\r\n                          sx={{\r\n                            display: 'flex',\r\n                            justifyContent: 'center',\r\n                            alignItems: 'center',\r\n                            textAlign: 'center',\r\n                            verticalAlign: 'middle',\r\n                            boxShadow: 'none'\r\n                          }}\r\n                          className=\"scommunitycard\"\r\n                        >\r\n                          <Typography variant=\"h5\" paragraph>\r\n                            Data not Found\r\n                          </Typography>\r\n                        </Paper>\r\n                      )}\r\n                      <div>\r\n                        <Dialog\r\n                          open={ischeck}\r\n                          onClose={handleClose}\r\n                          fullWidth\r\n                          maxWidth=\"xs\"\r\n                        >\r\n                          <DialogTitle\r\n                            sx={{\r\n                              m: 0,\r\n                              p: 2,\r\n                              fontSize: '20px',\r\n                              fontWeight: 'bolder'\r\n                            }}\r\n                          >\r\n                            {v1.status === 0 ? 'Inactive' : 'Active'}\r\n                          </DialogTitle>\r\n                          <DialogContent>\r\n                            <DialogContentText\r\n                              style={{\r\n                                fontSize: '1rem',\r\n                                letterSpacing: '0.00938em'\r\n                              }}\r\n                            >\r\n                              {v1.status === 0\r\n                                ? 'Are you sure you want to Active?'\r\n                                : 'Are you sure you want to Inactive?'}\r\n                            </DialogContentText>\r\n                          </DialogContent>\r\n                          <DialogActions>\r\n                            <Button\r\n                              onClick={handleClose}\r\n                              variant=\"outlined\"\r\n                              style={{ marginRight: '10px' }}\r\n                            >\r\n                              Cancel\r\n                            </Button>\r\n                            <Button\r\n                              disabled={credentail?.isDemoAdmin}\r\n                              onClick={handleSwitchCheck}\r\n                              variant=\"outlined\"\r\n                              style={{ marginRight: '10px' }}\r\n                            >\r\n                              Yes\r\n                            </Button>\r\n                          </DialogActions>\r\n                        </Dialog>\r\n                      </div>\r\n\r\n                      <div>\r\n                        <BootstrapDialog\r\n                          open={isOpen}\r\n                          onClose={handleCloseSubCommunityDialog}\r\n                          PaperProps={{ sx: { height: '40%' } }}\r\n                          fullWidth\r\n                          maxWidth=\"xs\"\r\n                        >\r\n                          <BootstrapDialogTitle\r\n                            id=\"customized-dialog-title\"\r\n                            onClose={handleCloseSubCommunityDialog}\r\n                          >\r\n                            {v1.id ? 'Edit Sub Community' : 'Add Sub Community'}\r\n                          </BootstrapDialogTitle>\r\n                          <DialogContent dividers>\r\n                            <SnackbarComponent />\r\n                            <FormControl sx={{ width: { lg: '100%' } }}>\r\n                              <InputLabel id=\"demo-multiple-name-label\">\r\n                                Religion *\r\n                              </InputLabel>\r\n                              <Select\r\n                                labelId=\"demo-multiple-name-label\"\r\n                                id=\"demo-multiple-name\"\r\n                                multiple={false}\r\n                                name=\"religionId\"\r\n                                value={v1.religionId || []}\r\n                                onChange={(e) => {\r\n                                  handleReligionChange(e);\r\n                                  validateReligion(e);\r\n                                }}\r\n                                label=\"Religion\"\r\n                                MenuProps={MenuProps}\r\n                                required={true}\r\n                              >\r\n                                {religions.map((arr: any) => (\r\n                                  <MenuItem key={arr.id} value={arr.id}>\r\n                                    {arr.name}\r\n                                  </MenuItem>\r\n                                ))}\r\n                              </Select>\r\n                            </FormControl>\r\n                            <FormHelperText\r\n                              style={{ color: 'red', height: '22px' }}\r\n                            >\r\n                              {isReligionError && isReligionErrorMsg}\r\n                            </FormHelperText>\r\n                            <FormControl sx={{ width: { lg: '100%' } }}>\r\n                              <InputLabel id=\"demo-multiple-name-label\">\r\n                                Community *\r\n                              </InputLabel>\r\n                              <Select\r\n                                labelId=\"demo-multiple-name-label\"\r\n                                id=\"demo-multiple-name\"\r\n                                multiple={false}\r\n                                name=\"communityId\"\r\n                                value={v1.communityId || []}\r\n                                onChange={(e) => {\r\n                                  handleCommunityChange(e);\r\n                                  validateCommunity(e);\r\n                                }}\r\n                                label=\"Community\"\r\n                                MenuProps={MenuProps}\r\n                                required={true}\r\n                              >\r\n                                {communities.map((arr: any) => (\r\n                                  <MenuItem key={arr.id} value={arr.id}>\r\n                                    {arr.name}\r\n                                  </MenuItem>\r\n                                ))}\r\n                              </Select>\r\n                            </FormControl>\r\n                            <FormHelperText\r\n                              style={{ color: 'red', height: '22px' }}\r\n                            >\r\n                              {isCommunityError && isCommunityErrorMsg}\r\n                            </FormHelperText>\r\n                            <TextField\r\n                              autoFocus\r\n                              margin=\"dense\"\r\n                              id=\"name\"\r\n                              label=\"Sub Community\"\r\n                              type=\"text\"\r\n                              fullWidth\r\n                              variant=\"outlined\"\r\n                              name=\"name\"\r\n                              value={v1.name}\r\n                              onChange={(arr) => {\r\n                                handleInputChange(arr);\r\n                                validateName(arr);\r\n                              }}\r\n                              required={true}\r\n                            />\r\n                            <FormHelperText\r\n                              style={{ color: 'red', height: '22px' }}\r\n                            >\r\n                              {isNameError && NameErrorMsg}\r\n                            </FormHelperText>\r\n                          </DialogContent>\r\n                          <Box\r\n                            sx={{\r\n                              display: 'flex',\r\n                              justifyContent: 'space-between',\r\n                              p: '8px'\r\n                            }}\r\n                          >\r\n                            <FormHelperText\r\n                              style={{\r\n                                color: 'red',\r\n                                height: '22px',\r\n                                margin: 'none',\r\n                                padding: '8px 0px'\r\n                              }}\r\n                            >\r\n                              {isSubCommunityError && subCommunityErrorMsg}\r\n                            </FormHelperText>\r\n                            <Typography>\r\n                              <Button\r\n                                onClick={handleCloseSubCommunityDialog}\r\n                                variant=\"outlined\"\r\n                                style={{ marginRight: '10px' }}\r\n                              >\r\n                                Cancel\r\n                              </Button>\r\n                              <Button\r\n                                // disabled={credentail?.isDemoAdmin}\r\n                                onClick={() =>\r\n                                  checkIsDemoUser(\r\n                                    (e) => saveSubCommunity(e),\r\n                                    showSnackBar\r\n                                  )()\r\n                                }\r\n                                variant=\"outlined\"\r\n                                style={{ marginRight: '10px' }}\r\n                              >\r\n                                Save\r\n                              </Button>\r\n                            </Typography>\r\n                          </Box>\r\n                        </BootstrapDialog>\r\n                      </div>\r\n                    </>\r\n                  )}\r\n                </div>\r\n              </Card>\r\n            </>\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n      {/* <Footer /> */}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default SubCommunity;\r\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\"\n}), 'Search');\nexports.default = _default;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getTableHeadUtilityClass(slot) {\n  return generateUtilityClass('MuiTableHead', slot);\n}\nconst tableHeadClasses = generateUtilityClasses('MuiTableHead', ['root']);\nexport default tableHeadClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport Tablelvl2Context from '../Table/Tablelvl2Context';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport styled from '../styles/styled';\nimport { getTableHeadUtilityClass } from './tableHeadClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getTableHeadUtilityClass, classes);\n};\nconst TableHeadRoot = styled('thead', {\n  name: 'MuiTableHead',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  display: 'table-header-group'\n});\nconst tablelvl2 = {\n  variant: 'head'\n};\nconst defaultComponent = 'thead';\nconst TableHead = /*#__PURE__*/React.forwardRef(function TableHead(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiTableHead'\n  });\n  const {\n      className,\n      component = defaultComponent\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    component\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(Tablelvl2Context.Provider, {\n    value: tablelvl2,\n    children: /*#__PURE__*/_jsx(TableHeadRoot, _extends({\n      as: component,\n      className: clsx(classes.root, className),\n      ref: ref,\n      role: component === defaultComponent ? null : 'rowgroup',\n      ownerState: ownerState\n    }, other))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? TableHead.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component, normally `TableRow`.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default TableHead;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getTableUtilityClass(slot) {\n  return generateUtilityClass('MuiTable', slot);\n}\nconst tableClasses = generateUtilityClasses('MuiTable', ['root', 'stickyHeader']);\nexport default tableClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"component\", \"padding\", \"size\", \"stickyHeader\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport TableContext from './TableContext';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport styled from '../styles/styled';\nimport { getTableUtilityClass } from './tableClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    stickyHeader\n  } = ownerState;\n  const slots = {\n    root: ['root', stickyHeader && 'stickyHeader']\n  };\n  return composeClasses(slots, getTableUtilityClass, classes);\n};\nconst TableRoot = styled('table', {\n  name: 'MuiTable',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.stickyHeader && styles.stickyHeader];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  display: 'table',\n  width: '100%',\n  borderCollapse: 'collapse',\n  borderSpacing: 0,\n  '& caption': _extends({}, theme.typography.body2, {\n    padding: theme.spacing(2),\n    color: (theme.vars || theme).palette.text.secondary,\n    textAlign: 'left',\n    captionSide: 'bottom'\n  })\n}, ownerState.stickyHeader && {\n  borderCollapse: 'separate'\n}));\nconst defaultComponent = 'table';\nconst Table = /*#__PURE__*/React.forwardRef(function Table(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiTable'\n  });\n  const {\n      className,\n      component = defaultComponent,\n      padding = 'normal',\n      size = 'medium',\n      stickyHeader = false\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    component,\n    padding,\n    size,\n    stickyHeader\n  });\n  const classes = useUtilityClasses(ownerState);\n  const table = React.useMemo(() => ({\n    padding,\n    size,\n    stickyHeader\n  }), [padding, size, stickyHeader]);\n  return /*#__PURE__*/_jsx(TableContext.Provider, {\n    value: table,\n    children: /*#__PURE__*/_jsx(TableRoot, _extends({\n      as: component,\n      role: component === defaultComponent ? null : 'table',\n      ref: ref,\n      className: clsx(classes.root, className),\n      ownerState: ownerState\n    }, other))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Table.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the table, normally `TableHead` and `TableBody`.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * Allows TableCells to inherit padding of the Table.\n   * @default 'normal'\n   */\n  padding: PropTypes.oneOf(['checkbox', 'none', 'normal']),\n  /**\n   * Allows TableCells to inherit size of the Table.\n   * @default 'medium'\n   */\n  size: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.string]),\n  /**\n   * Set the header sticky.\n   *\n   * ⚠️ It doesn't work with IE11.\n   * @default false\n   */\n  stickyHeader: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Table;"],"names":["PageTitle","styled","Box","_ref","theme","spacing","_ref2","children","_jsx","className","Container","maxWidth","props","title","BootstrapDialog","Dialog","padding","height","BootstrapDialogTitle","onClose","other","_jsxs","DialogTitle","sx","m","p","fontSize","fontWeight","IconButton","onClick","position","right","top","color","palette","grey","CloseIcon","initialState","id","name","religionId","communityId","MenuProps","PaperProps","style","maxHeight","ITEM_HEIGHT","width","religions","setReligions","React","communities","setCommunities","page","setPage","useState","limit","setLimit","row","setRow","subCommunities","setSubCommunities","v1","setV1","isOpen","setIsOpen","isloading","setIsLoading","ischeck","setIsCheck","isSubCommunityError","setSubCommunityError","subCommunityErrorMsg","setSubCommunityErrorMsg","search","setSearch","isReligionError","setIsReligionError","isReligionErrorMsg","setIsReligionErrorMsg","isCommunityError","setIsCommunityError","isCommunityErrorMsg","setIsCommunityErrorMsg","credentail","setCredentail","isReadPermission","setIsReadPermission","isWritePermission","setIsWritePermission","isEditPermission","setIsEditPermission","isDeletePermission","setIsDeletePermission","navigate","useNavigate","isNameError","setNameError","NameErrorMsg","setNameErrorMsg","showSnackBar","SnackbarComponent","useSnackbar","cred","JSON","parse","localStorage","getItem","roleId","ind","pagePermissions","findIndex","c","isAddPermission","loadData","async","getReligionData","getdata","token","refreshToken","res","APIservice","httpPost","isActive","status","recordList","error","toast","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","POSITION","TOP_RIGHT","getCommunityData","reg","RegExp","handleCloseSubCommunityDialog","handleClickisAdd","handleClose","startIndex","fetchRecord","obj","totalRecords","clear","message","saveSubCommunity","flag","e","preventDefault","test","validateForm","val","useTheme","_Fragment","ToastContainer","left","newestOnTop","rtl","pauseOnFocusLoss","Helmet","PageTitleWrapper","Grid","container","justifyContent","alignItems","item","Stack","Breadcrumbs","Link","to","display","HomeIcon","Typography","variant","Button","mt","xs","md","size","AddTwoToneIcon","FormControl","lg","sm","TextField","value","onChange","target","searchData","label","InputProps","startAdornment","InputAdornment","SearchIcon","direction","Card","Loader1","Divider","length","TableContainer","Table","stickyHeader","TableHead","TableRow","TableCell","noWrap","marginBottom","align","TableBody","map","arr","index","hover","gutterBottom","textTransform","religionName","communityName","Tooltip","arrow","Switch","checked","checkIsDemoUser","handleSwitch","inputProps","background","colors","primary","lighter","main","no","st","handleClickisEdit","EditTwoToneIcon","TablePagination","component","count","onPageChange","handlePageChange","event","newPage","onRowsPerPageChange","parseInt","rowsPerPage","rowsPerPageOptions","Paper","textAlign","verticalAlign","boxShadow","paragraph","open","fullWidth","DialogContent","DialogContentText","letterSpacing","DialogActions","marginRight","disabled","isDemoAdmin","dividers","InputLabel","Select","labelId","multiple","handleReligionChange","validateReligion","required","MenuItem","FormHelperText","handleCommunityChange","validateCommunity","autoFocus","margin","type","handleInputChange","validateName","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d","getTableHeadUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","TableHeadRoot","overridesResolver","styles","root","tablelvl2","defaultComponent","inProps","ref","useDefaultProps","_objectWithoutPropertiesLoose","ownerState","_extends","classes","composeClasses","useUtilityClasses","Tablelvl2Context","Provider","as","clsx","role","getTableUtilityClass","TableRoot","borderCollapse","borderSpacing","typography","body2","vars","text","secondary","captionSide","slots","table","TableContext"],"sourceRoot":""}