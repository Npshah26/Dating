{"version":3,"file":"static/js/1679.57853e05.chunk.js","mappings":"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","sources":["components/PageTitleWrapper/index.tsx","content/region/regionLoader.tsx","models/country.ts","models/state.ts","models/districts.ts","models/cities.ts","content/region/Region.tsx","../node_modules/@mui/icons-material/Add.js","../node_modules/@mui/icons-material/Close.js","../node_modules/@mui/icons-material/CloudDownload.js","../node_modules/@mui/icons-material/CloudUpload.js","../node_modules/@mui/icons-material/EditTwoTone.js","../node_modules/@mui/material/internal/svg-icons/CheckBoxOutlineBlank.js","../node_modules/@mui/material/internal/svg-icons/CheckBox.js","../node_modules/@mui/material/internal/svg-icons/IndeterminateCheckBox.js","../node_modules/@mui/material/Checkbox/checkboxClasses.js","../node_modules/@mui/material/Checkbox/Checkbox.js","../node_modules/@mui/material/DialogContentText/dialogContentTextClasses.js","../node_modules/@mui/material/DialogContentText/DialogContentText.js","../node_modules/@mui/material/Switch/switchClasses.js","../node_modules/@mui/material/Switch/Switch.js","../node_modules/@mui/material/internal/switchBaseClasses.js","../node_modules/@mui/material/internal/SwitchBase.js"],"sourcesContent":["import { FC, ReactNode } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Box, Container, styled } from '@mui/material';\r\n\r\nconst PageTitle = styled(Box)(\r\n  ({ theme }) => `\r\n        padding: ${theme.spacing(1)};\r\n`\r\n);\r\n\r\ninterface PageTitleWrapperProps {\r\n  children?: ReactNode;\r\n}\r\n\r\nconst PageTitleWrapper: FC<PageTitleWrapperProps> = ({ children }) => {\r\n  return (\r\n    <PageTitle className=\"MuiPageTitle-wrapper\">\r\n      <Container maxWidth=\"lg\">{children}</Container>\r\n    </PageTitle>\r\n  );\r\n};\r\n\r\nPageTitleWrapper.propTypes = {\r\n  children: PropTypes.node.isRequired\r\n};\r\n\r\nexport default PageTitleWrapper;\r\n","import React from 'react';\r\nimport './regionLoader.css';\r\n\r\ninterface Props {\r\n  title: string;\r\n}\r\n\r\nconst RegionLoader = (props: Props) => {\r\n  const { title } = props;\r\n  return (\r\n    // <div className=\"loader\">\r\n    //     <img className=\"img\" src={loader} alt=\"\" />\r\n    //     <span>{title}</span>\r\n    // </div>\r\n    <div className=\"region-container\">\r\n      <div className=\"loading-region-spinner\"></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RegionLoader;","export class Country {\r\n    id: number\r\n    \r\n    name: string\r\n    \r\n    isoCode: string\r\n    \r\n    isoCode3: string\r\n    \r\n    dialCode: string\r\n\r\n    isDefult: boolean\r\n    \r\n    isActive: boolean\r\n    \r\n    isDelete: boolean\r\n    \r\n    createdDate: Date\r\n    \r\n    modifiedDate: Date\r\n\r\n}","export class States {\r\n    id: number\r\n    \r\n    countryId: number\r\n    \r\n    name: string\r\n    \r\n    code: string\r\n    \r\n    isActive: boolean\r\n    \r\n    isDelete: boolean\r\n    \r\n    createdDate: Date\r\n    \r\n    modifiedDate: Date\r\n    \r\n    countryName: string\r\n}","export class Districts {\r\n    id: number\r\n\r\n    stateId: number\r\n\r\n    name: string\r\n\r\n    isActive: boolean\r\n\r\n    isDelete: boolean\r\n\r\n    createdDate: Date\r\n\r\n    modifiedDate: Date\r\n    \r\n    countryId: number\r\n    \r\n    countryName: string\r\n    \r\n    stateName: string\r\n\r\n}","export class Cities {\r\n    id: number\r\n    \r\n    districtId: number\r\n    \r\n    name: string\r\n    \r\n    pincode: string\r\n    \r\n    isActive: boolean\r\n    \r\n    isDelete: boolean\r\n    \r\n    createdDate: Date\r\n    \r\n    modifiedDate: Date\r\n    \r\n    countryId: number\r\n    \r\n    countryName: string\r\n    \r\n    stateId: number\r\n    \r\n    stateName: string\r\n    \r\n    districtName: string\r\n    \r\n}","import { Helmet } from 'react-helmet-async';\r\nimport PageTitleWrapper from '../../components/PageTitleWrapper';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport {\r\n  Box,\r\n  Breadcrumbs,\r\n  Button,\r\n  Card,\r\n  Checkbox,\r\n  Container,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n  FormControl,\r\n  FormGroup,\r\n  FormHelperText,\r\n  Grid,\r\n  IconButton,\r\n  InputLabel,\r\n  MenuItem,\r\n  Select,\r\n  Stack,\r\n  Switch,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  TextField,\r\n  Tooltip,\r\n  Typography,\r\n  styled,\r\n  useTheme\r\n} from '@mui/material';\r\nimport { useNavigate } from 'react-router';\r\nimport HomeIcon from '@mui/icons-material/Home';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport { Link } from 'react-router-dom';\r\nimport { ChangeEvent, useEffect, useRef, useState } from 'react';\r\nimport LoaderSmallCard from '../dashboards/loaderDashboard';\r\nimport RegionLoader from './regionLoader';\r\nimport '../../content/smallScreen.css';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport APIservice from 'src/utils/APIservice';\r\nimport EditTwoToneIcon from '@mui/icons-material/EditTwoTone';\r\nimport { Country } from 'src/models/country';\r\nimport { States } from 'src/models/state';\r\nimport { Districts } from 'src/models/districts';\r\nimport { Cities } from 'src/models/cities';\r\nimport CloudDownloadIcon from '@mui/icons-material/CloudDownload';\r\nimport CloudUploadIcon from '@mui/icons-material/CloudUpload';\r\nimport { CSVLink } from 'react-csv';\r\nimport checkIsDemoUser from 'src/utils/IsDemoUserCheck';\r\nimport { useSnackbar } from '../useSnackbar';\r\n\r\nconst BootstrapDialog = styled(Dialog)(({ theme }) => ({\r\n  '& .MuiDialogContent-root': {\r\n    padding: theme.spacing(2)\r\n  },\r\n  '& .MuiDialogActions-root': {\r\n    padding: theme.spacing(1)\r\n  },\r\n  '& .MuiPaper-root': {\r\n    minHeight: '500px'\r\n  }\r\n}));\r\n\r\nexport interface DialogTitleProps {\r\n  id: string;\r\n  children?: React.ReactNode;\r\n  onClose: () => void;\r\n}\r\n\r\nfunction BootstrapDialogTitle(props: DialogTitleProps) {\r\n  const { children, onClose, ...other } = props;\r\n\r\n  return (\r\n    <DialogTitle\r\n      sx={{ m: 0, p: 2, fontSize: '18px', fontWeight: 'bold' }}\r\n      {...other}\r\n    >\r\n      {children}\r\n      {onClose ? (\r\n        <IconButton\r\n          aria-label=\"close\"\r\n          onClick={onClose}\r\n          sx={{\r\n            position: 'absolute',\r\n            right: 13,\r\n            top: 13,\r\n            color: (theme) => theme.palette.grey[500]\r\n          }}\r\n        >\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </DialogTitle>\r\n  );\r\n}\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n      width: 250\r\n    }\r\n  }\r\n};\r\n\r\nconst initialCountryState = {\r\n  id: 0,\r\n  name: '',\r\n  isoCode: '',\r\n  isoCode3: '',\r\n  dialCode: '',\r\n  isActive: true,\r\n  isDelete: false,\r\n  createdDate: null,\r\n  modifiedDate: null,\r\n  isDefult: false\r\n};\r\nconst initialState = {\r\n  id: 0,\r\n  name: '',\r\n  countryId: 0,\r\n  code: null,\r\n  isActive: true,\r\n  isDelete: false,\r\n  createdDate: null,\r\n  modifiedDate: null,\r\n  countryName: null\r\n};\r\nconst initialDistrictState = {\r\n  id: 0,\r\n  stateId: 0,\r\n  name: '',\r\n  isActive: true,\r\n  isDelete: false,\r\n  createdDate: null,\r\n  modifiedDate: null,\r\n  countryId: 0,\r\n  countryName: null,\r\n  stateName: null\r\n};\r\nconst initialCityState = {\r\n  id: 0,\r\n  districtId: 0,\r\n  name: '',\r\n  pincode: '',\r\n  isActive: true,\r\n  isDelete: false,\r\n  createdDate: null,\r\n  modifiedDate: null,\r\n  countryId: 0,\r\n  countryName: null,\r\n  stateId: 0,\r\n  stateName: null,\r\n  districtName: null\r\n};\r\n\r\nconst Region = () => {\r\n  const navigate = useNavigate();\r\n  const theme = useTheme();\r\n  const [isLoadingCountry, setIsLoadingCountry] = useState<boolean>(false);\r\n  const [page, setPage] = useState<number>(0);\r\n  const [limit, setLimit] = useState<number>(10);\r\n  const [row, setRow] = useState<number>(10);\r\n  const [countries, setCountries] = useState<Country[]>([]);\r\n  const [allCountries, setAllCountries] = useState<Country[]>([]);\r\n  let [selectCountry, setSelectCountry] = useState<Country>();\r\n  const [country, setCountry] = useState<Country>(initialCountryState);\r\n  const [isOpenCountry, setIsOpenCountry] = useState<boolean>(false);\r\n  const [isNameError, setIsNameError] = useState<boolean>(false);\r\n  const [nameErrorMsg, setNameErrorMsg] = useState<string>('');\r\n  const [isIsoCodeError, setIsoCodeError] = useState<boolean>(false);\r\n  const [isoCodeErrorMsg, setIsoCodeErrorMsg] = useState<string>('');\r\n  const [isIsoCode3Error, setIsoCode3Error] = useState<boolean>(false);\r\n  const [isoCode3ErrorMsg, setIsoCode3ErrorMsg] = useState<string>('');\r\n  const [isCountryDialCodeError, setCountryDialCodeError] =\r\n    useState<boolean>(false);\r\n  const [CountryDialCodeErrorMsg, setCountryDialCodeErrorMsg] =\r\n    useState<string>('');\r\n  const [isCheckCountry, setIsCheckCountry] = useState(false);\r\n\r\n  const [isLoadingState, setIsLoadingState] = useState<boolean>(false);\r\n  const [pageState, setPageState] = useState<number>(0);\r\n  const [limitState, setLimitState] = useState<number>(10);\r\n  const [rowState, setRowState] = useState<number>(10);\r\n  const [states, setStates] = useState<States[]>([]);\r\n  const [allStates, setAllStates] = useState<States[]>([]);\r\n  let [selectState, setSelectState] = useState<States>();\r\n  const [state, setState] = useState<States>(initialState);\r\n  const [isOpenState, setIsOpenState] = useState<boolean>(false);\r\n  const [isStateNameError, setIsStateNameError] = useState<boolean>(false);\r\n  const [stateNameErrorMsg, setStateNameErrorMsg] = useState<string>('');\r\n  const [isCountryIdError, setIsCountryIdError] = useState<boolean>(false);\r\n  const [countryIdErrorMsg, setCountryIdErrorMsg] = useState<string>('');\r\n  const [isCheckState, setIsCheckState] = useState(false);\r\n\r\n  const [isLoadingDistrict, setIsLoadingDistrict] = useState<boolean>(false);\r\n  const [pageDistrict, setPageDistrict] = useState<number>(0);\r\n  const [limitDistrict, setLimitDistrict] = useState<number>(10);\r\n  const [rowDistrict, setRowDistrict] = useState<number>(10);\r\n  const [districts, setDistricts] = useState<Districts[]>([]);\r\n  const [allDistricts, setAllDistricts] = useState<Districts[]>([]);\r\n  let [selectDistrict, setSelectDistrict] = useState<Districts>();\r\n  const [district, setDistrict] = useState<Districts>(initialDistrictState);\r\n  const [isOpenDistrict, setIsOpenDistrict] = useState<boolean>(false);\r\n  const [isDistrictNameError, setIsDistrictNameError] =\r\n    useState<boolean>(false);\r\n  const [districtNameErrorMsg, setDistrictNameErrorMsg] = useState<string>('');\r\n  const [isStateIdError, setIsStateIdError] = useState<boolean>(false);\r\n  const [stateIdErrorMsg, setStateIdErrorMsg] = useState<string>('');\r\n  const [isCheckDistrict, setIsCheckDistrict] = useState(false);\r\n\r\n  const [isLoadingCity, setIsLoadingCity] = useState<boolean>(false);\r\n  const [pageCity, setPageCity] = useState<number>(0);\r\n  const [limitCity, setLimitCity] = useState<number>(10);\r\n  const [rowCity, setRowCity] = useState<number>(10);\r\n  const [cities, setCities] = useState<Cities[]>([]);\r\n  let [selectCity, setSelectCity] = useState<Cities>();\r\n  const [city, setCity] = useState<Cities>(initialCityState);\r\n  const [isOpenCity, setIsOpenCity] = useState<boolean>(false);\r\n  const [isCityNameError, setIsCityNameError] = useState<boolean>(false);\r\n  const [cityNameErrorMsg, setCityNameErrorMsg] = useState<string>('');\r\n  const [isPincodeError, setIsPincodeError] = useState<boolean>(false);\r\n  const [pincodeErrorMsg, setPincodeErrorMsg] = useState<string>('');\r\n  const [isDistrictIdError, setIsDistrictIdError] = useState<boolean>(false);\r\n  const [districtIdErrorMsg, setDistrictIdErrorMsg] = useState<string>('');\r\n  const [isCheckCity, setIsCheckCity] = useState(false);\r\n  let [credentail, setCredentail] = useState<any>();\r\n\r\n  const [downloadSample, setDownloadSample] = useState<any[]>([]);\r\n  const [regionData, setRegionData] = useState<any[]>([]);\r\n\r\n  const inputFile: any = useRef(null);\r\n  const fileReader = new FileReader();\r\n\r\n  const [isReadPermission, setIsReadPermission] = useState(true);\r\n  const [isWritePermission, setIsWritePermission] = useState(true);\r\n  const [isEditPermission, setIsEditPermission] = useState(true);\r\n  const [isDeletePermission, setIsDeletePermission] = useState(true);\r\n\r\n  const { showSnackBar, SnackbarComponent } = useSnackbar();\r\n\r\n  useEffect(() => {\r\n    let cred = JSON.parse(localStorage.getItem('Credentials'));\r\n    setCredentail(cred);\r\n    if (cred) {\r\n      if (cred.roleId != 1) {\r\n        let ind = cred.pagePermissions.findIndex(\r\n          (c: any) => c.title === 'Block Users'\r\n        );\r\n        if (ind >= 0) {\r\n          setIsReadPermission(cred.pagePermissions[ind].isReadPermission);\r\n          setIsWritePermission(cred.pagePermissions[ind].isAddPermission);\r\n          setIsEditPermission(cred.pagePermissions[ind].isEditPermission);\r\n          setIsDeletePermission(cred.pagePermissions[ind].isDeletePermission);\r\n\r\n          if (cred.pagePermissions[ind].isReadPermission) loadData();\r\n        }\r\n      } else {\r\n        loadData();\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  const loadData = async () => {\r\n    setSelectCountry(new Country());\r\n    setSelectState(new States());\r\n    setSelectDistrict(new Districts());\r\n    setSelectCity(new Cities());\r\n\r\n    await getCountry(page, limit);\r\n    await getState(pageState, limitState);\r\n    await getDistrict(pageDistrict, limitDistrict);\r\n    await getCity(pageCity, limitCity);\r\n  };\r\n\r\n  //#region Country\r\n  const getCountry = async (startIndex: number, fetchRecord: number) => {\r\n    try {\r\n      setIsLoadingCountry(true);\r\n      const token = localStorage.getItem('SessionToken');\r\n      const refreshToken = localStorage.getItem('RefreshToken');\r\n      let obj = {\r\n        startIndex: startIndex,\r\n        fetchRecord: fetchRecord\r\n      };\r\n      const res = await APIservice.httpPost(\r\n        '/api/admin/region/getCountries',\r\n        obj,\r\n        token,\r\n        refreshToken\r\n      );\r\n      if (res.recordList && res.recordList.length > 0) {\r\n        for (let i = 0; i < res.recordList.length; i++) {\r\n          res.recordList[i].isActive = res.recordList[i].isActive\r\n            ? true\r\n            : false;\r\n          res.recordList[i].isDelete = res.recordList[i].isDelete\r\n            ? true\r\n            : false;\r\n        }\r\n      }\r\n      setCountries(res.recordList);\r\n      setRow(res.totalRecords);\r\n      const res1 = await APIservice.httpPost(\r\n        '/api/admin/region/getCountries',\r\n        {},\r\n        token,\r\n        refreshToken\r\n      );\r\n      setAllCountries(res1.recordList);\r\n      if (res && res.status == 200) {\r\n      } else if (res.status == 401) {\r\n        navigate('/admin');\r\n        localStorage.clear();\r\n      } else if (res.status == 500) {\r\n        toast.error(res.message, {\r\n          autoClose: 6000,\r\n          hideProgressBar: true,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: 'colored',\r\n          position: toast.POSITION.TOP_RIGHT\r\n        });\r\n      } else if (res.status == 300) {\r\n        toast.error(res.message, {\r\n          autoClose: 6000,\r\n          hideProgressBar: true,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: 'colored',\r\n          position: toast.POSITION.TOP_RIGHT\r\n        });\r\n      } else if (res.status == 400) {\r\n        toast.error(res.message, {\r\n          autoClose: 6000,\r\n          hideProgressBar: true,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: 'colored',\r\n          position: toast.POSITION.TOP_RIGHT\r\n        });\r\n      } else if (res.status == 404) {\r\n        toast.error(res.message, {\r\n          autoClose: 6000,\r\n          hideProgressBar: true,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: 'colored',\r\n          position: toast.POSITION.TOP_RIGHT\r\n        });\r\n      }\r\n      setIsLoadingCountry(false);\r\n    } catch (error) {\r\n      setIsLoadingCountry(false);\r\n      toast.error(error, {\r\n        autoClose: 6000,\r\n        hideProgressBar: true,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: 'colored',\r\n        position: toast.POSITION.TOP_RIGHT\r\n      });\r\n    }\r\n  };\r\n\r\n  const handlePageChange = (event: any, newPage: number): void => {\r\n    setPage(newPage);\r\n    getCountry(newPage * limit, limit);\r\n  };\r\n\r\n  const handleLimitChange = (event: ChangeEvent<HTMLInputElement>): void => {\r\n    setLimit(parseInt(event.target.value));\r\n    setPage(0);\r\n    getCountry(0, parseInt(event.target.value));\r\n  };\r\n\r\n  const handleClickOpenCountryDialog = (e: any) => {\r\n    clearCountryError();\r\n    setCountry(initialCountryState);\r\n    setIsOpenCountry(true);\r\n  };\r\n\r\n  const handleClickCloseCountryDialog = () => {\r\n    clearCountryError();\r\n    setCountry(initialCountryState);\r\n    setIsOpenCountry(false);\r\n  };\r\n\r\n  const clearCountryError = () => {\r\n    setIsNameError(false);\r\n    setNameErrorMsg('');\r\n    setIsoCodeError(false);\r\n    setIsoCodeErrorMsg('');\r\n    setIsoCode3Error(false);\r\n    setIsoCode3ErrorMsg('');\r\n    setCountryDialCodeError(false);\r\n    setCountryDialCodeErrorMsg('');\r\n  };\r\n\r\n  const handleInputChange = (arr: any) => {\r\n    const { name, value } = arr.target;\r\n    setCountry({ ...country, [name]: value });\r\n  };\r\n\r\n  const validateName = (arr) => {\r\n    const { name, value } = arr.target;\r\n    if (value) {\r\n      setIsNameError(false);\r\n      setNameErrorMsg('');\r\n    } else {\r\n      setIsNameError(true);\r\n      setNameErrorMsg('Country Name is required');\r\n    }\r\n  };\r\n\r\n  const validateIsoCode = (arr) => {\r\n    const { name, value } = arr.target;\r\n    if (value) {\r\n      setIsoCodeError(false);\r\n      setIsoCodeErrorMsg('');\r\n    } else {\r\n      setIsoCodeError(true);\r\n      setIsoCodeErrorMsg('Country ISO Code is required');\r\n    }\r\n  };\r\n\r\n  const validateIso3Code = (arr) => {\r\n    const { name, value } = arr.target;\r\n    if (value) {\r\n      setIsoCode3Error(false);\r\n      setIsoCode3ErrorMsg('');\r\n    } else {\r\n      setIsoCode3Error(true);\r\n      setIsoCode3ErrorMsg('Country ISO Code is required');\r\n    }\r\n  };\r\n\r\n  const validateCountryDialCode = (arr) => {\r\n    const { name, value } = arr.target;\r\n    if (value) {\r\n      setCountryDialCodeError(false);\r\n      setCountryDialCodeErrorMsg('');\r\n    } else {\r\n      setCountryDialCodeError(true);\r\n      setCountryDialCodeErrorMsg('Country Dial Code is required');\r\n    }\r\n  };\r\n\r\n  const validateCountry = () => {\r\n    let flag = true;\r\n    if (country.name) {\r\n      setIsNameError(false);\r\n      setNameErrorMsg('');\r\n    } else {\r\n      flag = false;\r\n      setIsNameError(true);\r\n      setNameErrorMsg('Country Name is required');\r\n    }\r\n    if (country.isoCode) {\r\n      setIsoCodeError(false);\r\n      setIsoCodeErrorMsg('');\r\n    } else {\r\n      flag = false;\r\n      setIsoCodeError(true);\r\n      setIsoCodeErrorMsg('Country ISO Code is required');\r\n    }\r\n    if (country.isoCode3) {\r\n      setIsoCode3Error(false);\r\n      setIsoCode3ErrorMsg('');\r\n    } else {\r\n      flag = false;\r\n      setIsoCode3Error(true);\r\n      setIsoCode3ErrorMsg('Country ISO Code is required');\r\n    }\r\n    if (country.dialCode) {\r\n      setCountryDialCodeError(false);\r\n      setCountryDialCodeErrorMsg('');\r\n    } else {\r\n      flag = false;\r\n      setCountryDialCodeError(true);\r\n      setCountryDialCodeErrorMsg('Country Dial Code is required');\r\n    }\r\n    return flag;\r\n  };\r\n\r\n  const savecountry = async (e: any) => {\r\n    e?.preventDefault();\r\n    let flag = validateCountry();\r\n    if (flag) {\r\n      try {\r\n        setIsLoadingCountry(true);\r\n        const token = localStorage.getItem('SessionToken');\r\n        const refreshToken = localStorage.getItem('RefreshToken');\r\n        if (country.id) {\r\n          let res = await APIservice.httpPost(\r\n            '/api/admin/region/updateCountry',\r\n            country,\r\n            token,\r\n            refreshToken\r\n          );\r\n          if (res && res.status == 200) {\r\n            // await getCountry(page, limit);\r\n            await getCountry(page, limit);\r\n            await getState(pageState, limitState);\r\n            await getDistrict(pageDistrict, limitDistrict);\r\n            await getCity(pageCity, limitCity);\r\n          } else if (res.status == 401) {\r\n            navigate('/admin');\r\n            localStorage.clear();\r\n          } else if (res.status == 500) {\r\n            toast.error(res.message, {\r\n              autoClose: 6000,\r\n              hideProgressBar: true,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              draggable: true,\r\n              progress: undefined,\r\n              theme: 'colored',\r\n              position: toast.POSITION.TOP_RIGHT\r\n            });\r\n          } else if (res.status == 300) {\r\n            toast.error(res.message, {\r\n              autoClose: 6000,\r\n              hideProgressBar: true,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              draggable: true,\r\n              progress: undefined,\r\n              theme: 'colored',\r\n              position: toast.POSITION.TOP_RIGHT\r\n            });\r\n          } else if (res.status == 400) {\r\n            toast.error(res.message, {\r\n              autoClose: 6000,\r\n              hideProgressBar: true,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              draggable: true,\r\n              progress: undefined,\r\n              theme: 'colored',\r\n              position: toast.POSITION.TOP_RIGHT\r\n            });\r\n          } else if (res.status == 404) {\r\n            toast.error(res.message, {\r\n              autoClose: 6000,\r\n              hideProgressBar: true,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              draggable: true,\r\n              progress: undefined,\r\n              theme: 'colored',\r\n              position: toast.POSITION.TOP_RIGHT\r\n            });\r\n          }\r\n          handleClickCloseCountryDialog();\r\n        } else {\r\n          let res = await APIservice.httpPost(\r\n            '/api/admin/region/insertCountry',\r\n            country,\r\n            token,\r\n            refreshToken\r\n          );\r\n          if (res && res.status == 200) {\r\n            // await getCountry(page, limit);\r\n            await getCountry(page, limit);\r\n            await getState(pageState, limitState);\r\n            await getDistrict(pageDistrict, limitDistrict);\r\n            await getCity(pageCity, limitCity);\r\n          } else if (res.status == 401) {\r\n            navigate('/admin');\r\n            localStorage.clear();\r\n          } else if (res.status == 500) {\r\n            toast.error(res.message, {\r\n              autoClose: 6000,\r\n              hideProgressBar: true,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              draggable: true,\r\n              progress: undefined,\r\n              theme: 'colored',\r\n              position: toast.POSITION.TOP_RIGHT\r\n            });\r\n          } else if (res.status == 300) {\r\n            toast.error(res.message, {\r\n              autoClose: 6000,\r\n              hideProgressBar: true,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              draggable: true,\r\n              progress: undefined,\r\n              theme: 'colored',\r\n              position: toast.POSITION.TOP_RIGHT\r\n            });\r\n          } else if (res.status == 400) {\r\n            toast.error(res.message, {\r\n              autoClose: 6000,\r\n              hideProgressBar: true,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              draggable: true,\r\n              progress: undefined,\r\n              theme: 'colored',\r\n              position: toast.POSITION.TOP_RIGHT\r\n            });\r\n          } else if (res.status == 404) {\r\n            toast.error(res.message, {\r\n              autoClose: 6000,\r\n              hideProgressBar: true,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              draggable: true,\r\n              progress: undefined,\r\n              theme: 'colored',\r\n              position: toast.POSITION.TOP_RIGHT\r\n            });\r\n          }\r\n          handleClickCloseCountryDialog();\r\n        }\r\n        setIsLoadingCountry(false);\r\n      } catch (error) {\r\n        setIsLoadingCountry(false);\r\n        toast.error(error, {\r\n          autoClose: 6000,\r\n          hideProgressBar: true,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: 'colored',\r\n          position: toast.POSITION.TOP_RIGHT\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleSwitchCountry = (item: Country) => {\r\n    item.isDefult = Boolean(item?.isDefult);\r\n    \r\n    setCountry(item);\r\n    setIsCheckCountry(true);\r\n  };\r\n\r\n  const handleCloseSwitchCountry = () => {\r\n    setCountry(initialCountryState);\r\n    setIsCheckCountry(false);\r\n  };\r\n\r\n  const handleSwitchCountryCheck = async (e: any) => {\r\n    e?.preventDefault();\r\n\r\n    try {\r\n      setIsLoadingCountry(true);\r\n      const token = localStorage.getItem('SessionToken');\r\n      const refreshToken = localStorage.getItem('RefreshToken');\r\n      let res = await APIservice.httpPost(\r\n        '/api/admin/region/activeInactiveCountry',\r\n        country,\r\n        token,\r\n        refreshToken\r\n      );\r\n      if (res && res.status == 200) {\r\n        await getCountry(page, limit);\r\n      } else if (res.status == 401) {\r\n        navigate('/admin');\r\n        localStorage.clear();\r\n      } else if (res.status == 500) {\r\n        toast.error(res.message, {\r\n          autoClose: 6000,\r\n          hideProgressBar: true,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: 'colored',\r\n          position: toast.POSITION.TOP_RIGHT\r\n        });\r\n      } else if (res.status == 300) {\r\n        toast.error(res.message, {\r\n          autoClose: 6000,\r\n          hideProgressBar: true,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: 'colored',\r\n          position: toast.POSITION.TOP_RIGHT\r\n        });\r\n      } else if (res.status == 400) {\r\n        toast.error(res.message, {\r\n          autoClose: 6000,\r\n          hideProgressBar: true,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: 'colored',\r\n          position: toast.POSITION.TOP_RIGHT\r\n        });\r\n      } else if (res.status == 404) {\r\n        toast.error(res.message, {\r\n          autoClose: 6000,\r\n          hideProgressBar: true,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: 'colored',\r\n          position: toast.POSITION.TOP_RIGHT\r\n        });\r\n      }\r\n      handleCloseSwitchCountry();\r\n      setIsLoadingCountry(false);\r\n    } catch (error) {\r\n      setIsLoadingCountry(false);\r\n      toast.error(error, {\r\n        autoClose: 6000,\r\n        hideProgressBar: true,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: 'colored',\r\n        position: toast.POSITION.TOP_RIGHT\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleClickOpenEditCountryDialog = (item: Country) => {\r\n   \r\n    item.isDefult = item.isDefult ? true : false;\r\n    clearCountryError();\r\n    setCountry(item);\r\n    setIsOpenCountry(true);\r\n  };\r\n\r\n  const isSelected = (id: number) =>\r\n    selectCountry && selectCountry?.id === id ? true : false;\r\n  const handleLoadState = async (e: any, item: Country) => {\r\n    let country = countries;\r\n    let ind = country.findIndex((c) => c.id == item.id);\r\n    let _ind = selectCountry?.id === country[ind].id;\r\n    setSelectState(new States());\r\n    setSelectDistrict(new Districts());\r\n    setSelectCity(new Cities());\r\n    if (_ind) {\r\n      let obj = new Country();\r\n      setSelectCountry(obj);\r\n      await getState(0, limitState);\r\n      await getDistrict(0, limitDistrict);\r\n      await getCity(0, limitCity);\r\n    } else {\r\n      setSelectCountry(country[ind]);\r\n      await getState(0, limitState, country[ind].id);\r\n      await getDistrict(0, limitDistrict, null, country[ind].id);\r\n      await getCity(0, limitCity, null, null, country[ind].id);\r\n    }\r\n  };\r\n  //#endregion Country\r\n\r\n  //#region State\r\n  const getState = async (\r\n    startIndex: number,\r\n    fetchRecord: number,\r\n    countryId?: number\r\n  ) => {\r\n    try {\r\n      setIsLoadingState(true);\r\n      const token = localStorage.getItem('SessionToken');\r\n      const refreshToken = localStorage.getItem('RefreshToken');\r\n      let obj = {\r\n        startIndex: startIndex,\r\n        fetchRecord: fetchRecord,\r\n        countryId: countryId\r\n      };\r\n      const res = await APIservice.httpPost(\r\n        '/api/admin/region/getStates',\r\n        obj,\r\n        token,\r\n        refreshToken\r\n      );\r\n      if (res.recordList && res.recordList.length > 0) {\r\n        for (let i = 0; i < res.recordList.length; i++) {\r\n          res.recordList[i].isActive = res.recordList[i].isActive\r\n            ? true\r\n            : false;\r\n          res.recordList[i].isDelete = res.recordList[i].isDelete\r\n            ? true\r\n            : false;\r\n        }\r\n      }\r\n      setStates(res.recordList);\r\n      setRowState(res.totalRecords);\r\n      // const res1 = await APIservice.httpPost(\r\n      //     '/api/admin/region/getStates',\r\n      //     {},\r\n      //     token,\r\n      //     refreshToken\r\n      // );\r\n      // setAllStates(res1.recordList);\r\n      if (res && res.status == 200) {\r\n      } else if (res.status == 401) {\r\n        navigate('/admin');\r\n        localStorage.clear();\r\n      } else if (res.status == 500) {\r\n        toast.error(res.message, {\r\n          autoClose: 6000,\r\n          hideProgressBar: true,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: 'colored',\r\n          position: toast.POSITION.TOP_RIGHT\r\n        });\r\n      } else if (res.status == 300) {\r\n        toast.error(res.message, {\r\n          autoClose: 6000,\r\n          hideProgressBar: true,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: 'colored',\r\n          position: toast.POSITION.TOP_RIGHT\r\n        });\r\n      } else if (res.status == 400) {\r\n        toast.error(res.message, {\r\n          autoClose: 6000,\r\n          hideProgressBar: true,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: 'colored',\r\n          position: toast.POSITION.TOP_RIGHT\r\n        });\r\n      } else if (res.status == 404) {\r\n        toast.error(res.message, {\r\n          autoClose: 6000,\r\n          hideProgressBar: true,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: 'colored',\r\n          position: toast.POSITION.TOP_RIGHT\r\n        });\r\n      }\r\n      setIsLoadingState(false);\r\n    } catch (error) {\r\n      setIsLoadingState(false);\r\n      toast.error(error, {\r\n        autoClose: 6000,\r\n        hideProgressBar: true,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: 'colored',\r\n        position: toast.POSITION.TOP_RIGHT\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleStatePageChange = (event: any, newPage: number): void => {\r\n    setPageState(newPage);\r\n    getState(newPage * limitState, limitState);\r\n  };\r\n\r\n  const handleStateLimitChange = (\r\n    event: ChangeEvent<HTMLInputElement>\r\n  ): void => {\r\n    setLimitState(parseInt(event.target.value));\r\n    setPageState(0);\r\n    getState(0, parseInt(event.target.value));\r\n  };\r\n\r\n  const handleClickOpenStateDialog = (e: any) => {\r\n    clearStateError();\r\n    setState(initialState);\r\n    setIsOpenState(true);\r\n  };\r\n\r\n  const handleClickCloseStateDialog = () => {\r\n    clearStateError();\r\n    setState(initialState);\r\n    setIsOpenState(false);\r\n  };\r\n\r\n  const clearStateError = () => {\r\n    setIsStateNameError(false);\r\n    setStateNameErrorMsg('');\r\n    setIsCountryIdError(false);\r\n    setCountryIdErrorMsg('');\r\n  };\r\n\r\n  const handleInputStateChange = (arr: any) => {\r\n    const { name, value } = arr.target;\r\n    setState({ ...state, [name]: value });\r\n  };\r\n\r\n  const validateStateName = (arr) => {\r\n    const { name, value } = arr.target;\r\n    if (value) {\r\n      setIsStateNameError(false);\r\n      setStateNameErrorMsg('');\r\n    } else {\r\n      setIsStateNameError(true);\r\n      setStateNameErrorMsg('State Name is required');\r\n    }\r\n  };\r\n\r\n  const validateStateCountryId = (arr) => {\r\n    const { name, value } = arr.target;\r\n    if (value) {\r\n      setIsCountryIdError(false);\r\n      setCountryIdErrorMsg('');\r\n    } else {\r\n      setIsCountryIdError(true);\r\n      setCountryIdErrorMsg('Country is required');\r\n    }\r\n  };\r\n\r\n  const validateState = () => {\r\n    let flag = true;\r\n    if (state.countryId) {\r\n      setIsCountryIdError(false);\r\n      setCountryIdErrorMsg('');\r\n    } else {\r\n      setIsCountryIdError(true);\r\n      setCountryIdErrorMsg('Country is required');\r\n    }\r\n    if (state.name) {\r\n      setIsStateNameError(false);\r\n      setStateNameErrorMsg('');\r\n    } else {\r\n      setIsStateNameError(true);\r\n      setStateNameErrorMsg('State Name is required');\r\n    }\r\n    return flag;\r\n  };\r\n\r\n  const saveState = async (e: any) => {\r\n    e?.preventDefault();\r\n    let flag = validateState();\r\n    if (flag) {\r\n      try {\r\n        setIsLoadingState(true);\r\n        const token = localStorage.getItem('SessionToken');\r\n        const refreshToken = localStorage.getItem('RefreshToken');\r\n        if (state.id) {\r\n          let res = await APIservice.httpPost(\r\n            '/api/admin/region/updateState',\r\n            state,\r\n            token,\r\n            refreshToken\r\n          );\r\n          if (res && res.status == 200) {\r\n            // await getState(pageState, limitState);\r\n\r\n            await getCountry(page, limit);\r\n            await getState(pageState, limitState);\r\n            await getDistrict(pageDistrict, limitDistrict);\r\n            await getCity(pageCity, limitCity);\r\n          } else if (res.status == 401) {\r\n            navigate('/admin');\r\n            localStorage.clear();\r\n          } else if (res.status == 500) {\r\n            toast.error(res.message, {\r\n              autoClose: 6000,\r\n              hideProgressBar: true,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              draggable: true,\r\n              progress: undefined,\r\n              theme: 'colored',\r\n              position: toast.POSITION.TOP_RIGHT\r\n            });\r\n          } else if (res.status == 300) {\r\n            toast.error(res.message, {\r\n              autoClose: 6000,\r\n              hideProgressBar: true,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              draggable: true,\r\n              progress: undefined,\r\n              theme: 'colored',\r\n              position: toast.POSITION.TOP_RIGHT\r\n            });\r\n          } else if (res.status == 400) {\r\n            toast.error(res.message, {\r\n              autoClose: 6000,\r\n              hideProgressBar: true,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              draggable: true,\r\n              progress: undefined,\r\n              theme: 'colored',\r\n              position: toast.POSITION.TOP_RIGHT\r\n            });\r\n          } else if (res.status == 404) {\r\n            toast.error(res.message, {\r\n              autoClose: 6000,\r\n              hideProgressBar: true,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              draggable: true,\r\n              progress: undefined,\r\n              theme: 'colored',\r\n              position: toast.POSITION.TOP_RIGHT\r\n            });\r\n          }\r\n          handleClickCloseStateDialog();\r\n        } else {\r\n          let res = await APIservice.httpPost(\r\n            '/api/admin/region/insertState',\r\n            state,\r\n            token,\r\n            refreshToken\r\n          );\r\n          if (res && res.status == 200) {\r\n            // await getState(pageState, limitState);\r\n            await getCountry(page, limit);\r\n            await getState(pageState, limitState);\r\n            await getDistrict(pageDistrict, limitDistrict);\r\n            await getCity(pageCity, limitCity);\r\n          } else if (res.status == 401) {\r\n            navigate('/admin');\r\n            localStorage.clear();\r\n          } else if (res.status == 500) {\r\n            toast.error(res.message, {\r\n              autoClose: 6000,\r\n              hideProgressBar: true,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              draggable: true,\r\n              progress: undefined,\r\n              theme: 'colored',\r\n              position: toast.POSITION.TOP_RIGHT\r\n            });\r\n          } else if (res.status == 300) {\r\n            toast.error(res.message, {\r\n              autoClose: 6000,\r\n              hideProgressBar: true,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              draggable: true,\r\n              progress: undefined,\r\n              theme: 'colored',\r\n              position: toast.POSITION.TOP_RIGHT\r\n            });\r\n          } else if (res.status == 400) {\r\n            toast.error(res.message, {\r\n              autoClose: 6000,\r\n              hideProgressBar: true,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              draggable: true,\r\n              progress: undefined,\r\n              theme: 'colored',\r\n              position: toast.POSITION.TOP_RIGHT\r\n            });\r\n          } else if (res.status == 404) {\r\n            toast.error(res.message, {\r\n              autoClose: 6000,\r\n              hideProgressBar: true,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              draggable: true,\r\n              progress: undefined,\r\n              theme: 'colored',\r\n              position: toast.POSITION.TOP_RIGHT\r\n            });\r\n          }\r\n          handleClickCloseStateDialog();\r\n        }\r\n        setIsLoadingState(false);\r\n      } catch (error) {\r\n        setIsLoadingState(false);\r\n        toast.error(error, {\r\n          autoClose: 6000,\r\n          hideProgressBar: true,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: 'colored',\r\n          position: toast.POSITION.TOP_RIGHT\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleSwitchState = (item: States) => {\r\n    setState(item);\r\n    setIsCheckState(true);\r\n  };\r\n\r\n  const handleCloseSwitchState = () => {\r\n    setCountry(initialCountryState);\r\n    // setIsCheckCountry(true);\r\n    setIsCheckState(false);\r\n  };\r\n\r\n  const handleSwitchStateCheck = async (e: any) => {\r\n    e?.preventDefault();\r\n    try {\r\n      setIsLoadingState(true);\r\n      const token = localStorage.getItem('SessionToken');\r\n      const refreshToken = localStorage.getItem('RefreshToken');\r\n      let res = await APIservice.httpPost(\r\n        '/api/admin/region/activeInactiveState',\r\n        state,\r\n        token,\r\n        refreshToken\r\n      );\r\n      setIsLoadingState(false);\r\n      handleCloseSwitchState();\r\n      if (res && res.status == 200) {\r\n        await getState(pageState, limitState);\r\n      } else if (res.status == 401) {\r\n        navigate('/admin');\r\n        localStorage.clear();\r\n      } else if (res.status == 500) {\r\n        toast.error(res.message, {\r\n          autoClose: 6000,\r\n          hideProgressBar: true,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: 'colored',\r\n          position: toast.POSITION.TOP_RIGHT\r\n        });\r\n      } else if (res.status == 300) {\r\n        toast.error(res.message, {\r\n          autoClose: 6000,\r\n          hideProgressBar: true,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: 'colored',\r\n          position: toast.POSITION.TOP_RIGHT\r\n        });\r\n      } else if (res.status == 400) {\r\n        toast.error(res.message, {\r\n          autoClose: 6000,\r\n          hideProgressBar: true,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: 'colored',\r\n          position: toast.POSITION.TOP_RIGHT\r\n        });\r\n      } else if (res.status == 404) {\r\n        toast.error(res.message, {\r\n          autoClose: 6000,\r\n          hideProgressBar: true,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: 'colored',\r\n          position: toast.POSITION.TOP_RIGHT\r\n        });\r\n      }\r\n    } catch (error) {\r\n      setIsLoadingState(false);\r\n      toast.error(error, {\r\n        autoClose: 6000,\r\n        hideProgressBar: true,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: 'colored',\r\n        position: toast.POSITION.TOP_RIGHT\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleClickOpenEditStateDialog = (item: States) => {\r\n    clearStateError();\r\n    setState(item);\r\n    setIsOpenState(true);\r\n  };\r\n\r\n  const isSelectedState = (id: number) =>\r\n    selectState && selectState?.id === id ? true : false;\r\n  const handleLoadDistrict = async (e: any, item: States) => {\r\n    let state = states;\r\n    let ind = state.findIndex((c) => c.id == item.id);\r\n    let _ind = selectState?.id === state[ind].id;\r\n    setSelectDistrict(new Districts());\r\n    setSelectCity(new Cities());\r\n    if (_ind) {\r\n      let obj = new States();\r\n      setSelectState(obj);\r\n      let countryId = selectCountry.id ? selectCountry.id : null;\r\n      await getDistrict(0, limitDistrict, null, countryId);\r\n      await getCity(0, limitCity, null, null, countryId);\r\n    } else {\r\n      setSelectState(state[ind]);\r\n      await getDistrict(0, limitDistrict, state[ind].id);\r\n      await getCity(0, limitCity, null, state[ind].id, null);\r\n    }\r\n  };\r\n  //#endregion State\r\n\r\n  //#region  District\r\n  const getDistrict = async (\r\n    startIndex: number,\r\n    fetchRecord: number,\r\n    stateId?: number,\r\n    countryId?: number\r\n  ) => {\r\n    try {\r\n      setIsLoadingDistrict(true);\r\n      const token = localStorage.getItem('SessionToken');\r\n      const refreshToken = localStorage.getItem('RefreshToken');\r\n      let obj = {\r\n        startIndex: startIndex,\r\n        fetchRecord: fetchRecord,\r\n        stateId: stateId,\r\n        countryId: countryId\r\n      };\r\n      const res = await APIservice.httpPost(\r\n        '/api/admin/region/getDistricts',\r\n        obj,\r\n        token,\r\n        refreshToken\r\n      );\r\n      if (res.recordList && res.recordList.length > 0) {\r\n        for (let i = 0; i < res.recordList.length; i++) {\r\n          res.recordList[i].isActive = res.recordList[i].isActive\r\n            ? true\r\n            : false;\r\n          res.recordList[i].isDelete = res.recordList[i].isDelete\r\n            ? true\r\n            : false;\r\n        }\r\n      }\r\n      setDistricts(res.recordList);\r\n      setRowDistrict(res.totalRecords);\r\n      // const res1 = await APIservice.httpPost(\r\n      //     '/api/admin/region/getDistricts',\r\n      //     {},\r\n      //     token,\r\n      //     refreshToken\r\n      // );\r\n      // setAllDistricts(res1.recordList);\r\n      if (res && res.status == 200) {\r\n      } else if (res.status == 401) {\r\n        navigate('/admin');\r\n        localStorage.clear();\r\n      } else if (res.status == 500) {\r\n        toast.error(res.message, {\r\n          autoClose: 6000,\r\n          hideProgressBar: true,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: 'colored',\r\n          position: toast.POSITION.TOP_RIGHT\r\n        });\r\n      } else if (res.status == 300) {\r\n        toast.error(res.message, {\r\n          autoClose: 6000,\r\n          hideProgressBar: true,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: 'colored',\r\n          position: toast.POSITION.TOP_RIGHT\r\n        });\r\n      } else if (res.status == 400) {\r\n        toast.error(res.message, {\r\n          autoClose: 6000,\r\n          hideProgressBar: true,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: 'colored',\r\n          position: toast.POSITION.TOP_RIGHT\r\n        });\r\n      } else if (res.status == 404) {\r\n        toast.error(res.message, {\r\n          autoClose: 6000,\r\n          hideProgressBar: true,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: 'colored',\r\n          position: toast.POSITION.TOP_RIGHT\r\n        });\r\n      }\r\n      setIsLoadingDistrict(false);\r\n    } catch (error) {\r\n      setIsLoadingDistrict(false);\r\n      toast.error(error, {\r\n        autoClose: 6000,\r\n        hideProgressBar: true,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: 'colored',\r\n        position: toast.POSITION.TOP_RIGHT\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleDistrictPageChange = (event: any, newPage: number): void => {\r\n    setPageDistrict(newPage);\r\n    getDistrict(newPage * limitDistrict, limitDistrict);\r\n  };\r\n\r\n  const handleDistrictLimitChange = (\r\n    event: ChangeEvent<HTMLInputElement>\r\n  ): void => {\r\n    setLimitDistrict(parseInt(event.target.value));\r\n    setPageDistrict(0);\r\n    getDistrict(0, parseInt(event.target.value));\r\n  };\r\n\r\n  const handleClickOpenDistrictDialog = (e: any) => {\r\n    clearDistrictError();\r\n    setDistrict(initialDistrictState);\r\n    setIsOpenDistrict(true);\r\n  };\r\n\r\n  const handleClickCloseDistrictDialog = () => {\r\n    clearDistrictError();\r\n    setDistrict(initialDistrictState);\r\n    setIsOpenDistrict(false);\r\n  };\r\n\r\n  const clearDistrictError = () => {\r\n    setIsDistrictNameError(false);\r\n    setDistrictNameErrorMsg('');\r\n    setIsCountryIdError(false);\r\n    setCountryIdErrorMsg('');\r\n    setIsStateIdError(false);\r\n    setStateIdErrorMsg('');\r\n  };\r\n\r\n  const handleInputDistrictChange = (arr: any) => {\r\n    const { name, value } = arr.target;\r\n    setDistrict({ ...district, [name]: value });\r\n  };\r\n\r\n  const validateDistrictName = (arr) => {\r\n    const { name, value } = arr.target;\r\n    if (value) {\r\n      setIsDistrictNameError(false);\r\n      setDistrictNameErrorMsg('');\r\n    } else {\r\n      setIsDistrictNameError(true);\r\n      setDistrictNameErrorMsg('District Name is required');\r\n    }\r\n  };\r\n\r\n  const validateDistrictStateId = (arr) => {\r\n    const { name, value } = arr.target;\r\n    if (value) {\r\n      setIsStateIdError(false);\r\n      setStateIdErrorMsg('');\r\n    } else {\r\n      setIsStateIdError(true);\r\n      setStateIdErrorMsg('State is required');\r\n    }\r\n  };\r\n\r\n  const validateDistrictCountryId = async (arr) => {\r\n    const { name, value } = arr.target;\r\n    if (value) {\r\n      setIsCountryIdError(false);\r\n      setCountryIdErrorMsg('');\r\n    } else {\r\n      setIsCountryIdError(true);\r\n      setCountryIdErrorMsg('Country is required');\r\n    }\r\n    try {\r\n      const token = localStorage.getItem('SessionToken');\r\n      const refreshToken = localStorage.getItem('RefreshToken');\r\n      let obj = {\r\n        countryId: value\r\n      };\r\n      const res1 = await APIservice.httpPost(\r\n        '/api/admin/region/getStates',\r\n        obj,\r\n        token,\r\n        refreshToken\r\n      );\r\n      setAllStates(res1.recordList);\r\n    } catch (error) {\r\n      toast.error(error, {\r\n        autoClose: 6000,\r\n        hideProgressBar: true,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: 'colored',\r\n        position: toast.POSITION.TOP_RIGHT\r\n      });\r\n    }\r\n  };\r\n\r\n  const validateDistrict = () => {\r\n    let flag = true;\r\n    if (district.countryId) {\r\n      setIsCountryIdError(false);\r\n      setCountryIdErrorMsg('');\r\n    } else {\r\n      flag = false;\r\n      setIsCountryIdError(true);\r\n      setCountryIdErrorMsg('Country is required');\r\n    }\r\n    if (district.stateId) {\r\n      setIsStateIdError(false);\r\n      setStateIdErrorMsg('');\r\n    } else {\r\n      setIsStateIdError(true);\r\n      setStateIdErrorMsg('State is required');\r\n    }\r\n    if (district.name) {\r\n      setIsDistrictNameError(false);\r\n      setDistrictNameErrorMsg('');\r\n    } else {\r\n      setIsDistrictNameError(true);\r\n      setDistrictNameErrorMsg('District Name is required');\r\n    }\r\n    return flag;\r\n  };\r\n\r\n  const saveDistrict = async (e: any) => {\r\n    e?.preventDefault();\r\n    let flag = validateDistrict();\r\n    if (flag) {\r\n      try {\r\n        setIsLoadingDistrict(true);\r\n        const token = localStorage.getItem('SessionToken');\r\n        const refreshToken = localStorage.getItem('RefreshToken');\r\n        if (district.id) {\r\n          let res = await APIservice.httpPost(\r\n            '/api/admin/region/updateDistrict',\r\n            district,\r\n            token,\r\n            refreshToken\r\n          );\r\n          if (res && res.status == 200) {\r\n            // await getDistrict(pageDistrict, limitDistrict);\r\n            await getCountry(page, limit);\r\n            await getState(pageState, limitState);\r\n            await getDistrict(pageDistrict, limitDistrict);\r\n            await getCity(pageCity, limitCity);\r\n          } else if (res.status == 401) {\r\n            navigate('/admin');\r\n            localStorage.clear();\r\n          } else if (res.status == 500) {\r\n            toast.error(res.message, {\r\n              autoClose: 6000,\r\n              hideProgressBar: true,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              draggable: true,\r\n              progress: undefined,\r\n              theme: 'colored',\r\n              position: toast.POSITION.TOP_RIGHT\r\n            });\r\n          } else if (res.status == 300) {\r\n            toast.error(res.message, {\r\n              autoClose: 6000,\r\n              hideProgressBar: true,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              draggable: true,\r\n              progress: undefined,\r\n              theme: 'colored',\r\n              position: toast.POSITION.TOP_RIGHT\r\n            });\r\n          } else if (res.status == 400) {\r\n            toast.error(res.message, {\r\n              autoClose: 6000,\r\n              hideProgressBar: true,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              draggable: true,\r\n              progress: undefined,\r\n              theme: 'colored',\r\n              position: toast.POSITION.TOP_RIGHT\r\n            });\r\n          } else if (res.status == 404) {\r\n            toast.error(res.message, {\r\n              autoClose: 6000,\r\n              hideProgressBar: true,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              draggable: true,\r\n              progress: undefined,\r\n              theme: 'colored',\r\n              position: toast.POSITION.TOP_RIGHT\r\n            });\r\n          }\r\n          handleClickCloseDistrictDialog();\r\n        } else {\r\n          let res = await APIservice.httpPost(\r\n            '/api/admin/region/insertDistrict',\r\n            district,\r\n            token,\r\n            refreshToken\r\n          );\r\n          if (res && res.status == 200) {\r\n            // await getDistrict(pageDistrict, limitDistrict);\r\n            await getCountry(page, limit);\r\n            await getState(pageState, limitState);\r\n            await getDistrict(pageDistrict, limitDistrict);\r\n            await getCity(pageCity, limitCity);\r\n          } else if (res.status == 401) {\r\n            navigate('/admin');\r\n            localStorage.clear();\r\n          } else if (res.status == 500) {\r\n            toast.error(res.message, {\r\n              autoClose: 6000,\r\n              hideProgressBar: true,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              draggable: true,\r\n              progress: undefined,\r\n              theme: 'colored',\r\n              position: toast.POSITION.TOP_RIGHT\r\n            });\r\n          } else if (res.status == 300) {\r\n            toast.error(res.message, {\r\n              autoClose: 6000,\r\n              hideProgressBar: true,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              draggable: true,\r\n              progress: undefined,\r\n              theme: 'colored',\r\n              position: toast.POSITION.TOP_RIGHT\r\n            });\r\n          } else if (res.status == 400) {\r\n            toast.error(res.message, {\r\n              autoClose: 6000,\r\n              hideProgressBar: true,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              draggable: true,\r\n              progress: undefined,\r\n              theme: 'colored',\r\n              position: toast.POSITION.TOP_RIGHT\r\n            });\r\n          } else if (res.status == 404) {\r\n            toast.error(res.message, {\r\n              autoClose: 6000,\r\n              hideProgressBar: true,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              draggable: true,\r\n              progress: undefined,\r\n              theme: 'colored',\r\n              position: toast.POSITION.TOP_RIGHT\r\n            });\r\n          }\r\n          handleClickCloseDistrictDialog();\r\n        }\r\n        setIsLoadingDistrict(false);\r\n      } catch (error) {\r\n        setIsLoadingDistrict(false);\r\n        toast.error(error, {\r\n          autoClose: 6000,\r\n          hideProgressBar: true,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: 'colored',\r\n          position: toast.POSITION.TOP_RIGHT\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleSwitchDistrict = (item: Districts) => {\r\n    setDistrict(item);\r\n    setIsCheckDistrict(true);\r\n  };\r\n\r\n  const handleCloseSwitchDistrict = () => {\r\n    setDistrict(initialDistrictState);\r\n    setIsCheckDistrict(false);\r\n  };\r\n\r\n  const handleSwitchDistrictCheck = async (e: any) => {\r\n    e?.preventDefault();\r\n    try {\r\n      const token = localStorage.getItem('SessionToken');\r\n      const refreshToken = localStorage.getItem('RefreshToken');\r\n      setIsLoadingDistrict(true);\r\n      let res = await APIservice.httpPost(\r\n        '/api/admin/region/activeInactiveDistrict',\r\n        district,\r\n        token,\r\n        refreshToken\r\n      );\r\n      setIsLoadingDistrict(false);\r\n\r\n      if (res && res.status == 200) {\r\n        await getDistrict(pageDistrict, limitDistrict);\r\n        handleCloseSwitchDistrict();\r\n      } else if (res.status == 401) {\r\n        navigate('/admin');\r\n        localStorage.clear();\r\n      } else if (res.status == 500) {\r\n        toast.error(res.message, {\r\n          autoClose: 6000,\r\n          hideProgressBar: true,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: 'colored',\r\n          position: toast.POSITION.TOP_RIGHT\r\n        });\r\n      } else if (res.status == 300) {\r\n        toast.error(res.message, {\r\n          autoClose: 6000,\r\n          hideProgressBar: true,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: 'colored',\r\n          position: toast.POSITION.TOP_RIGHT\r\n        });\r\n      } else if (res.status == 400) {\r\n        toast.error(res.message, {\r\n          autoClose: 6000,\r\n          hideProgressBar: true,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: 'colored',\r\n          position: toast.POSITION.TOP_RIGHT\r\n        });\r\n      } else if (res.status == 404) {\r\n        toast.error(res.message, {\r\n          autoClose: 6000,\r\n          hideProgressBar: true,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: 'colored',\r\n          position: toast.POSITION.TOP_RIGHT\r\n        });\r\n      }\r\n    } catch (error) {\r\n      setIsLoadingDistrict(false);\r\n      toast.error(error, {\r\n        autoClose: 6000,\r\n        hideProgressBar: true,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: 'colored',\r\n        position: toast.POSITION.TOP_RIGHT\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleClickOpenEditDistrictDialog = async (item: Districts) => {\r\n    clearDistrictError();\r\n    const token = localStorage.getItem('SessionToken');\r\n    const refreshToken = localStorage.getItem('RefreshToken');\r\n\r\n    let obj = {\r\n      countryId: item.countryId\r\n    };\r\n    const res1 = await APIservice.httpPost(\r\n      '/api/admin/region/getStates',\r\n      obj,\r\n      token,\r\n      refreshToken\r\n    );\r\n    setAllStates(res1.recordList);\r\n    setDistrict(item);\r\n    setIsOpenDistrict(true);\r\n  };\r\n\r\n  const isSelectedDistrict = (id: number) =>\r\n    selectDistrict && selectDistrict?.id === id ? true : false;\r\n  const handleLoadCity = async (e: any, item: Districts) => {\r\n    let district = districts;\r\n    let ind = district.findIndex((c) => c.id == item.id);\r\n    let _ind = selectDistrict?.id === district[ind].id;\r\n    setSelectCity(new Cities());\r\n    if (_ind) {\r\n      let obj = new Districts();\r\n      let countryId = selectCountry.id ? selectCountry.id : null;\r\n      let stateId = selectState.id ? selectState.id : null;\r\n      setSelectDistrict(obj);\r\n      await getCity(0, limitCity, null, stateId, countryId);\r\n    } else {\r\n      setSelectDistrict(district[ind]);\r\n      await getCity(0, limitCity, district[ind].id);\r\n    }\r\n  };\r\n  //#endregion District\r\n\r\n  //#region City\r\n  const getCity = async (\r\n    startIndex: number,\r\n    fetchRecord: number,\r\n    districtId?: number,\r\n    stateId?: number,\r\n    countryId?: number\r\n  ) => {\r\n    try {\r\n      setIsLoadingCity(true);\r\n      const token = localStorage.getItem('SessionToken');\r\n      const refreshToken = localStorage.getItem('RefreshToken');\r\n      let obj = {\r\n        startIndex: startIndex,\r\n        fetchRecord: fetchRecord,\r\n        districtId: districtId,\r\n        stateId: stateId,\r\n        countryId: countryId\r\n      };\r\n      const res = await APIservice.httpPost(\r\n        '/api/admin/region/getCities',\r\n        obj,\r\n        token,\r\n        refreshToken\r\n      );\r\n      if (res.recordList && res.recordList.length > 0) {\r\n        for (let i = 0; i < res.recordList.length; i++) {\r\n          res.recordList[i].isActive = res.recordList[i].isActive\r\n            ? true\r\n            : false;\r\n          res.recordList[i].isDelete = res.recordList[i].isDelete\r\n            ? true\r\n            : false;\r\n        }\r\n      }\r\n      setCities(res.recordList);\r\n      setRowCity(res.totalRecords);\r\n      if (res && res.status == 200) {\r\n      } else if (res.status == 401) {\r\n        navigate('/admin');\r\n        localStorage.clear();\r\n      } else if (res.status == 500) {\r\n        toast.error(res.message, {\r\n          autoClose: 6000,\r\n          hideProgressBar: true,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: 'colored',\r\n          position: toast.POSITION.TOP_RIGHT\r\n        });\r\n      } else if (res.status == 300) {\r\n        toast.error(res.message, {\r\n          autoClose: 6000,\r\n          hideProgressBar: true,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: 'colored',\r\n          position: toast.POSITION.TOP_RIGHT\r\n        });\r\n      } else if (res.status == 400) {\r\n        toast.error(res.message, {\r\n          autoClose: 6000,\r\n          hideProgressBar: true,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: 'colored',\r\n          position: toast.POSITION.TOP_RIGHT\r\n        });\r\n      } else if (res.status == 404) {\r\n        toast.error(res.message, {\r\n          autoClose: 6000,\r\n          hideProgressBar: true,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: 'colored',\r\n          position: toast.POSITION.TOP_RIGHT\r\n        });\r\n      }\r\n      setIsLoadingCity(false);\r\n    } catch (error) {\r\n      setIsLoadingCity(false);\r\n      toast.error(error, {\r\n        autoClose: 6000,\r\n        hideProgressBar: true,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: 'colored',\r\n        position: toast.POSITION.TOP_RIGHT\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleCityPageChange = (event: any, newPage: number): void => {\r\n    setPageCity(newPage);\r\n    getCity(newPage * limitCity, limitCity);\r\n  };\r\n\r\n  const handleCityLimitChange = (\r\n    event: ChangeEvent<HTMLInputElement>\r\n  ): void => {\r\n    setLimitCity(parseInt(event.target.value));\r\n    setPageCity(0);\r\n    getCity(0, parseInt(event.target.value));\r\n  };\r\n\r\n  const handleClickOpenCityDialog = (e: any) => {\r\n    clearCityError();\r\n    setCity(initialCityState);\r\n    setIsOpenCity(true);\r\n  };\r\n\r\n  const handleClickCloseCityDialog = () => {\r\n    clearCityError();\r\n    setCity(initialCityState);\r\n    setIsOpenCity(false);\r\n  };\r\n\r\n  const clearCityError = () => {\r\n    setIsCityNameError(false);\r\n    setCityNameErrorMsg('');\r\n    setIsCountryIdError(false);\r\n    setCountryIdErrorMsg('');\r\n    setIsStateIdError(false);\r\n    setStateIdErrorMsg('');\r\n    setIsDistrictIdError(false);\r\n    setDistrictIdErrorMsg('');\r\n  };\r\n\r\n  const handleInputCityChange = (arr: any) => {\r\n    const { name, value } = arr.target;\r\n    setCity({ ...city, [name]: value });\r\n  };\r\n\r\n  const validateCityName = (arr) => {\r\n    const { name, value } = arr.target;\r\n    if (value) {\r\n      setIsCityNameError(false);\r\n      setCityNameErrorMsg('');\r\n    } else {\r\n      setIsCityNameError(true);\r\n      setCityNameErrorMsg('City Name is required');\r\n    }\r\n  };\r\n\r\n  const validateCityPincode = (arr) => {\r\n    const { name, value } = arr.target;\r\n    if (value) {\r\n      setIsPincodeError(false);\r\n      setPincodeErrorMsg('');\r\n    } else {\r\n      setIsPincodeError(true);\r\n      setPincodeErrorMsg('City Pincode is required');\r\n    }\r\n  };\r\n\r\n  const validateDistrictId = async (arr) => {\r\n    const { name, value } = arr.target;\r\n    if (value) {\r\n      setIsDistrictIdError(false);\r\n      setDistrictIdErrorMsg('');\r\n    } else {\r\n      setIsDistrictIdError(true);\r\n      setDistrictIdErrorMsg('District is required');\r\n    }\r\n  };\r\n\r\n  const validateCityStateId = async (arr) => {\r\n    const { name, value } = arr.target;\r\n    if (value) {\r\n      setIsStateIdError(false);\r\n      setStateIdErrorMsg('');\r\n    } else {\r\n      setIsStateIdError(true);\r\n      setStateIdErrorMsg('State is required');\r\n    }\r\n\r\n    try {\r\n      const token = localStorage.getItem('SessionToken');\r\n      const refreshToken = localStorage.getItem('RefreshToken');\r\n      let obj = {\r\n        stateId: value\r\n      };\r\n      const res1 = await APIservice.httpPost(\r\n        '/api/admin/region/getDistricts',\r\n        obj,\r\n        token,\r\n        refreshToken\r\n      );\r\n      setAllDistricts(res1.recordList);\r\n    } catch (error) {\r\n      toast.error(error, {\r\n        autoClose: 6000,\r\n        hideProgressBar: true,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: 'colored',\r\n        position: toast.POSITION.TOP_RIGHT\r\n      });\r\n    }\r\n  };\r\n\r\n  const validateCityCountryId = async (arr) => {\r\n    const { name, value } = arr.target;\r\n    if (value) {\r\n      setIsCountryIdError(false);\r\n      setCountryIdErrorMsg('');\r\n    } else {\r\n      setIsCountryIdError(true);\r\n      setCountryIdErrorMsg('Country is required');\r\n    }\r\n\r\n    try {\r\n      const token = localStorage.getItem('SessionToken');\r\n      const refreshToken = localStorage.getItem('RefreshToken');\r\n      let obj = {\r\n        countryId: value\r\n      };\r\n      const res1 = await APIservice.httpPost(\r\n        '/api/admin/region/getStates',\r\n        obj,\r\n        token,\r\n        refreshToken\r\n      );\r\n      setAllStates(res1.recordList);\r\n    } catch (error) {\r\n      toast.error(error, {\r\n        autoClose: 6000,\r\n        hideProgressBar: true,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: 'colored',\r\n        position: toast.POSITION.TOP_RIGHT\r\n      });\r\n    }\r\n  };\r\n\r\n  const validateCity = () => {\r\n    let flag = true;\r\n    if (city.countryId) {\r\n      setIsCountryIdError(false);\r\n      setCountryIdErrorMsg('');\r\n    } else {\r\n      flag = false;\r\n      setIsCountryIdError(true);\r\n      setCountryIdErrorMsg('Country is required');\r\n    }\r\n    if (city.stateId) {\r\n      setIsStateIdError(false);\r\n      setStateIdErrorMsg('');\r\n    } else {\r\n      flag = false;\r\n      setIsStateIdError(true);\r\n      setStateIdErrorMsg('State is required');\r\n    }\r\n    if (city.districtId) {\r\n      setIsDistrictIdError(false);\r\n      setDistrictIdErrorMsg('');\r\n    } else {\r\n      flag = false;\r\n      setIsDistrictIdError(true);\r\n      setDistrictIdErrorMsg('District is required');\r\n    }\r\n    if (city.pincode) {\r\n      setIsPincodeError(false);\r\n      setPincodeErrorMsg('');\r\n    } else {\r\n      flag = false;\r\n      setIsPincodeError(true);\r\n      setPincodeErrorMsg('City Pincode is required');\r\n    }\r\n    if (city.name) {\r\n      setIsCityNameError(false);\r\n      setCityNameErrorMsg('');\r\n    } else {\r\n      flag = false;\r\n      setIsCityNameError(true);\r\n      setCityNameErrorMsg('City Name is required');\r\n    }\r\n    return flag;\r\n  };\r\n\r\n  const saveCity = async (e: any) => {\r\n    e?.preventDefault();\r\n    let flag = validateCity();\r\n    if (flag) {\r\n      try {\r\n        setIsLoadingCity(true);\r\n        const token = localStorage.getItem('SessionToken');\r\n        const refreshToken = localStorage.getItem('RefreshToken');\r\n        if (city.id) {\r\n          let res = await APIservice.httpPost(\r\n            '/api/admin/region/updateCity',\r\n            city,\r\n            token,\r\n            refreshToken\r\n          );\r\n          if (res && res.status == 200) {\r\n            // await getCity(pageCity, limitCity);\r\n\r\n            await getCountry(page, limit);\r\n            await getState(pageState, limitState);\r\n            await getDistrict(pageDistrict, limitDistrict);\r\n            await getCity(pageCity, limitCity);\r\n          } else if (res.status == 401) {\r\n            navigate('/admin');\r\n            localStorage.clear();\r\n          } else if (res.status == 500) {\r\n            toast.error(res.message, {\r\n              autoClose: 6000,\r\n              hideProgressBar: true,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              draggable: true,\r\n              progress: undefined,\r\n              theme: 'colored',\r\n              position: toast.POSITION.TOP_RIGHT\r\n            });\r\n          } else if (res.status == 300) {\r\n            toast.error(res.message, {\r\n              autoClose: 6000,\r\n              hideProgressBar: true,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              draggable: true,\r\n              progress: undefined,\r\n              theme: 'colored',\r\n              position: toast.POSITION.TOP_RIGHT\r\n            });\r\n          } else if (res.status == 400) {\r\n            toast.error(res.message, {\r\n              autoClose: 6000,\r\n              hideProgressBar: true,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              draggable: true,\r\n              progress: undefined,\r\n              theme: 'colored',\r\n              position: toast.POSITION.TOP_RIGHT\r\n            });\r\n          } else if (res.status == 404) {\r\n            toast.error(res.message, {\r\n              autoClose: 6000,\r\n              hideProgressBar: true,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              draggable: true,\r\n              progress: undefined,\r\n              theme: 'colored',\r\n              position: toast.POSITION.TOP_RIGHT\r\n            });\r\n          }\r\n        } else {\r\n          let res = await APIservice.httpPost(\r\n            '/api/admin/region/insertCity',\r\n            city,\r\n            token,\r\n            refreshToken\r\n          );\r\n          if (res && res.status == 200) {\r\n            // await getCity(pageCity, limitCity);\r\n            await getCountry(page, limit);\r\n            await getState(pageState, limitState);\r\n            await getDistrict(pageDistrict, limitDistrict);\r\n            await getCity(pageCity, limitCity);\r\n          } else if (res.status == 401) {\r\n            navigate('/admin');\r\n            localStorage.clear();\r\n          } else if (res.status == 500) {\r\n            toast.error(res.message, {\r\n              autoClose: 6000,\r\n              hideProgressBar: true,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              draggable: true,\r\n              progress: undefined,\r\n              theme: 'colored',\r\n              position: toast.POSITION.TOP_RIGHT\r\n            });\r\n          } else if (res.status == 300) {\r\n            toast.error(res.message, {\r\n              autoClose: 6000,\r\n              hideProgressBar: true,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              draggable: true,\r\n              progress: undefined,\r\n              theme: 'colored',\r\n              position: toast.POSITION.TOP_RIGHT\r\n            });\r\n          } else if (res.status == 400) {\r\n            toast.error(res.message, {\r\n              autoClose: 6000,\r\n              hideProgressBar: true,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              draggable: true,\r\n              progress: undefined,\r\n              theme: 'colored',\r\n              position: toast.POSITION.TOP_RIGHT\r\n            });\r\n          } else if (res.status == 404) {\r\n            toast.error(res.message, {\r\n              autoClose: 6000,\r\n              hideProgressBar: true,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              draggable: true,\r\n              progress: undefined,\r\n              theme: 'colored',\r\n              position: toast.POSITION.TOP_RIGHT\r\n            });\r\n          }\r\n        }\r\n        handleClickCloseCityDialog();\r\n        setIsLoadingCity(false);\r\n      } catch (error) {\r\n        setIsLoadingCity(false);\r\n        toast.error(error, {\r\n          autoClose: 6000,\r\n          hideProgressBar: true,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: 'colored',\r\n          position: toast.POSITION.TOP_RIGHT\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleSwitchCity = (item: Cities) => {\r\n    setCity(item);\r\n    setIsCheckCity(true);\r\n  };\r\n\r\n  const handleCloseSwitchCity = () => {\r\n    setCity(initialCityState);\r\n    setIsCheckCity(false);\r\n  };\r\n\r\n  const handleSwitchCityCheck = async (e: any) => {\r\n    e?.preventDefault();\r\n    try {\r\n      const token = localStorage.getItem('SessionToken');\r\n      const refreshToken = localStorage.getItem('RefreshToken');\r\n      setIsLoadingCity(true);\r\n      let res = await APIservice.httpPost(\r\n        '/api/admin/region/activeInactiveCity',\r\n        city,\r\n        token,\r\n        refreshToken\r\n      );\r\n      setIsLoadingCity(false);\r\n      if (res && res.status == 200) {\r\n        await getCity(pageCity, limitCity);\r\n        handleCloseSwitchCity();\r\n      } else if (res.status == 401) {\r\n        navigate('/admin');\r\n        localStorage.clear();\r\n      } else if (res.status == 500) {\r\n        toast.error(res.message, {\r\n          autoClose: 6000,\r\n          hideProgressBar: true,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: 'colored',\r\n          position: toast.POSITION.TOP_RIGHT\r\n        });\r\n      } else if (res.status == 300) {\r\n        toast.error(res.message, {\r\n          autoClose: 6000,\r\n          hideProgressBar: true,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: 'colored',\r\n          position: toast.POSITION.TOP_RIGHT\r\n        });\r\n      } else if (res.status == 400) {\r\n        toast.error(res.message, {\r\n          autoClose: 6000,\r\n          hideProgressBar: true,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: 'colored',\r\n          position: toast.POSITION.TOP_RIGHT\r\n        });\r\n      } else if (res.status == 404) {\r\n        toast.error(res.message, {\r\n          autoClose: 6000,\r\n          hideProgressBar: true,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: 'colored',\r\n          position: toast.POSITION.TOP_RIGHT\r\n        });\r\n      }\r\n    } catch (error) {\r\n      setIsLoadingCity(false);\r\n      toast.error(error, {\r\n        autoClose: 6000,\r\n        hideProgressBar: true,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: 'colored',\r\n        position: toast.POSITION.TOP_RIGHT\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleClickOpenEditCityDialog = async (item: Cities) => {\r\n    const token = localStorage.getItem('SessionToken');\r\n    const refreshToken = localStorage.getItem('RefreshToken');\r\n\r\n    let obj2 = {\r\n      countryId: item.countryId\r\n    };\r\n    const res2 = await APIservice.httpPost(\r\n      '/api/admin/region/getStates',\r\n      obj2,\r\n      token,\r\n      refreshToken\r\n    );\r\n    setAllStates(res2.recordList);\r\n\r\n    let obj = {\r\n      districtId: item.districtId\r\n    };\r\n    const res1 = await APIservice.httpPost(\r\n      '/api/admin/region/getDistricts',\r\n      obj,\r\n      token,\r\n      refreshToken\r\n    );\r\n    setAllDistricts(res1.recordList);\r\n    clearCityError();\r\n    setCity(item);\r\n    setIsOpenCity(true);\r\n  };\r\n  //#endregion City\r\n\r\n  //#region CSV\r\n  const handleClickDownloadSample = () => {\r\n    let data = [\r\n      {\r\n        countryId: 0, //set 0 if you want to insert new country other wise leave as it is after download actual file\r\n        countryName: '',\r\n        isoCode: '',\r\n        isoCode3: '',\r\n        dialCode: '',\r\n        stateId: 0, //set 0 if you want to insert new State other wise leave as it is after download actual file\r\n        stateName: '',\r\n        districtId: 0, //set 0 if you want to insert new district other wise leave as it is after download actual file\r\n        districtName: '',\r\n        cityId: 0, //set 0 if you want to insert new City other wise leave as it is after download actual file\r\n        cityName: '',\r\n        pincode: ''\r\n      },\r\n      {\r\n        countryId: 0, //set 0 if you want to insert new country other wise leave as it is after download actual file\r\n        countryName: '',\r\n        isoCode: '',\r\n        isoCode3: '',\r\n        dialCode: '',\r\n        stateId: 0, //set 0 if you want to insert new State other wise leave as it is after download actual file\r\n        stateName: '',\r\n        districtId: 0, //set 0 if you want to insert new district other wise leave as it is after download actual file\r\n        districtName: '',\r\n        cityId: 0, //set 0 if you want to insert new City other wise leave as it is after download actual file\r\n        cityName: '',\r\n        pincode: ''\r\n      }\r\n    ];\r\n    setDownloadSample(data);\r\n  };\r\n\r\n  const handleClickDownloadRegion = async (e: any) => {\r\n    e?.preventDefault();\r\n    try {\r\n      setIsLoadingCity(true);\r\n      setIsLoadingDistrict(true);\r\n      setIsLoadingState(true);\r\n      setIsLoadingCountry(true);\r\n      const token = localStorage.getItem('SessionToken');\r\n      const refreshToken = localStorage.getItem('RefreshToken');\r\n      const res = await APIservice.httpPost(\r\n        '/api/admin/region/getAllRegionData',\r\n        {},\r\n        token,\r\n        refreshToken\r\n      );\r\n      if (res && res.status == 200) {\r\n        let csvData = ConvertToCSV(res.recordList, [\r\n          'countryId',\r\n          'countryName',\r\n          'isoCode',\r\n          'isoCode3',\r\n          'dialCode',\r\n          'stateId',\r\n          'stateName',\r\n          'districtId',\r\n          'districtName',\r\n          'cityId',\r\n          'cityName',\r\n          'pincode'\r\n        ]);\r\n\r\n        let blob = new Blob(['\\ufeff' + csvData], {\r\n          type: 'text/csv;charset=utf-8;'\r\n        });\r\n        let dwldLink = document.createElement('a');\r\n        let url = URL.createObjectURL(blob);\r\n        let isSafariBrowser =\r\n          navigator.userAgent.indexOf('Safari') != -1 &&\r\n          navigator.userAgent.indexOf('Chrome') == -1;\r\n        if (isSafariBrowser) {\r\n          //if Safari open in new window to save file with random filename.\r\n          dwldLink.setAttribute('target', '_blank');\r\n        }\r\n        dwldLink.setAttribute('href', url);\r\n        let fileName =\r\n          'Region_' +\r\n          new Date().getDate() +\r\n          '-' +\r\n          new Date().getMonth() +\r\n          1 +\r\n          '-' +\r\n          new Date().getFullYear() +\r\n          '-' +\r\n          new Date().getTime();\r\n        dwldLink.setAttribute('download', fileName + '.csv');\r\n        dwldLink.style.visibility = 'hidden';\r\n        document.body.appendChild(dwldLink);\r\n        dwldLink.click();\r\n        document.body.removeChild(dwldLink);\r\n      } else if (res.status == 401) {\r\n        navigate('/admin');\r\n        localStorage.clear();\r\n      } else if (res.status == 500) {\r\n        toast.error(res.message, {\r\n          autoClose: 6000,\r\n          hideProgressBar: true,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: 'colored',\r\n          position: toast.POSITION.TOP_RIGHT\r\n        });\r\n      } else if (res.status == 300) {\r\n        toast.error(res.message, {\r\n          autoClose: 6000,\r\n          hideProgressBar: true,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: 'colored',\r\n          position: toast.POSITION.TOP_RIGHT\r\n        });\r\n      } else if (res.status == 400) {\r\n        toast.error(res.message, {\r\n          autoClose: 6000,\r\n          hideProgressBar: true,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: 'colored',\r\n          position: toast.POSITION.TOP_RIGHT\r\n        });\r\n      } else if (res.status == 404) {\r\n        toast.error(res.message, {\r\n          autoClose: 6000,\r\n          hideProgressBar: true,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: 'colored',\r\n          position: toast.POSITION.TOP_RIGHT\r\n        });\r\n      }\r\n      setIsLoadingCity(false);\r\n      setIsLoadingDistrict(false);\r\n      setIsLoadingState(false);\r\n      setIsLoadingCountry(false);\r\n    } catch (error) {\r\n      setIsLoadingCity(false);\r\n      setIsLoadingDistrict(false);\r\n      setIsLoadingState(false);\r\n      setIsLoadingCountry(false);\r\n      toast.error(error, {\r\n        autoClose: 6000,\r\n        hideProgressBar: true,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: 'colored',\r\n        position: toast.POSITION.TOP_RIGHT\r\n      });\r\n    }\r\n  };\r\n\r\n  const ConvertToCSV = (data, fields) => {\r\n    let array = typeof data != 'object' ? JSON.parse(data) : data;\r\n    let str = '';\r\n    // str += \"Sale Order On Date \" + this.parameter.dateFrom.getDate() + \"/\" + (this.parameter.dateFrom.getMonth() + 1) + \"/\" + this.parameter.dateFrom.getFullYear() + \" \" + ((new Date(this.parameter.dateFrom)).getHours() < 10 ? '0' : '') + this.parameter.dateFrom.getHours() + \":\" + ((new Date(this.parameter.dateFrom)).getMinutes() < 10 ? '0' : '') + this.parameter.dateFrom.getMinutes() + \" TO \" + (this.parameter.dateFrom.getDate()) + \"/\" + (this.parameter.dateFrom.getMonth() + 1) + \"/\" + this.parameter.dateFrom.getFullYear() + \" \" + ((new Date(this.parameter.dateTo)).getHours() < 10 ? '0' : '') + this.parameter.dateTo.getHours() + \":\" + ((new Date(this.parameter.dateTo)).getMinutes() < 10 ? '0' : '') + this.parameter.dateTo.getMinutes() + '\\r\\n';\r\n    let row = '';\r\n    for (let index in fields) {\r\n      row += fields[index] + ',';\r\n    }\r\n    row = row.slice(0, -1);\r\n    let line = '';\r\n    str += row + '\\r\\n';\r\n    console.log(array.length);\r\n\r\n    for (let i = 0; i < array.length; i++) {\r\n      line +=\r\n        '\\n' +\r\n        array[i].countryId +\r\n        ', ' +\r\n        array[i].countryName +\r\n        ', ' +\r\n        array[i].isoCode +\r\n        ', ' +\r\n        array[i].isoCode3 +\r\n        ', ' +\r\n        array[i].dialCode +\r\n        ', ' +\r\n        array[i].stateId +\r\n        ', ' +\r\n        array[i].stateName +\r\n        ', ' +\r\n        array[i].districtId +\r\n        ', ' +\r\n        array[i].districtName +\r\n        ', ' +\r\n        array[i].cityId +\r\n        ', ' +\r\n        array[i].cityName +\r\n        ', ' +\r\n        array[i].pincode;\r\n    }\r\n    str += line + '\\r\\n';\r\n    return str;\r\n  };\r\n\r\n  const handleClickUploadRegion = () => {\r\n    inputFile.current.click();\r\n  };\r\n\r\n  const handleFile = (e: any) => {\r\n    let file = e.target.files[0];\r\n    if (file) {\r\n      fileReader.onload = async () => {\r\n        const csvOutput = fileReader.result;\r\n        const lines = csvOutput.toString().split('\\n');\r\n        const headers = lines[0].split(',');\r\n        const result = [];\r\n\r\n        console.log(lines);\r\n        for (let i = 1; i < lines.length; i++) {\r\n          if (lines[i]) {\r\n            const obj = {};\r\n            const currentLine = lines[i].split(',');\r\n\r\n            for (let j = 0; j < headers.length; j++) {\r\n              obj[headers[j].trim()] = currentLine[j].trim();\r\n            }\r\n\r\n            result.push(obj);\r\n          }\r\n        }\r\n        if (result && result.length > 0) {\r\n          try {\r\n            setIsLoadingCity(true);\r\n            setIsLoadingDistrict(true);\r\n            setIsLoadingState(true);\r\n            setIsLoadingCountry(true);\r\n            const token = localStorage.getItem('SessionToken');\r\n            const refreshToken = localStorage.getItem('RefreshToken');\r\n            const res = await APIservice.httpPost(\r\n              '/api/admin/region/updateRegionData',\r\n              { data: result },\r\n              token,\r\n              refreshToken\r\n            );\r\n            if (res && res.status == 200) {\r\n              loadData();\r\n            } else if (res.status == 401) {\r\n              navigate('/admin');\r\n              localStorage.clear();\r\n            } else if (res.status == 500) {\r\n              toast.error(res.message, {\r\n                autoClose: 6000,\r\n                hideProgressBar: true,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n                theme: 'colored',\r\n                position: toast.POSITION.TOP_RIGHT\r\n              });\r\n            } else if (res.status == 300) {\r\n              toast.error(res.message, {\r\n                autoClose: 6000,\r\n                hideProgressBar: true,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n                theme: 'colored',\r\n                position: toast.POSITION.TOP_RIGHT\r\n              });\r\n            } else if (res.status == 400) {\r\n              toast.error(res.message, {\r\n                autoClose: 6000,\r\n                hideProgressBar: true,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n                theme: 'colored',\r\n                position: toast.POSITION.TOP_RIGHT\r\n              });\r\n            } else if (res.status == 404) {\r\n              toast.error(res.message, {\r\n                autoClose: 6000,\r\n                hideProgressBar: true,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n                theme: 'colored',\r\n                position: toast.POSITION.TOP_RIGHT\r\n              });\r\n            }\r\n            setIsLoadingCity(false);\r\n            setIsLoadingDistrict(false);\r\n            setIsLoadingState(false);\r\n            setIsLoadingCountry(false);\r\n          } catch (error) {\r\n            setIsLoadingCity(false);\r\n            setIsLoadingDistrict(false);\r\n            setIsLoadingState(false);\r\n            setIsLoadingCountry(false);\r\n            toast.error(error, {\r\n              autoClose: 6000,\r\n              hideProgressBar: true,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              draggable: true,\r\n              progress: undefined,\r\n              theme: 'colored',\r\n              position: toast.POSITION.TOP_RIGHT\r\n            });\r\n          }\r\n        }\r\n      };\r\n\r\n      fileReader.readAsText(file);\r\n    }\r\n  };\r\n  //#endregion CSV\r\n\r\n  return (\r\n    <div>\r\n      <SnackbarComponent />\r\n      <ToastContainer\r\n        style={{ top: '8.5%', right: '0%' }}\r\n        // position=\"top-right\"\r\n        autoClose={6000}\r\n        hideProgressBar={true}\r\n        newestOnTop={false}\r\n        closeOnClick\r\n        rtl={false}\r\n        pauseOnFocusLoss\r\n        draggable\r\n        pauseOnHover\r\n      />\r\n      <Helmet>\r\n        <title>Region</title>\r\n      </Helmet>\r\n      <PageTitleWrapper>\r\n        <Box p={1}>\r\n          <Grid container justifyContent=\"space-between\" alignItems=\"center\">\r\n            <Grid item>\r\n              <Stack alignItems=\"left\" justifyContent=\"space-between\">\r\n                <Breadcrumbs aria-label=\"breadcrumb\">\r\n                  <Link\r\n                    to=\"/admin/dashboard\"\r\n                    style={{ display: 'flex', color: 'black' }}\r\n                  >\r\n                    <HomeIcon />\r\n                  </Link>\r\n                  <Typography\r\n                    variant=\"subtitle2\"\r\n                    color=\"inherit\"\r\n                    fontWeight=\"bold\"\r\n                  >\r\n                    Region\r\n                  </Typography>\r\n                </Breadcrumbs>\r\n              </Stack>\r\n            </Grid>\r\n            <Grid item>\r\n              <Grid container spacing={1.5}>\r\n                {isReadPermission ? (\r\n                  <>\r\n                    <Grid item>\r\n                      <Button\r\n                        className=\"buttonLarge\"\r\n                        sx={{\r\n                          mt: {\r\n                            xs: 0,\r\n                            md: 0,\r\n                            display: 'flex',\r\n                            alignItems: 'center',\r\n                            padding: '8.3px',\r\n                            top: '3px'\r\n                          }\r\n                        }}\r\n                        variant=\"contained\"\r\n                        onClick={handleClickDownloadSample}\r\n                        size=\"small\"\r\n                      >\r\n                        <CSVLink\r\n                          data={downloadSample}\r\n                          filename={'sample.csv'}\r\n                          style={{\r\n                            '&:hover': {\r\n                              background: theme.colors.primary.lighter\r\n                            },\r\n                            color: 'white',\r\n                            textDecoration: 'none'\r\n                          }}\r\n                        >\r\n                          <CloudDownloadIcon fontSize=\"small\" />\r\n                          &nbsp; Download Sample\r\n                        </CSVLink>\r\n                      </Button>\r\n                      <Button\r\n                        className=\"button\"\r\n                        sx={{\r\n                          mt: {\r\n                            xs: 0,\r\n                            md: 0,\r\n                            display: 'flex',\r\n                            alignItems: 'center',\r\n                            padding: '8.3px',\r\n                            top: '3px'\r\n                          }\r\n                        }}\r\n                        variant=\"contained\"\r\n                        onClick={handleClickDownloadSample}\r\n                        size=\"small\"\r\n                      >\r\n                        <CSVLink\r\n                          data={downloadSample}\r\n                          filename={'sample.csv'}\r\n                          style={{\r\n                            '&:hover': {\r\n                              background: theme.colors.primary.lighter\r\n                            },\r\n                            color: 'white',\r\n                            textDecoration: 'none'\r\n                          }}\r\n                        >\r\n                          <CloudDownloadIcon fontSize=\"small\" />\r\n                        </CSVLink>\r\n                      </Button>\r\n                    </Grid>\r\n                    <Grid item>\r\n                      <Button\r\n                        className=\"buttonLarge\"\r\n                        sx={{\r\n                          mt: {\r\n                            xs: 0,\r\n                            md: 0,\r\n                            display: 'flex',\r\n                            alignItems: 'center',\r\n                            padding: '8.3px',\r\n                            top: '3px'\r\n                          }\r\n                        }}\r\n                        variant=\"contained\"\r\n                        onClick={handleClickDownloadRegion}\r\n                        size=\"small\"\r\n                      >\r\n                        <CSVLink\r\n                          data={regionData}\r\n                          filename={'region.csv'}\r\n                          style={{\r\n                            '&:hover': {\r\n                              background: theme.colors.primary.lighter\r\n                            },\r\n                            color: 'white',\r\n                            textDecoration: 'none'\r\n                          }}\r\n                        >\r\n                          <CloudDownloadIcon fontSize=\"small\" />\r\n                          &nbsp; Download\r\n                        </CSVLink>\r\n                      </Button>\r\n                      <Button\r\n                        className=\"button\"\r\n                        sx={{\r\n                          mt: {\r\n                            xs: 0,\r\n                            md: 0,\r\n                            display: 'flex',\r\n                            alignItems: 'center',\r\n                            padding: '8.3px',\r\n                            top: '3px'\r\n                          }\r\n                        }}\r\n                        variant=\"contained\"\r\n                        onClick={handleClickDownloadRegion}\r\n                        size=\"small\"\r\n                      >\r\n                        <CSVLink\r\n                          data={regionData}\r\n                          filename={'region.csv'}\r\n                          style={{\r\n                            '&:hover': {\r\n                              background: theme.colors.primary.lighter\r\n                            },\r\n                            color: 'white',\r\n                            textDecoration: 'none'\r\n                          }}\r\n                        >\r\n                          <CloudDownloadIcon fontSize=\"small\" />\r\n                        </CSVLink>\r\n                      </Button>\r\n                    </Grid>\r\n                  </>\r\n                ) : (\r\n                  <></>\r\n                )}\r\n                {isWritePermission ? (\r\n                  <Grid item>\r\n                    <input\r\n                      style={{ display: 'none' }}\r\n                      ref={inputFile}\r\n                      accept=\".csv\"\r\n                      type=\"file\"\r\n                      onChange={handleFile}\r\n                    />\r\n                    <Button\r\n                      className=\"buttonLarge\"\r\n                      sx={{\r\n                        mt: {\r\n                          xs: 0,\r\n                          md: 0,\r\n                          display: 'flex',\r\n                          alignItems: 'center',\r\n                          padding: '8.3px',\r\n                          top: '3px'\r\n                        }\r\n                      }}\r\n                      variant=\"contained\"\r\n                      onClick={() =>\r\n                        checkIsDemoUser(handleClickUploadRegion, showSnackBar)()\r\n                      }\r\n                      size=\"small\"\r\n                    >\r\n                      <CloudUploadIcon fontSize=\"small\" />\r\n                      &nbsp; Upload\r\n                    </Button>\r\n                    <Button\r\n                      className=\"button\"\r\n                      sx={{\r\n                        mt: {\r\n                          xs: 0,\r\n                          md: 0,\r\n                          display: 'flex',\r\n                          alignItems: 'center',\r\n                          padding: '8.3px',\r\n                          top: '3px'\r\n                        }\r\n                      }}\r\n                      variant=\"contained\"\r\n                      onClick={handleClickUploadRegion}\r\n                      size=\"small\"\r\n                    >\r\n                      <CloudUploadIcon fontSize=\"small\" />\r\n                    </Button>\r\n                  </Grid>\r\n                ) : (\r\n                  <></>\r\n                )}\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </Box>\r\n      </PageTitleWrapper>\r\n      <Container maxWidth=\"lg\">\r\n        <Card className=\"religioncard\">\r\n          <Grid container>\r\n            <Grid\r\n              item\r\n              lg={3}\r\n              md={4}\r\n              sm={6}\r\n              xs={12}\r\n              style={{ borderRight: '1px Solid #9f9f9f' }}\r\n            >\r\n              {isLoadingCountry ? (\r\n                <RegionLoader title=\"Loading Country\"></RegionLoader>\r\n              ) : (\r\n                <div className=\"region-div\">\r\n                  <TableContainer className=\"country-tableContainer-list\">\r\n                    <Table stickyHeader aria-label=\"simple table\">\r\n                      <TableHead>\r\n                        <TableRow>\r\n                          <TableCell sx={{ color: '#212B36' }}>\r\n                            Country\r\n                          </TableCell>\r\n                          <TableCell align=\"right\">\r\n                            {isWritePermission ? (\r\n                              <Button\r\n                                variant=\"contained\"\r\n                                // sx={{ color: '#1565c0' }}\r\n                                color=\"inherit\"\r\n                                size=\"small\"\r\n                                onClick={handleClickOpenCountryDialog}\r\n                              >\r\n                                <AddIcon fontSize=\"small\" />\r\n                              </Button>\r\n                            ) : (\r\n                              <></>\r\n                            )}\r\n                          </TableCell>\r\n                        </TableRow>\r\n                      </TableHead>\r\n                      <TableBody>\r\n                        {countries?.map((item: Country, index: number) => {\r\n                          const labelId = `enhanced-table-checkbox-${index}`;\r\n                          const isItemSelected = isSelected(item.id);\r\n                          return (\r\n                            <TableRow\r\n                              hover\r\n                              key={item.id}\r\n                              role=\"checkbox\"\r\n                              aria-checked\r\n                              tabIndex={-1}\r\n                              sx={{ cursor: 'pointer' }}\r\n                              selected={isItemSelected}\r\n                            >\r\n                              <TableCell\r\n                                style={{ cursor: 'pointer' }}\r\n                                onClick={(e) => handleLoadState(e, item)}\r\n                              >\r\n                                <Typography\r\n                                  variant=\"subtitle2\"\r\n                                  color=\"text.primary\"\r\n                                  noWrap\r\n                                  sx={{\r\n                                    textTransform: 'capitalize',\r\n                                    fontSize: '12px'\r\n                                  }}\r\n                                >\r\n                                  <Checkbox\r\n                                    color=\"primary\"\r\n                                    checked={isItemSelected}\r\n                                    inputProps={{\r\n                                      'aria-labelledby': labelId\r\n                                    }}\r\n                                    style={{ padding: '0px 10px' }}\r\n                                  />\r\n                                  {item.name}\r\n                                </Typography>\r\n                              </TableCell>\r\n                              <TableCell align=\"right\">\r\n                                {isEditPermission ? (\r\n                                  <>\r\n                                    <div style={{ display: 'flex' }}>\r\n                                      <Tooltip\r\n                                        title={\r\n                                          item.isActive ? 'Active' : 'Inactive'\r\n                                        }\r\n                                        arrow\r\n                                      >\r\n                                        <Switch\r\n                                          checked={\r\n                                            !item.isActive ? false : true\r\n                                          }\r\n                                          onClick={(e) => {\r\n                                            checkIsDemoUser(\r\n                                              () => handleSwitchCountry(item),\r\n                                              showSnackBar\r\n                                            )();\r\n                                          }}\r\n                                          inputProps={{\r\n                                            'aria-label': 'controlled'\r\n                                          }}\r\n                                          sx={{ color: '#1565c0' }}\r\n                                          // disabled={credentail?.isDemoAdmin}\r\n                                        />\r\n                                      </Tooltip>\r\n                                      <IconButton\r\n                                        sx={{ color: '#1565c0' }}\r\n                                        color=\"inherit\"\r\n                                        size=\"small\"\r\n                                        onClick={(e) =>\r\n                                          handleClickOpenEditCountryDialog(item)\r\n                                        }\r\n                                      >\r\n                                        <EditTwoToneIcon fontSize=\"small\" />\r\n                                      </IconButton>\r\n                                    </div>\r\n                                  </>\r\n                                ) : (\r\n                                  <></>\r\n                                )}\r\n                              </TableCell>\r\n                            </TableRow>\r\n                          );\r\n                        })}\r\n                      </TableBody>\r\n                    </Table>\r\n                    {/* <Table stickyHeader aria-label=\"simple table\">\r\n                                            <TableHead>\r\n                                                <TableRow>\r\n                                                    <TableCell sx={{ color: '#212B36' }}>Country</TableCell>\r\n                                                    <TableCell align=\"right\">\r\n                                                        <Button\r\n                                                            variant=\"contained\"\r\n                                                            color=\"inherit\"\r\n                                                            size=\"small\"\r\n                                                            onClick={handleClickOpenCountryDialog}\r\n                                                        >\r\n                                                            <AddIcon fontSize=\"small\" />\r\n                                                        </Button>\r\n                                                    </TableCell>\r\n                                                </TableRow>\r\n                                            </TableHead>\r\n                                            <TableBody>\r\n                                                {countries.map((item: Country, index: number) => {\r\n                                                    const labelId = `enhanced-table-checkbox-${index}`;\r\n                                                    const isItemSelected = isSelected(item.id);\r\n                                                    return (\r\n                                                        <TableRow\r\n                                                            key={item.name}\r\n                                                            sx={{ \"&:last-child td, &:last-child th\": { border: 0 } }}\r\n                                                            style={{ background: isItemSelected ? '#d0d2d9' : '#fff' }}\r\n                                                        >\r\n                                                            <TableCell style={{ cursor: 'pointer', padding: '0px' }} onClick={(e) => handleLoadState(e, item)} component=\"th\" scope=\"row\">\r\n                                                                {item.name}\r\n                                                            </TableCell>\r\n                                                            <TableCell sx={{ padding: '0px' }}>\r\n                                                                <IconButton\r\n                                                                    sx={{ color: '#1565c0' }}\r\n                                                                    color=\"inherit\"\r\n                                                                    size=\"small\"\r\n                                                                    onClick={(e) => handleClickOpenEditCountryDialog(item)}\r\n                                                                >\r\n                                                                    <EditTwoToneIcon fontSize=\"small\" />\r\n                                                                </IconButton>\r\n                                                                <Tooltip title={(item.isActive) ? \"Active\" : \"Inactive\"} arrow\r\n                                                                >\r\n                                                                    <Switch\r\n                                                                        checked={!item.isActive ? false : true}\r\n                                                                        onClick={(e) => { handleSwitchCountry(item) }}\r\n                                                                        inputProps={{ 'aria-label': 'controlled' }}\r\n                                                                        sx={{ color: '#1565c0' }}\r\n                                                                    />\r\n                                                                </Tooltip>\r\n                                                            </TableCell>\r\n                                                        </TableRow>\r\n                                                    )\r\n                                                })}\r\n                                            </TableBody>\r\n                                        </Table> */}\r\n                  </TableContainer>\r\n                  <TablePagination\r\n                    component=\"div\"\r\n                    count={row}\r\n                    onPageChange={handlePageChange}\r\n                    onRowsPerPageChange={handleLimitChange}\r\n                    page={page}\r\n                    rowsPerPage={limit}\r\n                    rowsPerPageOptions={[10, 20, 30, 40]}\r\n                  />\r\n                </div>\r\n              )}\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              lg={3}\r\n              md={4}\r\n              sm={6}\r\n              xs={12}\r\n              style={{ borderRight: '1px Solid #9f9f9f' }}\r\n            >\r\n              {/* <Card className=\"religioncard\"> */}\r\n              {isLoadingState ? (\r\n                <RegionLoader title=\"Loading State\"></RegionLoader>\r\n              ) : (\r\n                <>\r\n                  <TableContainer className=\"country-tableContainer-list\">\r\n                    <Table stickyHeader>\r\n                      <TableHead>\r\n                        <TableRow>\r\n                          <TableCell sx={{ color: '#212B36' }}>State</TableCell>\r\n                          <TableCell align=\"right\">\r\n                            {isWritePermission ? (\r\n                              <Button\r\n                                variant=\"contained\"\r\n                                color=\"inherit\"\r\n                                size=\"small\"\r\n                                onClick={handleClickOpenStateDialog}\r\n                              >\r\n                                <AddIcon fontSize=\"small\" />\r\n                              </Button>\r\n                            ) : (\r\n                              <></>\r\n                            )}\r\n                          </TableCell>\r\n                        </TableRow>\r\n                      </TableHead>\r\n                      <TableBody>\r\n                        {states?.map((item: States, index: number) => {\r\n                          const labelId = `enhanced-table-checkbox-${index}`;\r\n                          const isItemSelected = isSelectedState(item.id);\r\n                          return (\r\n                            <TableRow\r\n                              hover\r\n                              key={item.id}\r\n                              role=\"checkbox\"\r\n                              aria-checked\r\n                              tabIndex={-1}\r\n                              sx={{ cursor: 'pointer' }}\r\n                              selected={isItemSelected}\r\n                            >\r\n                              <TableCell\r\n                                colSpan={1}\r\n                                style={{ cursor: 'pointer' }}\r\n                                onClick={(e) => handleLoadDistrict(e, item)}\r\n                              >\r\n                                <Typography\r\n                                  variant=\"subtitle2\"\r\n                                  color=\"text.primary\"\r\n                                  noWrap\r\n                                  sx={{\r\n                                    textTransform: 'capitalize',\r\n                                    fontSize: '12px'\r\n                                  }}\r\n                                >\r\n                                  <Checkbox\r\n                                    color=\"primary\"\r\n                                    checked={isItemSelected}\r\n                                    inputProps={{\r\n                                      'aria-labelledby': labelId\r\n                                    }}\r\n                                    style={{ padding: '0px 10px' }}\r\n                                  />\r\n                                  {item.name}\r\n                                </Typography>\r\n                                <Typography\r\n                                  sx={{\r\n                                    color: 'grey',\r\n                                    fontSize: '10px',\r\n                                    marginLeft: '39px',\r\n                                    marginTop: '-10px'\r\n                                  }}\r\n                                  variant=\"body2\"\r\n                                >\r\n                                  {' '}\r\n                                  ({item.countryName})\r\n                                </Typography>\r\n                              </TableCell>\r\n                              <TableCell align=\"right\">\r\n                                {isEditPermission ? (\r\n                                  <div style={{ display: 'flex' }}>\r\n                                    <Tooltip\r\n                                      title={\r\n                                        item.isActive ? 'Active' : 'Inactive'\r\n                                      }\r\n                                      arrow\r\n                                    >\r\n                                      <Switch\r\n                                        checked={!item.isActive ? false : true}\r\n                                        onClick={(e) => {\r\n                                          checkIsDemoUser(\r\n                                            () => handleSwitchState(item),\r\n                                            showSnackBar\r\n                                          )();\r\n                                        }}\r\n                                        inputProps={{\r\n                                          'aria-label': 'controlled'\r\n                                        }}\r\n                                        sx={{ color: '#1565c0' }}\r\n                                        // d    isabled={credentail?.isDemoAdmin}\r\n                                      />\r\n                                    </Tooltip>\r\n                                    <IconButton\r\n                                      sx={{ color: '#1565c0' }}\r\n                                      color=\"inherit\"\r\n                                      size=\"small\"\r\n                                      onClick={(e) =>\r\n                                        handleClickOpenEditStateDialog(item)\r\n                                      }\r\n                                    >\r\n                                      <EditTwoToneIcon fontSize=\"small\" />\r\n                                    </IconButton>\r\n                                  </div>\r\n                                ) : (\r\n                                  <></>\r\n                                )}\r\n                              </TableCell>\r\n                            </TableRow>\r\n                          );\r\n                        })}\r\n                      </TableBody>\r\n                    </Table>\r\n                  </TableContainer>\r\n                  <TablePagination\r\n                    component=\"div\"\r\n                    count={rowState}\r\n                    onPageChange={handleStatePageChange}\r\n                    onRowsPerPageChange={handleStateLimitChange}\r\n                    page={pageState}\r\n                    rowsPerPage={limitState}\r\n                    rowsPerPageOptions={[10, 20, 30, 40]}\r\n                  />\r\n                </>\r\n              )}\r\n              {/* </Card> */}\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              lg={3}\r\n              md={4}\r\n              sm={6}\r\n              xs={12}\r\n              style={{ borderRight: '1px Solid #9f9f9f' }}\r\n            >\r\n              {/* <Card className=\"religioncard\"> */}\r\n              {isLoadingDistrict ? (\r\n                <RegionLoader title=\"Loading District\"></RegionLoader>\r\n              ) : (\r\n                <>\r\n                  <TableContainer className=\"country-tableContainer-list\">\r\n                    <Table stickyHeader>\r\n                      <TableHead>\r\n                        <TableRow>\r\n                          <TableCell sx={{ color: '#212B36' }}>\r\n                            District\r\n                          </TableCell>\r\n                          <TableCell align=\"right\">\r\n                            {isWritePermission ? (\r\n                              <Button\r\n                                variant=\"contained\"\r\n                                // sx={{ color: '#1565c0' }}\r\n                                color=\"inherit\"\r\n                                size=\"small\"\r\n                                onClick={handleClickOpenDistrictDialog}\r\n                              >\r\n                                <AddIcon fontSize=\"small\" />\r\n                              </Button>\r\n                            ) : (\r\n                              <></>\r\n                            )}\r\n                          </TableCell>\r\n                        </TableRow>\r\n                      </TableHead>\r\n                      <TableBody>\r\n                        {districts?.map((item: Districts, index: number) => {\r\n                          const labelId = `enhanced-table-checkbox-${index}`;\r\n                          const isItemSelected = isSelectedDistrict(item.id);\r\n                          return (\r\n                            <TableRow\r\n                              hover\r\n                              key={item.id}\r\n                              role=\"checkbox\"\r\n                              aria-checked\r\n                              tabIndex={-1}\r\n                              sx={{ cursor: 'pointer' }}\r\n                              selected={isItemSelected}\r\n                            >\r\n                              <TableCell\r\n                                colSpan={1}\r\n                                style={{ cursor: 'pointer' }}\r\n                                onClick={(e) => handleLoadCity(e, item)}\r\n                              >\r\n                                <Typography\r\n                                  variant=\"subtitle2\"\r\n                                  color=\"text.primary\"\r\n                                  noWrap\r\n                                  sx={{\r\n                                    textTransform: 'capitalize',\r\n                                    fontSize: '12px'\r\n                                  }}\r\n                                >\r\n                                  <Checkbox\r\n                                    color=\"primary\"\r\n                                    checked={isItemSelected}\r\n                                    inputProps={{\r\n                                      'aria-labelledby': labelId\r\n                                    }}\r\n                                    style={{ padding: '0px 10px' }}\r\n                                  />\r\n                                  {item.name}\r\n                                </Typography>\r\n                                <Typography\r\n                                  sx={{\r\n                                    color: 'grey',\r\n                                    fontSize: '10px',\r\n                                    marginLeft: '39px',\r\n                                    marginTop: '-10px'\r\n                                  }}\r\n                                  variant=\"body2\"\r\n                                >\r\n                                  {' '}\r\n                                  ({item.countryName}-{item.stateName})\r\n                                </Typography>\r\n                              </TableCell>\r\n                              <TableCell align=\"right\">\r\n                                {isEditPermission ? (\r\n                                  <div style={{ display: 'flex' }}>\r\n                                    <Tooltip\r\n                                      title={\r\n                                        item.isActive ? 'Active' : 'Inactive'\r\n                                      }\r\n                                      arrow\r\n                                    >\r\n                                      <Switch\r\n                                        checked={!item.isActive ? false : true}\r\n                                        onClick={(e) => {\r\n                                          checkIsDemoUser(\r\n                                            () => handleSwitchDistrict(item),\r\n                                            showSnackBar\r\n                                          )();\r\n                                        }}\r\n                                        inputProps={{\r\n                                          'aria-label': 'controlled'\r\n                                        }}\r\n                                        sx={{ color: '#1565c0' }}\r\n                                        // disabled={credentail?.isDemoAdmin}\r\n                                      />\r\n                                    </Tooltip>\r\n                                    <IconButton\r\n                                      sx={{ color: '#1565c0' }}\r\n                                      color=\"inherit\"\r\n                                      size=\"small\"\r\n                                      onClick={(e) =>\r\n                                        handleClickOpenEditDistrictDialog(item)\r\n                                      }\r\n                                    >\r\n                                      <EditTwoToneIcon fontSize=\"small\" />\r\n                                    </IconButton>\r\n                                  </div>\r\n                                ) : (\r\n                                  <></>\r\n                                )}\r\n                              </TableCell>\r\n                            </TableRow>\r\n                          );\r\n                        })}\r\n                      </TableBody>\r\n                    </Table>\r\n                  </TableContainer>\r\n                  <TablePagination\r\n                    component=\"div\"\r\n                    count={rowDistrict}\r\n                    onPageChange={handleDistrictPageChange}\r\n                    onRowsPerPageChange={handleDistrictLimitChange}\r\n                    page={pageDistrict}\r\n                    rowsPerPage={limitDistrict}\r\n                    rowsPerPageOptions={[10, 20, 30, 40]}\r\n                  />\r\n                </>\r\n              )}\r\n              {/* </Card> */}\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              lg={3}\r\n              md={4}\r\n              sm={6}\r\n              xs={12}\r\n              style={{ borderRight: '1px Solid #9f9f9f' }}\r\n            >\r\n              {/* <Card className=\"religioncard\"> */}\r\n              {isLoadingCity ? (\r\n                <RegionLoader title=\"Loading City\"></RegionLoader>\r\n              ) : (\r\n                <>\r\n                  <TableContainer className=\"country-tableContainer-list\">\r\n                    <Table stickyHeader>\r\n                      <TableHead>\r\n                        <TableRow>\r\n                          <TableCell sx={{ color: '#212B36' }}>City</TableCell>\r\n                          <TableCell align=\"right\">\r\n                            {isWritePermission ? (\r\n                              <Button\r\n                                variant=\"contained\"\r\n                                // sx={{ color: '#1565c0' }}\r\n                                color=\"inherit\"\r\n                                size=\"small\"\r\n                                onClick={handleClickOpenCityDialog}\r\n                              >\r\n                                <AddIcon fontSize=\"small\" />\r\n                              </Button>\r\n                            ) : (\r\n                              <></>\r\n                            )}\r\n                          </TableCell>\r\n                        </TableRow>\r\n                      </TableHead>\r\n                      <TableBody>\r\n                        {cities?.map((item: Cities, index: number) => {\r\n                          const labelId = `enhanced-table-checkbox-${index}`;\r\n                          return (\r\n                            <TableRow\r\n                              hover\r\n                              key={item.id}\r\n                              role=\"checkbox\"\r\n                              aria-checked\r\n                              tabIndex={-1}\r\n                              sx={{ cursor: 'pointer' }}\r\n                            >\r\n                              <TableCell\r\n                                colSpan={1}\r\n                                style={{ cursor: 'pointer' }}\r\n                              >\r\n                                <Typography\r\n                                  variant=\"subtitle2\"\r\n                                  color=\"text.primary\"\r\n                                  noWrap\r\n                                  sx={{\r\n                                    textTransform: 'capitalize',\r\n                                    fontSize: '12px'\r\n                                  }}\r\n                                >\r\n                                  {item.name}\r\n                                </Typography>\r\n                                <Typography\r\n                                  sx={{\r\n                                    color: 'grey',\r\n                                    fontSize: '10px',\r\n                                    marginLeft: '0px',\r\n                                    marginTop: '-5px'\r\n                                  }}\r\n                                  variant=\"body2\"\r\n                                >\r\n                                  {' '}\r\n                                  ({item.countryName}-{item.stateName}-\r\n                                  {item.districtName})\r\n                                </Typography>\r\n                              </TableCell>\r\n                              <TableCell align=\"right\">\r\n                                {isEditPermission ? (\r\n                                  <div style={{ display: 'flex' }}>\r\n                                    <Tooltip\r\n                                      title={\r\n                                        item.isActive ? 'Active' : 'Inactive'\r\n                                      }\r\n                                      arrow\r\n                                    >\r\n                                      <Switch\r\n                                        checked={!item.isActive ? false : true}\r\n                                        onClick={(e) => {\r\n                                          checkIsDemoUser(\r\n                                            () => handleSwitchCity(item),\r\n                                            showSnackBar\r\n                                          )();\r\n                                        }}\r\n                                        inputProps={{\r\n                                          'aria-label': 'controlled'\r\n                                        }}\r\n                                        sx={{ color: '#1565c0' }}\r\n                                        // disabled={credentail?.isDemoAdmin}\r\n                                      />\r\n                                    </Tooltip>\r\n                                    <IconButton\r\n                                      sx={{ color: '#1565c0' }}\r\n                                      color=\"inherit\"\r\n                                      size=\"small\"\r\n                                      onClick={(e) =>\r\n                                        handleClickOpenEditCityDialog(item)\r\n                                      }\r\n                                    >\r\n                                      <EditTwoToneIcon fontSize=\"small\" />\r\n                                    </IconButton>\r\n                                  </div>\r\n                                ) : (\r\n                                  <></>\r\n                                )}\r\n                              </TableCell>\r\n                            </TableRow>\r\n                          );\r\n                        })}\r\n                      </TableBody>\r\n                    </Table>\r\n                  </TableContainer>\r\n                  <TablePagination\r\n                    component=\"div\"\r\n                    count={rowCity}\r\n                    onPageChange={handleCityPageChange}\r\n                    onRowsPerPageChange={handleCityLimitChange}\r\n                    page={pageCity}\r\n                    rowsPerPage={limitCity}\r\n                    rowsPerPageOptions={[10, 20, 30, 40]}\r\n                  />\r\n                </>\r\n              )}\r\n              {/* </Card> */}\r\n            </Grid>\r\n          </Grid>\r\n        </Card>\r\n        <div>\r\n          <Dialog\r\n            open={isCheckCountry}\r\n            onClose={handleCloseSwitchCountry}\r\n            fullWidth\r\n            maxWidth=\"xs\"\r\n          >\r\n            <DialogTitle\r\n              sx={{\r\n                m: 0,\r\n                p: 2,\r\n                fontSize: '20px',\r\n                fontWeight: 'bolder'\r\n              }}\r\n            >\r\n              {country.isActive ? 'Inactive' : 'Active'}\r\n            </DialogTitle>\r\n            <DialogContent>\r\n              <DialogContentText\r\n                style={{\r\n                  fontSize: '1rem',\r\n                  letterSpacing: '0.00938em'\r\n                }}\r\n              >\r\n                {country.isActive\r\n                  ? 'Are you sure you want to Active?'\r\n                  : 'Are you sure you want to Inactive?'}\r\n              </DialogContentText>\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button\r\n                onClick={handleCloseSwitchCountry}\r\n                variant=\"outlined\"\r\n                style={{ marginRight: '10px' }}\r\n              >\r\n                Cancel\r\n              </Button>\r\n              <Button\r\n                disabled={credentail?.isDemoAdmin}\r\n                onClick={handleSwitchCountryCheck}\r\n                variant=\"outlined\"\r\n                style={{ marginRight: '10px' }}\r\n              >\r\n                Yes\r\n              </Button>\r\n            </DialogActions>\r\n          </Dialog>\r\n        </div>\r\n        <div>\r\n          <BootstrapDialog\r\n            open={isOpenCountry}\r\n            onClose={handleClickCloseCountryDialog}\r\n            PaperProps={{ sx: { height: '40%' } }}\r\n            fullWidth\r\n            maxWidth=\"xs\"\r\n          >\r\n            <BootstrapDialogTitle\r\n              id=\"customized-dialog-title\"\r\n              onClose={handleClickCloseCountryDialog}\r\n            >\r\n              <SnackbarComponent />\r\n\r\n              {country.id ? 'Edit Country' : 'Add Country'}\r\n            </BootstrapDialogTitle>\r\n            <DialogContent dividers>\r\n              <TextField\r\n                autoFocus\r\n                margin=\"dense\"\r\n                id=\"name\"\r\n                label=\"Country Name\"\r\n                type=\"text\"\r\n                fullWidth\r\n                variant=\"outlined\"\r\n                name=\"name\"\r\n                value={country.name}\r\n                onChange={(arr) => {\r\n                  handleInputChange(arr);\r\n                  validateName(arr);\r\n                }}\r\n                required={true}\r\n              />\r\n              <FormHelperText style={{ color: 'red', height: '22px' }}>\r\n                {isNameError && nameErrorMsg}\r\n              </FormHelperText>\r\n              <TextField\r\n                autoFocus\r\n                margin=\"dense\"\r\n                id=\"isoCode\"\r\n                label=\"Country ISO Code\"\r\n                type=\"text\"\r\n                fullWidth\r\n                variant=\"outlined\"\r\n                name=\"isoCode\"\r\n                value={country.isoCode}\r\n                onChange={(arr) => {\r\n                  handleInputChange(arr);\r\n                  validateIsoCode(arr);\r\n                }}\r\n                required={true}\r\n              />\r\n              <FormHelperText style={{ color: 'red', height: '22px' }}>\r\n                {isIsoCodeError && isoCodeErrorMsg}\r\n              </FormHelperText>\r\n              <TextField\r\n                autoFocus\r\n                margin=\"dense\"\r\n                id=\"isoCode3\"\r\n                label=\"Country ISO Code3\"\r\n                type=\"text\"\r\n                fullWidth\r\n                variant=\"outlined\"\r\n                name=\"isoCode3\"\r\n                value={country.isoCode3}\r\n                onChange={(arr) => {\r\n                  handleInputChange(arr);\r\n                  validateIso3Code(arr);\r\n                }}\r\n                required={true}\r\n              />\r\n              <FormHelperText style={{ color: 'red', height: '22px' }}>\r\n                {isIsoCode3Error && isoCode3ErrorMsg}\r\n              </FormHelperText>\r\n              <TextField\r\n                autoFocus\r\n                margin=\"dense\"\r\n                id=\"dialCode\"\r\n                label=\"Country Dial Code\"\r\n                type=\"text\"\r\n                fullWidth\r\n                variant=\"outlined\"\r\n                name=\"dialCode\"\r\n                value={country.dialCode}\r\n                onChange={(arr) => {\r\n                  handleInputChange(arr);\r\n                  validateCountryDialCode(arr);\r\n                }}\r\n              />\r\n              <FormHelperText style={{ color: 'red', height: '22px' }}>\r\n                {isCountryDialCodeError && CountryDialCodeErrorMsg}\r\n              </FormHelperText>\r\n            </DialogContent>\r\n            <Box\r\n              sx={{\r\n                display: 'flex',\r\n                justifyContent: 'space-between',\r\n                p: '8px'\r\n              }}\r\n            >\r\n              <FormHelperText\r\n                style={{\r\n                  color: 'red',\r\n                  height: '22px',\r\n                  margin: 'none',\r\n                  padding: '8px'\r\n                }}\r\n              ></FormHelperText>\r\n              <div>\r\n                <Button\r\n                  onClick={handleClickCloseCountryDialog}\r\n                  variant=\"outlined\"\r\n                  style={{ marginRight: '10px' }}\r\n                >\r\n                  Cancel\r\n                </Button>\r\n                <Button\r\n                  //  disabled={credentail?.isDemoAdmin}\r\n                  onClick={(e) => {\r\n                    checkIsDemoUser(() => savecountry(e), showSnackBar)();\r\n                  }}\r\n                  variant=\"outlined\"\r\n                  style={{ marginRight: '10px' }}\r\n                >\r\n                  Save\r\n                </Button>\r\n              </div>\r\n            </Box>\r\n          </BootstrapDialog>\r\n        </div>\r\n        <div>\r\n          <Dialog\r\n            open={isCheckState}\r\n            onClose={handleCloseSwitchState}\r\n            fullWidth\r\n            maxWidth=\"xs\"\r\n          >\r\n            <DialogTitle\r\n              sx={{\r\n                m: 0,\r\n                p: 2,\r\n                fontSize: '20px',\r\n                fontWeight: 'bolder'\r\n              }}\r\n            >\r\n              {state.isActive ? 'Inactive' : 'Active'}\r\n            </DialogTitle>\r\n            <DialogContent>\r\n              <DialogContentText\r\n                style={{\r\n                  fontSize: '1rem',\r\n                  letterSpacing: '0.00938em'\r\n                }}\r\n              >\r\n                {state.isActive\r\n                  ? 'Are you sure you want to Active?'\r\n                  : 'Are you sure you want to Inactive?'}\r\n              </DialogContentText>\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button\r\n                onClick={handleCloseSwitchState}\r\n                variant=\"outlined\"\r\n                style={{ marginRight: '10px' }}\r\n              >\r\n                Cancel\r\n              </Button>\r\n              <Button\r\n                // disabled={credentail?.isDemoAdmin}\r\n                onClick={() => checkIsDemoUser(handleSwitchStateCheck)()}\r\n                variant=\"outlined\"\r\n                style={{ marginRight: '10px' }}\r\n              >\r\n                Yes\r\n              </Button>\r\n            </DialogActions>\r\n          </Dialog>\r\n        </div>\r\n        <div>\r\n          <BootstrapDialog\r\n            open={isOpenState}\r\n            onClose={handleClickCloseStateDialog}\r\n            PaperProps={{ sx: { height: '40%' } }}\r\n            fullWidth\r\n            maxWidth=\"xs\"\r\n          >\r\n            <BootstrapDialogTitle\r\n              id=\"customized-dialog-title\"\r\n              onClose={handleClickCloseStateDialog}\r\n            >\r\n              {state.id ? 'Edit State' : 'Add State'}\r\n            </BootstrapDialogTitle>\r\n            <DialogContent dividers>\r\n              <SnackbarComponent />\r\n              <FormControl sx={{ width: { lg: '100%' } }}>\r\n                <InputLabel id=\"demo-multiple-name-label\">Country *</InputLabel>\r\n                <Select\r\n                  labelId=\"demo-multiple-name-label\"\r\n                  id=\"demo-multiple-name\"\r\n                  multiple={false}\r\n                  name=\"countryId\"\r\n                  value={state.countryId}\r\n                  onChange={(e) => {\r\n                    handleInputStateChange(e);\r\n                    validateStateCountryId(e);\r\n                  }}\r\n                  label=\"Country\"\r\n                  MenuProps={MenuProps}\r\n                  required={true}\r\n                >\r\n                  {allCountries?.map((arr: any) => (\r\n                    <MenuItem key={arr.id} value={arr.id}>\r\n                      {arr.name}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </FormControl>\r\n              <FormHelperText style={{ color: 'red', height: '22px' }}>\r\n                {isCountryIdError && countryIdErrorMsg}\r\n              </FormHelperText>\r\n              <TextField\r\n                autoFocus\r\n                margin=\"dense\"\r\n                id=\"name\"\r\n                label=\"State Name\"\r\n                type=\"text\"\r\n                fullWidth\r\n                variant=\"outlined\"\r\n                name=\"name\"\r\n                value={state.name}\r\n                onChange={(arr) => {\r\n                  handleInputStateChange(arr);\r\n                  validateStateName(arr);\r\n                }}\r\n                required={true}\r\n              />\r\n              <FormHelperText style={{ color: 'red', height: '22px' }}>\r\n                {isStateNameError && stateNameErrorMsg}\r\n              </FormHelperText>\r\n            </DialogContent>\r\n            <Box\r\n              sx={{\r\n                display: 'flex',\r\n                justifyContent: 'space-between',\r\n                p: '8px'\r\n              }}\r\n            >\r\n              <FormHelperText\r\n                style={{\r\n                  color: 'red',\r\n                  height: '22px',\r\n                  margin: 'none',\r\n                  padding: '8px'\r\n                }}\r\n              ></FormHelperText>\r\n              <div>\r\n                <Button\r\n                  onClick={handleClickCloseStateDialog}\r\n                  variant=\"outlined\"\r\n                  style={{ marginRight: '10px' }}\r\n                >\r\n                  Cancel\r\n                </Button>\r\n                <Button\r\n                  // disabled={credentail?.isDemoAdmin}\r\n                  onClick={(e) => {\r\n                    checkIsDemoUser(() => saveState(e), showSnackBar)();\r\n                  }}\r\n                  variant=\"outlined\"\r\n                  style={{ marginRight: '10px' }}\r\n                >\r\n                  Save\r\n                </Button>\r\n              </div>\r\n            </Box>\r\n          </BootstrapDialog>\r\n        </div>\r\n        <div>\r\n          <Dialog\r\n            open={isCheckDistrict}\r\n            onClose={handleCloseSwitchDistrict}\r\n            fullWidth\r\n            maxWidth=\"xs\"\r\n          >\r\n            <DialogTitle\r\n              sx={{\r\n                m: 0,\r\n                p: 2,\r\n                fontSize: '20px',\r\n                fontWeight: 'bolder'\r\n              }}\r\n            >\r\n              {state.isActive ? 'Inactive' : 'Active'}\r\n            </DialogTitle>\r\n            <DialogContent>\r\n              <DialogContentText\r\n                style={{\r\n                  fontSize: '1rem',\r\n                  letterSpacing: '0.00938em'\r\n                }}\r\n              >\r\n                {state.isActive\r\n                  ? 'Are you sure you want to Active?'\r\n                  : 'Are you sure you want to Inactive?'}\r\n              </DialogContentText>\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button\r\n                onClick={handleCloseSwitchDistrict}\r\n                variant=\"outlined\"\r\n                style={{ marginRight: '10px' }}\r\n              >\r\n                Cancel\r\n              </Button>\r\n              <Button\r\n                disabled={credentail?.isDemoAdmin}\r\n                onClick={handleSwitchDistrictCheck}\r\n                variant=\"outlined\"\r\n                style={{ marginRight: '10px' }}\r\n              >\r\n                Yes\r\n              </Button>\r\n            </DialogActions>\r\n          </Dialog>\r\n        </div>\r\n        <div>\r\n          <BootstrapDialog\r\n            open={isOpenDistrict}\r\n            onClose={handleClickCloseDistrictDialog}\r\n            PaperProps={{ sx: { height: '40%' } }}\r\n            fullWidth\r\n            maxWidth=\"xs\"\r\n          >\r\n            <BootstrapDialogTitle\r\n              id=\"customized-dialog-title\"\r\n              onClose={handleClickCloseDistrictDialog}\r\n            >\r\n              {district.id ? 'Edit District' : 'Add District'}\r\n            </BootstrapDialogTitle>\r\n            <DialogContent dividers>\r\n              <SnackbarComponent />\r\n              <FormControl sx={{ width: { lg: '100%' } }}>\r\n                <InputLabel id=\"demo-multiple-name-label\">Country *</InputLabel>\r\n                <Select\r\n                  labelId=\"demo-multiple-name-label\"\r\n                  id=\"demo-multiple-name\"\r\n                  multiple={false}\r\n                  name=\"countryId\"\r\n                  value={district.countryId}\r\n                  onChange={(e) => {\r\n                    handleInputDistrictChange(e);\r\n                    validateDistrictCountryId(e);\r\n                  }}\r\n                  label=\"Country\"\r\n                  MenuProps={MenuProps}\r\n                  required={true}\r\n                >\r\n                  {allCountries?.map((arr: any) => (\r\n                    <MenuItem key={arr.id} value={arr.id}>\r\n                      {arr.name}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </FormControl>\r\n              <FormHelperText style={{ color: 'red', height: '22px' }}>\r\n                {isCountryIdError && countryIdErrorMsg}\r\n              </FormHelperText>\r\n              <FormControl sx={{ width: { lg: '100%' } }}>\r\n                <InputLabel id=\"demo-multiple-name-label\">State *</InputLabel>\r\n                <Select\r\n                  labelId=\"demo-multiple-name-label\"\r\n                  id=\"demo-multiple-name\"\r\n                  multiple={false}\r\n                  name=\"stateId\"\r\n                  value={district.stateId}\r\n                  onChange={(e) => {\r\n                    handleInputDistrictChange(e);\r\n                    validateDistrictStateId(e);\r\n                  }}\r\n                  label=\"State\"\r\n                  MenuProps={MenuProps}\r\n                  required={true}\r\n                >\r\n                  {allStates?.map((arr: any) => (\r\n                    <MenuItem key={arr.id} value={arr.id}>\r\n                      {arr.name}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </FormControl>\r\n              <FormHelperText style={{ color: 'red', height: '22px' }}>\r\n                {isStateIdError && stateIdErrorMsg}\r\n              </FormHelperText>\r\n              <TextField\r\n                autoFocus\r\n                margin=\"dense\"\r\n                id=\"name\"\r\n                label=\"District Name\"\r\n                type=\"text\"\r\n                fullWidth\r\n                variant=\"outlined\"\r\n                name=\"name\"\r\n                value={district.name}\r\n                onChange={(arr) => {\r\n                  handleInputDistrictChange(arr);\r\n                  validateDistrictName(arr);\r\n                }}\r\n                required={true}\r\n              />\r\n              <FormHelperText style={{ color: 'red', height: '22px' }}>\r\n                {isDistrictNameError && districtNameErrorMsg}\r\n              </FormHelperText>\r\n            </DialogContent>\r\n            <Box\r\n              sx={{\r\n                display: 'flex',\r\n                justifyContent: 'space-between',\r\n                p: '8px'\r\n              }}\r\n            >\r\n              <FormHelperText\r\n                style={{\r\n                  color: 'red',\r\n                  height: '22px',\r\n                  margin: 'none',\r\n                  padding: '8px'\r\n                }}\r\n              ></FormHelperText>\r\n              <div>\r\n                <Button\r\n                  onClick={handleClickCloseDistrictDialog}\r\n                  variant=\"outlined\"\r\n                  style={{ marginRight: '10px' }}\r\n                >\r\n                  Cancel\r\n                </Button>\r\n                <Button\r\n                  // disabled={credentail?.isDemoAdmin}\r\n                  onClick={(e) => {\r\n                    checkIsDemoUser(() => saveDistrict(e), showSnackBar)();\r\n                  }}\r\n                  variant=\"outlined\"\r\n                  style={{ marginRight: '10px' }}\r\n                >\r\n                  Save\r\n                </Button>\r\n              </div>\r\n            </Box>\r\n          </BootstrapDialog>\r\n        </div>\r\n        <div>\r\n          <Dialog\r\n            open={isCheckCity}\r\n            onClose={handleCloseSwitchCity}\r\n            fullWidth\r\n            maxWidth=\"xs\"\r\n          >\r\n            <DialogTitle\r\n              sx={{\r\n                m: 0,\r\n                p: 2,\r\n                fontSize: '20px',\r\n                fontWeight: 'bolder'\r\n              }}\r\n            >\r\n              {city.isActive ? 'Inactive' : 'Active'}\r\n            </DialogTitle>\r\n            <DialogContent>\r\n              <DialogContentText\r\n                style={{\r\n                  fontSize: '1rem',\r\n                  letterSpacing: '0.00938em'\r\n                }}\r\n              >\r\n                {state.isActive\r\n                  ? 'Are you sure you want to Active?'\r\n                  : 'Are you sure you want to Inactive?'}\r\n              </DialogContentText>\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button\r\n                onClick={handleCloseSwitchCity}\r\n                variant=\"outlined\"\r\n                style={{ marginRight: '10px' }}\r\n              >\r\n                Cancel\r\n              </Button>\r\n              <Button\r\n                disabled={credentail?.isDemoAdmin}\r\n                onClick={handleSwitchCityCheck}\r\n                variant=\"outlined\"\r\n                style={{ marginRight: '10px' }}\r\n              >\r\n                Yes\r\n              </Button>\r\n            </DialogActions>\r\n          </Dialog>\r\n        </div>\r\n        <div>\r\n          <BootstrapDialog\r\n            open={isOpenCity}\r\n            onClose={handleClickCloseCityDialog}\r\n            PaperProps={{ sx: { height: '40%' } }}\r\n            fullWidth\r\n            maxWidth=\"xs\"\r\n          >\r\n            <BootstrapDialogTitle\r\n              id=\"customized-dialog-title\"\r\n              onClose={handleClickCloseCityDialog}\r\n            >\r\n              {city.id ? 'Edit City' : 'Add City'}\r\n            </BootstrapDialogTitle>\r\n            <DialogContent dividers>\r\n              <SnackbarComponent />\r\n              <FormControl sx={{ width: { lg: '100%' } }}>\r\n                <InputLabel id=\"demo-multiple-name-label\">Country *</InputLabel>\r\n                <Select\r\n                  labelId=\"demo-multiple-name-label\"\r\n                  id=\"demo-multiple-name\"\r\n                  multiple={false}\r\n                  name=\"countryId\"\r\n                  value={city.countryId}\r\n                  onChange={(e) => {\r\n                    handleInputCityChange(e);\r\n                    validateCityCountryId(e);\r\n                  }}\r\n                  label=\"Country\"\r\n                  MenuProps={MenuProps}\r\n                  required={true}\r\n                >\r\n                  {allCountries?.map((arr: any) => (\r\n                    <MenuItem key={arr.id} value={arr.id}>\r\n                      {arr.name}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </FormControl>\r\n              <FormHelperText style={{ color: 'red', height: '22px' }}>\r\n                {isCountryIdError && countryIdErrorMsg}\r\n              </FormHelperText>\r\n              <FormControl sx={{ width: { lg: '100%' } }}>\r\n                <InputLabel id=\"demo-multiple-name-label\">State *</InputLabel>\r\n                <Select\r\n                  labelId=\"demo-multiple-name-label\"\r\n                  id=\"demo-multiple-name\"\r\n                  multiple={false}\r\n                  name=\"stateId\"\r\n                  value={city.stateId}\r\n                  onChange={(e) => {\r\n                    handleInputCityChange(e);\r\n                    validateCityStateId(e);\r\n                  }}\r\n                  label=\"State\"\r\n                  MenuProps={MenuProps}\r\n                  required={true}\r\n                >\r\n                  {allStates?.map((arr: any) => (\r\n                    <MenuItem key={arr.id} value={arr.id}>\r\n                      {arr.name}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </FormControl>\r\n              <FormHelperText style={{ color: 'red', height: '22px' }}>\r\n                {isStateIdError && stateIdErrorMsg}\r\n              </FormHelperText>\r\n              <FormControl sx={{ width: { lg: '100%' } }}>\r\n                <InputLabel id=\"demo-multiple-name-label\">\r\n                  District *\r\n                </InputLabel>\r\n                <Select\r\n                  labelId=\"demo-multiple-name-label\"\r\n                  id=\"demo-multiple-name\"\r\n                  multiple={false}\r\n                  name=\"districtId\"\r\n                  value={city.districtId}\r\n                  onChange={(e) => {\r\n                    handleInputCityChange(e);\r\n                    validateDistrictId(e);\r\n                  }}\r\n                  label=\"District\"\r\n                  MenuProps={MenuProps}\r\n                  required={true}\r\n                >\r\n                  {allDistricts?.map((arr: any) => (\r\n                    <MenuItem key={arr.id} value={arr.id}>\r\n                      {arr.name}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </FormControl>\r\n              <FormHelperText style={{ color: 'red', height: '22px' }}>\r\n                {isDistrictIdError && districtIdErrorMsg}\r\n              </FormHelperText>\r\n              <TextField\r\n                autoFocus\r\n                margin=\"dense\"\r\n                id=\"name\"\r\n                label=\"City Name\"\r\n                type=\"text\"\r\n                fullWidth\r\n                variant=\"outlined\"\r\n                name=\"name\"\r\n                value={city.name}\r\n                onChange={(arr) => {\r\n                  handleInputCityChange(arr);\r\n                  validateCityName(arr);\r\n                }}\r\n                required={true}\r\n              />\r\n              <FormHelperText style={{ color: 'red', height: '22px' }}>\r\n                {isCityNameError && cityNameErrorMsg}\r\n              </FormHelperText>\r\n\r\n              <TextField\r\n                autoFocus\r\n                margin=\"dense\"\r\n                id=\"name\"\r\n                label=\"City Pincode/Postalcode\"\r\n                type=\"text\"\r\n                fullWidth\r\n                variant=\"outlined\"\r\n                name=\"pincode\"\r\n                value={city.pincode}\r\n                onChange={(arr) => {\r\n                  handleInputCityChange(arr);\r\n                  validateCityPincode(arr);\r\n                }}\r\n                required={true}\r\n              />\r\n              <FormHelperText style={{ color: 'red', height: '22px' }}>\r\n                {isPincodeError && pincodeErrorMsg}\r\n              </FormHelperText>\r\n              <Typography\r\n                sx={{\r\n                  fontSize: '12px',\r\n                  fontWeight: 'bold',\r\n                  color: '#ff0000',\r\n                  paddingTop: '12px'\r\n                }}\r\n              >\r\n                Note: If postalcode/pincode is not available then please add\r\n                00000.\r\n              </Typography>\r\n            </DialogContent>\r\n            <Box\r\n              sx={{\r\n                display: 'flex',\r\n                justifyContent: 'space-between',\r\n                p: '8px'\r\n              }}\r\n            >\r\n              <FormHelperText\r\n                style={{\r\n                  color: 'red',\r\n                  height: '22px',\r\n                  margin: 'none',\r\n                  padding: '8px'\r\n                }}\r\n              ></FormHelperText>\r\n              <div>\r\n                <Typography>\r\n                  <Button\r\n                    onClick={handleClickCloseCityDialog}\r\n                    variant=\"outlined\"\r\n                    style={{ marginRight: '10px' }}\r\n                  >\r\n                    Cancel\r\n                  </Button>\r\n                  <Button\r\n                    // disabled={credentail?.isDemoAdmin}\r\n                    onClick={(e) => {\r\n                      checkIsDemoUser(() => saveCity(e), showSnackBar)();\r\n                    }}\r\n                    variant=\"outlined\"\r\n                    style={{ marginRight: '10px' }}\r\n                  >\r\n                    Save\r\n                  </Button>\r\n                </Typography>\r\n              </div>\r\n            </Box>\r\n          </BootstrapDialog>\r\n        </div>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Region;\r\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'Add');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 6.41 17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Close');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19.35 10.04C18.67 6.59 15.64 4 12 4 9.11 4 6.6 5.64 5.35 8.04 2.34 8.36 0 10.91 0 14c0 3.31 2.69 6 6 6h13c2.76 0 5-2.24 5-5 0-2.64-2.05-4.78-4.65-4.96zM17 13l-5 5-5-5h3V9h4v4h3z\"\n}), 'CloudDownload');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19.35 10.04C18.67 6.59 15.64 4 12 4 9.11 4 6.6 5.64 5.35 8.04 2.34 8.36 0 10.91 0 14c0 3.31 2.69 6 6 6h13c2.76 0 5-2.24 5-5 0-2.64-2.05-4.78-4.65-4.96zM14 13v4h-4v-4H7l5-5 5 5h-3z\"\n}), 'CloudUpload');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)([/*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M5 18.08V19h.92l9.06-9.06-.92-.92z\",\n  opacity: \".3\"\n}, \"0\"), /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34c-.2-.2-.45-.29-.71-.29s-.51.1-.7.29l-1.83 1.83 3.75 3.75 1.83-1.83zM3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM5.92 19H5v-.92l9.06-9.06.92.92L5.92 19z\"\n}, \"1\")], 'EditTwoTone');\nexports.default = _default;","'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"\n}), 'CheckBoxOutlineBlank');","'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckBox');","'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z\"\n}), 'IndeterminateCheckBox');","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCheckboxUtilityClass(slot) {\n  return generateUtilityClass('MuiCheckbox', slot);\n}\nconst checkboxClasses = generateUtilityClasses('MuiCheckbox', ['root', 'checked', 'disabled', 'indeterminate', 'colorPrimary', 'colorSecondary', 'sizeSmall', 'sizeMedium']);\nexport default checkboxClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"checkedIcon\", \"color\", \"icon\", \"indeterminate\", \"indeterminateIcon\", \"inputProps\", \"size\", \"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport refType from '@mui/utils/refType';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { alpha } from '@mui/system/colorManipulator';\nimport SwitchBase from '../internal/SwitchBase';\nimport CheckBoxOutlineBlankIcon from '../internal/svg-icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '../internal/svg-icons/CheckBox';\nimport IndeterminateCheckBoxIcon from '../internal/svg-icons/IndeterminateCheckBox';\nimport capitalize from '../utils/capitalize';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport styled, { rootShouldForwardProp } from '../styles/styled';\nimport checkboxClasses, { getCheckboxUtilityClass } from './checkboxClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    indeterminate,\n    color,\n    size\n  } = ownerState;\n  const slots = {\n    root: ['root', indeterminate && 'indeterminate', `color${capitalize(color)}`, `size${capitalize(size)}`]\n  };\n  const composedClasses = composeClasses(slots, getCheckboxUtilityClass, classes);\n  return _extends({}, classes, composedClasses);\n};\nconst CheckboxRoot = styled(SwitchBase, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  name: 'MuiCheckbox',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.indeterminate && styles.indeterminate, styles[`size${capitalize(ownerState.size)}`], ownerState.color !== 'default' && styles[`color${capitalize(ownerState.color)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  color: (theme.vars || theme).palette.text.secondary\n}, !ownerState.disableRipple && {\n  '&:hover': {\n    backgroundColor: theme.vars ? `rgba(${ownerState.color === 'default' ? theme.vars.palette.action.activeChannel : theme.vars.palette[ownerState.color].mainChannel} / ${theme.vars.palette.action.hoverOpacity})` : alpha(ownerState.color === 'default' ? theme.palette.action.active : theme.palette[ownerState.color].main, theme.palette.action.hoverOpacity),\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: 'transparent'\n    }\n  }\n}, ownerState.color !== 'default' && {\n  [`&.${checkboxClasses.checked}, &.${checkboxClasses.indeterminate}`]: {\n    color: (theme.vars || theme).palette[ownerState.color].main\n  },\n  [`&.${checkboxClasses.disabled}`]: {\n    color: (theme.vars || theme).palette.action.disabled\n  }\n}));\nconst defaultCheckedIcon = /*#__PURE__*/_jsx(CheckBoxIcon, {});\nconst defaultIcon = /*#__PURE__*/_jsx(CheckBoxOutlineBlankIcon, {});\nconst defaultIndeterminateIcon = /*#__PURE__*/_jsx(IndeterminateCheckBoxIcon, {});\nconst Checkbox = /*#__PURE__*/React.forwardRef(function Checkbox(inProps, ref) {\n  var _icon$props$fontSize, _indeterminateIcon$pr;\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiCheckbox'\n  });\n  const {\n      checkedIcon = defaultCheckedIcon,\n      color = 'primary',\n      icon: iconProp = defaultIcon,\n      indeterminate = false,\n      indeterminateIcon: indeterminateIconProp = defaultIndeterminateIcon,\n      inputProps,\n      size = 'medium',\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const icon = indeterminate ? indeterminateIconProp : iconProp;\n  const indeterminateIcon = indeterminate ? indeterminateIconProp : checkedIcon;\n  const ownerState = _extends({}, props, {\n    color,\n    indeterminate,\n    size\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CheckboxRoot, _extends({\n    type: \"checkbox\",\n    inputProps: _extends({\n      'data-indeterminate': indeterminate\n    }, inputProps),\n    icon: /*#__PURE__*/React.cloneElement(icon, {\n      fontSize: (_icon$props$fontSize = icon.props.fontSize) != null ? _icon$props$fontSize : size\n    }),\n    checkedIcon: /*#__PURE__*/React.cloneElement(indeterminateIcon, {\n      fontSize: (_indeterminateIcon$pr = indeterminateIcon.props.fontSize) != null ? _indeterminateIcon$pr : size\n    }),\n    ownerState: ownerState,\n    ref: ref,\n    className: clsx(classes.root, className)\n  }, other, {\n    classes: classes\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Checkbox.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n  /**\n   * The icon to display when the component is checked.\n   * @default <CheckBoxIcon />\n   */\n  checkedIcon: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).\n   * @default 'primary'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['default', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * The default checked state. Use when the component is not controlled.\n   */\n  defaultChecked: PropTypes.bool,\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the ripple effect is disabled.\n   * @default false\n   */\n  disableRipple: PropTypes.bool,\n  /**\n   * The icon to display when the component is unchecked.\n   * @default <CheckBoxOutlineBlankIcon />\n   */\n  icon: PropTypes.node,\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n  /**\n   * If `true`, the component appears indeterminate.\n   * This does not set the native input element to indeterminate due\n   * to inconsistent behavior across browsers.\n   * However, we set a `data-indeterminate` attribute on the `input`.\n   * @default false\n   */\n  indeterminate: PropTypes.bool,\n  /**\n   * The icon to display when the component is indeterminate.\n   * @default <IndeterminateCheckBoxIcon />\n   */\n  indeterminateIcon: PropTypes.node,\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n  /**\n   * If `true`, the `input` element is required.\n   * @default false\n   */\n  required: PropTypes.bool,\n  /**\n   * The size of the component.\n   * `small` is equivalent to the dense checkbox styling.\n   * @default 'medium'\n   */\n  size: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default Checkbox;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getDialogContentTextUtilityClass(slot) {\n  return generateUtilityClass('MuiDialogContentText', slot);\n}\nconst dialogContentTextClasses = generateUtilityClasses('MuiDialogContentText', ['root']);\nexport default dialogContentTextClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\", \"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport styled, { rootShouldForwardProp } from '../styles/styled';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport Typography from '../Typography';\nimport { getDialogContentTextUtilityClass } from './dialogContentTextClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  const composedClasses = composeClasses(slots, getDialogContentTextUtilityClass, classes);\n  return _extends({}, classes, composedClasses);\n};\nconst DialogContentTextRoot = styled(Typography, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  name: 'MuiDialogContentText',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({});\nconst DialogContentText = /*#__PURE__*/React.forwardRef(function DialogContentText(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiDialogContentText'\n  });\n  const {\n      className\n    } = props,\n    ownerState = _objectWithoutPropertiesLoose(props, _excluded);\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(DialogContentTextRoot, _extends({\n    component: \"p\",\n    variant: \"body1\",\n    color: \"text.secondary\",\n    ref: ref,\n    ownerState: ownerState,\n    className: clsx(classes.root, className)\n  }, props, {\n    classes: classes\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? DialogContentText.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default DialogContentText;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getSwitchUtilityClass(slot) {\n  return generateUtilityClass('MuiSwitch', slot);\n}\nconst switchClasses = generateUtilityClasses('MuiSwitch', ['root', 'edgeStart', 'edgeEnd', 'switchBase', 'colorPrimary', 'colorSecondary', 'sizeSmall', 'sizeMedium', 'checked', 'disabled', 'input', 'thumb', 'track']);\nexport default switchClasses;","'use client';\n\n// @inheritedComponent IconButton\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"color\", \"edge\", \"size\", \"sx\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport refType from '@mui/utils/refType';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { alpha, darken, lighten } from '@mui/system/colorManipulator';\nimport capitalize from '../utils/capitalize';\nimport SwitchBase from '../internal/SwitchBase';\nimport { styled } from '../zero-styled';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport switchClasses, { getSwitchUtilityClass } from './switchClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    edge,\n    size,\n    color,\n    checked,\n    disabled\n  } = ownerState;\n  const slots = {\n    root: ['root', edge && `edge${capitalize(edge)}`, `size${capitalize(size)}`],\n    switchBase: ['switchBase', `color${capitalize(color)}`, checked && 'checked', disabled && 'disabled'],\n    thumb: ['thumb'],\n    track: ['track'],\n    input: ['input']\n  };\n  const composedClasses = composeClasses(slots, getSwitchUtilityClass, classes);\n  return _extends({}, classes, composedClasses);\n};\nconst SwitchRoot = styled('span', {\n  name: 'MuiSwitch',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.edge && styles[`edge${capitalize(ownerState.edge)}`], styles[`size${capitalize(ownerState.size)}`]];\n  }\n})({\n  display: 'inline-flex',\n  width: 34 + 12 * 2,\n  height: 14 + 12 * 2,\n  overflow: 'hidden',\n  padding: 12,\n  boxSizing: 'border-box',\n  position: 'relative',\n  flexShrink: 0,\n  zIndex: 0,\n  // Reset the stacking context.\n  verticalAlign: 'middle',\n  // For correct alignment with the text.\n  '@media print': {\n    colorAdjust: 'exact'\n  },\n  variants: [{\n    props: {\n      edge: 'start'\n    },\n    style: {\n      marginLeft: -8\n    }\n  }, {\n    props: {\n      edge: 'end'\n    },\n    style: {\n      marginRight: -8\n    }\n  }, {\n    props: {\n      size: 'small'\n    },\n    style: {\n      width: 40,\n      height: 24,\n      padding: 7,\n      [`& .${switchClasses.thumb}`]: {\n        width: 16,\n        height: 16\n      },\n      [`& .${switchClasses.switchBase}`]: {\n        padding: 4,\n        [`&.${switchClasses.checked}`]: {\n          transform: 'translateX(16px)'\n        }\n      }\n    }\n  }]\n});\nconst SwitchSwitchBase = styled(SwitchBase, {\n  name: 'MuiSwitch',\n  slot: 'SwitchBase',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.switchBase, {\n      [`& .${switchClasses.input}`]: styles.input\n    }, ownerState.color !== 'default' && styles[`color${capitalize(ownerState.color)}`]];\n  }\n})(({\n  theme\n}) => ({\n  position: 'absolute',\n  top: 0,\n  left: 0,\n  zIndex: 1,\n  // Render above the focus ripple.\n  color: theme.vars ? theme.vars.palette.Switch.defaultColor : `${theme.palette.mode === 'light' ? theme.palette.common.white : theme.palette.grey[300]}`,\n  transition: theme.transitions.create(['left', 'transform'], {\n    duration: theme.transitions.duration.shortest\n  }),\n  [`&.${switchClasses.checked}`]: {\n    transform: 'translateX(20px)'\n  },\n  [`&.${switchClasses.disabled}`]: {\n    color: theme.vars ? theme.vars.palette.Switch.defaultDisabledColor : `${theme.palette.mode === 'light' ? theme.palette.grey[100] : theme.palette.grey[600]}`\n  },\n  [`&.${switchClasses.checked} + .${switchClasses.track}`]: {\n    opacity: 0.5\n  },\n  [`&.${switchClasses.disabled} + .${switchClasses.track}`]: {\n    opacity: theme.vars ? theme.vars.opacity.switchTrackDisabled : `${theme.palette.mode === 'light' ? 0.12 : 0.2}`\n  },\n  [`& .${switchClasses.input}`]: {\n    left: '-100%',\n    width: '300%'\n  }\n}), ({\n  theme\n}) => ({\n  '&:hover': {\n    backgroundColor: theme.vars ? `rgba(${theme.vars.palette.action.activeChannel} / ${theme.vars.palette.action.hoverOpacity})` : alpha(theme.palette.action.active, theme.palette.action.hoverOpacity),\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: 'transparent'\n    }\n  },\n  variants: [...Object.entries(theme.palette).filter(([, value]) => value.main && value.light) // check all the used fields in the style below\n  .map(([color]) => ({\n    props: {\n      color\n    },\n    style: {\n      [`&.${switchClasses.checked}`]: {\n        color: (theme.vars || theme).palette[color].main,\n        '&:hover': {\n          backgroundColor: theme.vars ? `rgba(${theme.vars.palette[color].mainChannel} / ${theme.vars.palette.action.hoverOpacity})` : alpha(theme.palette[color].main, theme.palette.action.hoverOpacity),\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        },\n        [`&.${switchClasses.disabled}`]: {\n          color: theme.vars ? theme.vars.palette.Switch[`${color}DisabledColor`] : `${theme.palette.mode === 'light' ? lighten(theme.palette[color].main, 0.62) : darken(theme.palette[color].main, 0.55)}`\n        }\n      },\n      [`&.${switchClasses.checked} + .${switchClasses.track}`]: {\n        backgroundColor: (theme.vars || theme).palette[color].main\n      }\n    }\n  }))]\n}));\nconst SwitchTrack = styled('span', {\n  name: 'MuiSwitch',\n  slot: 'Track',\n  overridesResolver: (props, styles) => styles.track\n})(({\n  theme\n}) => ({\n  height: '100%',\n  width: '100%',\n  borderRadius: 14 / 2,\n  zIndex: -1,\n  transition: theme.transitions.create(['opacity', 'background-color'], {\n    duration: theme.transitions.duration.shortest\n  }),\n  backgroundColor: theme.vars ? theme.vars.palette.common.onBackground : `${theme.palette.mode === 'light' ? theme.palette.common.black : theme.palette.common.white}`,\n  opacity: theme.vars ? theme.vars.opacity.switchTrack : `${theme.palette.mode === 'light' ? 0.38 : 0.3}`\n}));\nconst SwitchThumb = styled('span', {\n  name: 'MuiSwitch',\n  slot: 'Thumb',\n  overridesResolver: (props, styles) => styles.thumb\n})(({\n  theme\n}) => ({\n  boxShadow: (theme.vars || theme).shadows[1],\n  backgroundColor: 'currentColor',\n  width: 20,\n  height: 20,\n  borderRadius: '50%'\n}));\nconst Switch = /*#__PURE__*/React.forwardRef(function Switch(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiSwitch'\n  });\n  const {\n      className,\n      color = 'primary',\n      edge = false,\n      size = 'medium',\n      sx\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    color,\n    edge,\n    size\n  });\n  const classes = useUtilityClasses(ownerState);\n  const icon = /*#__PURE__*/_jsx(SwitchThumb, {\n    className: classes.thumb,\n    ownerState: ownerState\n  });\n  return /*#__PURE__*/_jsxs(SwitchRoot, {\n    className: clsx(classes.root, className),\n    sx: sx,\n    ownerState: ownerState,\n    children: [/*#__PURE__*/_jsx(SwitchSwitchBase, _extends({\n      type: \"checkbox\",\n      icon: icon,\n      checkedIcon: icon,\n      ref: ref,\n      ownerState: ownerState\n    }, other, {\n      classes: _extends({}, classes, {\n        root: classes.switchBase\n      })\n    })), /*#__PURE__*/_jsx(SwitchTrack, {\n      className: classes.track,\n      ownerState: ownerState\n    })]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Switch.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).\n   * @default 'primary'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['default', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * The default checked state. Use when the component is not controlled.\n   */\n  defaultChecked: PropTypes.bool,\n  /**\n   * If `true`, the component is disabled.\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the ripple effect is disabled.\n   * @default false\n   */\n  disableRipple: PropTypes.bool,\n  /**\n   * If given, uses a negative margin to counteract the padding on one\n   * side (this is often helpful for aligning the left or right\n   * side of the icon with content above or below, without ruining the border\n   * size and shape).\n   * @default false\n   */\n  edge: PropTypes.oneOf(['end', 'start', false]),\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node,\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n  /**\n   * If `true`, the `input` element is required.\n   * @default false\n   */\n  required: PropTypes.bool,\n  /**\n   * The size of the component.\n   * `small` is equivalent to the dense switch styling.\n   * @default 'medium'\n   */\n  size: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default Switch;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getSwitchBaseUtilityClass(slot) {\n  return generateUtilityClass('PrivateSwitchBase', slot);\n}\nconst switchBaseClasses = generateUtilityClasses('PrivateSwitchBase', ['root', 'checked', 'disabled', 'input', 'edgeStart', 'edgeEnd']);\nexport default switchBaseClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"autoFocus\", \"checked\", \"checkedIcon\", \"className\", \"defaultChecked\", \"disabled\", \"disableFocusRipple\", \"edge\", \"icon\", \"id\", \"inputProps\", \"inputRef\", \"name\", \"onBlur\", \"onChange\", \"onFocus\", \"readOnly\", \"required\", \"tabIndex\", \"type\", \"value\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport refType from '@mui/utils/refType';\nimport composeClasses from '@mui/utils/composeClasses';\nimport capitalize from '../utils/capitalize';\nimport styled, { rootShouldForwardProp } from '../styles/styled';\nimport useControlled from '../utils/useControlled';\nimport useFormControl from '../FormControl/useFormControl';\nimport ButtonBase from '../ButtonBase';\nimport { getSwitchBaseUtilityClass } from './switchBaseClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    checked,\n    disabled,\n    edge\n  } = ownerState;\n  const slots = {\n    root: ['root', checked && 'checked', disabled && 'disabled', edge && `edge${capitalize(edge)}`],\n    input: ['input']\n  };\n  return composeClasses(slots, getSwitchBaseUtilityClass, classes);\n};\nconst SwitchBaseRoot = styled(ButtonBase)(({\n  ownerState\n}) => _extends({\n  padding: 9,\n  borderRadius: '50%'\n}, ownerState.edge === 'start' && {\n  marginLeft: ownerState.size === 'small' ? -3 : -12\n}, ownerState.edge === 'end' && {\n  marginRight: ownerState.size === 'small' ? -3 : -12\n}));\nconst SwitchBaseInput = styled('input', {\n  shouldForwardProp: rootShouldForwardProp\n})({\n  cursor: 'inherit',\n  position: 'absolute',\n  opacity: 0,\n  width: '100%',\n  height: '100%',\n  top: 0,\n  left: 0,\n  margin: 0,\n  padding: 0,\n  zIndex: 1\n});\n\n/**\n * @ignore - internal component.\n */\nconst SwitchBase = /*#__PURE__*/React.forwardRef(function SwitchBase(props, ref) {\n  const {\n      autoFocus,\n      checked: checkedProp,\n      checkedIcon,\n      className,\n      defaultChecked,\n      disabled: disabledProp,\n      disableFocusRipple = false,\n      edge = false,\n      icon,\n      id,\n      inputProps,\n      inputRef,\n      name,\n      onBlur,\n      onChange,\n      onFocus,\n      readOnly,\n      required = false,\n      tabIndex,\n      type,\n      value\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const [checked, setCheckedState] = useControlled({\n    controlled: checkedProp,\n    default: Boolean(defaultChecked),\n    name: 'SwitchBase',\n    state: 'checked'\n  });\n  const muiFormControl = useFormControl();\n  const handleFocus = event => {\n    if (onFocus) {\n      onFocus(event);\n    }\n    if (muiFormControl && muiFormControl.onFocus) {\n      muiFormControl.onFocus(event);\n    }\n  };\n  const handleBlur = event => {\n    if (onBlur) {\n      onBlur(event);\n    }\n    if (muiFormControl && muiFormControl.onBlur) {\n      muiFormControl.onBlur(event);\n    }\n  };\n  const handleInputChange = event => {\n    // Workaround for https://github.com/facebook/react/issues/9023\n    if (event.nativeEvent.defaultPrevented) {\n      return;\n    }\n    const newChecked = event.target.checked;\n    setCheckedState(newChecked);\n    if (onChange) {\n      // TODO v6: remove the second argument.\n      onChange(event, newChecked);\n    }\n  };\n  let disabled = disabledProp;\n  if (muiFormControl) {\n    if (typeof disabled === 'undefined') {\n      disabled = muiFormControl.disabled;\n    }\n  }\n  const hasLabelFor = type === 'checkbox' || type === 'radio';\n  const ownerState = _extends({}, props, {\n    checked,\n    disabled,\n    disableFocusRipple,\n    edge\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsxs(SwitchBaseRoot, _extends({\n    component: \"span\",\n    className: clsx(classes.root, className),\n    centerRipple: true,\n    focusRipple: !disableFocusRipple,\n    disabled: disabled,\n    tabIndex: null,\n    role: undefined,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    ownerState: ownerState,\n    ref: ref\n  }, other, {\n    children: [/*#__PURE__*/_jsx(SwitchBaseInput, _extends({\n      autoFocus: autoFocus,\n      checked: checkedProp,\n      defaultChecked: defaultChecked,\n      className: classes.input,\n      disabled: disabled,\n      id: hasLabelFor ? id : undefined,\n      name: name,\n      onChange: handleInputChange,\n      readOnly: readOnly,\n      ref: inputRef,\n      required: required,\n      ownerState: ownerState,\n      tabIndex: tabIndex,\n      type: type\n    }, type === 'checkbox' && value === undefined ? {} : {\n      value\n    }, inputProps)), checked ? checkedIcon : icon]\n  }));\n});\n\n// NB: If changed, please update Checkbox, Switch and Radio\n// so that the API documentation is updated.\nprocess.env.NODE_ENV !== \"production\" ? SwitchBase.propTypes = {\n  /**\n   * If `true`, the `input` element is focused during the first mount.\n   */\n  autoFocus: PropTypes.bool,\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node.isRequired,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * @ignore\n   */\n  defaultChecked: PropTypes.bool,\n  /**\n   * If `true`, the component is disabled.\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the  keyboard focus ripple is disabled.\n   * @default false\n   */\n  disableFocusRipple: PropTypes.bool,\n  /**\n   * If given, uses a negative margin to counteract the padding on one\n   * side (this is often helpful for aligning the left or right\n   * side of the icon with content above or below, without ruining the border\n   * size and shape).\n   * @default false\n   */\n  edge: PropTypes.oneOf(['end', 'start', false]),\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node.isRequired,\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n  /*\n   * @ignore\n   */\n  name: PropTypes.string,\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n  /**\n   * It prevents the user from changing the value of the field\n   * (not from interacting with the field).\n   */\n  readOnly: PropTypes.bool,\n  /**\n   * If `true`, the `input` element is required.\n   */\n  required: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n  /**\n   * @ignore\n   */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * The input component prop `type`.\n   */\n  type: PropTypes.string.isRequired,\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default SwitchBase;"],"names":["PageTitle","styled","Box","_ref","theme","spacing","_ref2","children","_jsx","className","Container","maxWidth","props","title","Country","constructor","id","name","isoCode","isoCode3","dialCode","isDefult","isActive","isDelete","createdDate","modifiedDate","States","countryId","code","countryName","Districts","stateId","stateName","Cities","districtId","pincode","districtName","BootstrapDialog","Dialog","padding","minHeight","BootstrapDialogTitle","onClose","other","_jsxs","DialogTitle","sx","m","p","fontSize","fontWeight","IconButton","onClick","position","right","top","color","palette","grey","CloseIcon","MenuProps","PaperProps","style","maxHeight","ITEM_HEIGHT","width","initialCountryState","initialState","initialDistrictState","initialCityState","Region","navigate","useNavigate","useTheme","isLoadingCountry","setIsLoadingCountry","useState","page","setPage","limit","setLimit","row","setRow","countries","setCountries","allCountries","setAllCountries","selectCountry","setSelectCountry","country","setCountry","isOpenCountry","setIsOpenCountry","isNameError","setIsNameError","nameErrorMsg","setNameErrorMsg","isIsoCodeError","setIsoCodeError","isoCodeErrorMsg","setIsoCodeErrorMsg","isIsoCode3Error","setIsoCode3Error","isoCode3ErrorMsg","setIsoCode3ErrorMsg","isCountryDialCodeError","setCountryDialCodeError","CountryDialCodeErrorMsg","setCountryDialCodeErrorMsg","isCheckCountry","setIsCheckCountry","isLoadingState","setIsLoadingState","pageState","setPageState","limitState","setLimitState","rowState","setRowState","states","setStates","allStates","setAllStates","selectState","setSelectState","state","setState","isOpenState","setIsOpenState","isStateNameError","setIsStateNameError","stateNameErrorMsg","setStateNameErrorMsg","isCountryIdError","setIsCountryIdError","countryIdErrorMsg","setCountryIdErrorMsg","isCheckState","setIsCheckState","isLoadingDistrict","setIsLoadingDistrict","pageDistrict","setPageDistrict","limitDistrict","setLimitDistrict","rowDistrict","setRowDistrict","districts","setDistricts","allDistricts","setAllDistricts","selectDistrict","setSelectDistrict","district","setDistrict","isOpenDistrict","setIsOpenDistrict","isDistrictNameError","setIsDistrictNameError","districtNameErrorMsg","setDistrictNameErrorMsg","isStateIdError","setIsStateIdError","stateIdErrorMsg","setStateIdErrorMsg","isCheckDistrict","setIsCheckDistrict","isLoadingCity","setIsLoadingCity","pageCity","setPageCity","limitCity","setLimitCity","rowCity","setRowCity","cities","setCities","selectCity","setSelectCity","city","setCity","isOpenCity","setIsOpenCity","isCityNameError","setIsCityNameError","cityNameErrorMsg","setCityNameErrorMsg","isPincodeError","setIsPincodeError","pincodeErrorMsg","setPincodeErrorMsg","isDistrictIdError","setIsDistrictIdError","districtIdErrorMsg","setDistrictIdErrorMsg","isCheckCity","setIsCheckCity","credentail","setCredentail","downloadSample","setDownloadSample","regionData","setRegionData","inputFile","useRef","fileReader","FileReader","isReadPermission","setIsReadPermission","isWritePermission","setIsWritePermission","isEditPermission","setIsEditPermission","isDeletePermission","setIsDeletePermission","showSnackBar","SnackbarComponent","useSnackbar","useEffect","cred","JSON","parse","localStorage","getItem","roleId","ind","pagePermissions","findIndex","c","isAddPermission","loadData","async","getCountry","getState","getDistrict","getCity","startIndex","fetchRecord","token","refreshToken","obj","res","APIservice","httpPost","recordList","length","i","totalRecords","res1","status","clear","toast","error","message","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","POSITION","TOP_RIGHT","handleClickCloseCountryDialog","clearCountryError","handleInputChange","arr","value","target","savecountry","e","preventDefault","validateCountry","flag","handleCloseSwitchCountry","handleClickCloseStateDialog","clearStateError","handleInputStateChange","saveState","handleCloseSwitchState","handleSwitchStateCheck","handleClickCloseDistrictDialog","clearDistrictError","handleInputDistrictChange","saveDistrict","validateDistrict","handleCloseSwitchDistrict","handleClickCloseCityDialog","clearCityError","handleInputCityChange","saveCity","validateCity","handleCloseSwitchCity","handleClickDownloadSample","cityId","cityName","handleClickDownloadRegion","csvData","ConvertToCSV","blob","Blob","type","dwldLink","document","createElement","url","URL","createObjectURL","navigator","userAgent","indexOf","setAttribute","fileName","Date","getDate","getMonth","getFullYear","getTime","visibility","body","appendChild","click","removeChild","data","fields","array","str","index","slice","line","console","log","handleClickUploadRegion","current","ToastContainer","newestOnTop","rtl","pauseOnFocusLoss","Helmet","PageTitleWrapper","Grid","container","justifyContent","alignItems","item","Stack","Breadcrumbs","Link","to","display","HomeIcon","Typography","variant","_Fragment","Button","mt","xs","md","size","CSVLink","filename","background","colors","primary","lighter","textDecoration","CloudDownloadIcon","ref","accept","onChange","file","files","onload","lines","result","toString","split","headers","currentLine","j","trim","push","readAsText","checkIsDemoUser","CloudUploadIcon","Card","lg","sm","borderRight","RegionLoader","TableContainer","Table","stickyHeader","TableHead","TableRow","TableCell","align","AddIcon","TableBody","map","labelId","isItemSelected","hover","role","tabIndex","cursor","selected","_ind","handleLoadState","noWrap","textTransform","Checkbox","checked","inputProps","Tooltip","arrow","Switch","Boolean","handleSwitchCountry","handleClickOpenEditCountryDialog","EditTwoToneIcon","TablePagination","component","count","onPageChange","handlePageChange","event","newPage","onRowsPerPageChange","parseInt","rowsPerPage","rowsPerPageOptions","colSpan","handleLoadDistrict","marginLeft","marginTop","handleSwitchState","handleClickOpenEditStateDialog","handleStatePageChange","handleLoadCity","handleSwitchDistrict","handleClickOpenEditDistrictDialog","handleDistrictPageChange","handleSwitchCity","obj2","res2","handleClickOpenEditCityDialog","handleCityPageChange","open","fullWidth","DialogContent","DialogContentText","letterSpacing","DialogActions","marginRight","disabled","isDemoAdmin","height","dividers","TextField","autoFocus","margin","label","validateName","required","FormHelperText","validateIsoCode","validateIso3Code","validateCountryDialCode","FormControl","InputLabel","Select","multiple","validateStateCountryId","MenuItem","validateStateName","validateDistrictCountryId","validateDistrictStateId","validateDistrictName","validateCityCountryId","validateCityStateId","validateDistrictId","validateCityName","validateCityPincode","paddingTop","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d","opacity","createSvgIcon","getCheckboxUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","CheckboxRoot","SwitchBase","shouldForwardProp","prop","rootShouldForwardProp","overridesResolver","styles","ownerState","root","indeterminate","capitalize","_extends","vars","text","secondary","disableRipple","backgroundColor","action","activeChannel","mainChannel","hoverOpacity","alpha","active","main","checkboxClasses","defaultCheckedIcon","CheckBoxIcon","defaultIcon","CheckBoxOutlineBlankIcon","defaultIndeterminateIcon","IndeterminateCheckBoxIcon","React","inProps","_icon$props$fontSize","_indeterminateIcon$pr","useDefaultProps","checkedIcon","icon","iconProp","indeterminateIcon","indeterminateIconProp","_objectWithoutPropertiesLoose","classes","slots","composedClasses","composeClasses","useUtilityClasses","clsx","getDialogContentTextUtilityClass","DialogContentTextRoot","getSwitchUtilityClass","SwitchRoot","edge","overflow","boxSizing","flexShrink","zIndex","verticalAlign","colorAdjust","variants","switchClasses","thumb","switchBase","transform","SwitchSwitchBase","input","left","defaultColor","mode","common","white","transition","transitions","create","duration","shortest","defaultDisabledColor","track","switchTrackDisabled","Object","entries","filter","_ref3","light","_ref4","lighten","darken","SwitchTrack","_ref5","borderRadius","onBackground","black","switchTrack","SwitchThumb","_ref6","boxShadow","shadows","getSwitchBaseUtilityClass","SwitchBaseRoot","ButtonBase","SwitchBaseInput","checkedProp","defaultChecked","disabledProp","disableFocusRipple","inputRef","onBlur","onFocus","readOnly","setCheckedState","useControlled","controlled","muiFormControl","useFormControl","hasLabelFor","centerRipple","focusRipple","nativeEvent","defaultPrevented","newChecked"],"sourceRoot":""}