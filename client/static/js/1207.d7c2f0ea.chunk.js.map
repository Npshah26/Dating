{"version":3,"file":"static/js/1207.d7c2f0ea.chunk.js","mappings":"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","sources":["components/PageTitleWrapper/index.tsx","content/Loader.tsx","content/Weight/Weight.tsx","../node_modules/@mui/icons-material/Search.js","../node_modules/@mui/material/TableHead/tableHeadClasses.js","../node_modules/@mui/material/TableHead/TableHead.js","../node_modules/@mui/material/Table/tableClasses.js","../node_modules/@mui/material/Table/Table.js"],"sourcesContent":["import { FC, ReactNode } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Box, Container, styled } from '@mui/material';\r\n\r\nconst PageTitle = styled(Box)(\r\n  ({ theme }) => `\r\n        padding: ${theme.spacing(1)};\r\n`\r\n);\r\n\r\ninterface PageTitleWrapperProps {\r\n  children?: ReactNode;\r\n}\r\n\r\nconst PageTitleWrapper: FC<PageTitleWrapperProps> = ({ children }) => {\r\n  return (\r\n    <PageTitle className=\"MuiPageTitle-wrapper\">\r\n      <Container maxWidth=\"lg\">{children}</Container>\r\n    </PageTitle>\r\n  );\r\n};\r\n\r\nPageTitleWrapper.propTypes = {\r\n  children: PropTypes.node.isRequired\r\n};\r\n\r\nexport default PageTitleWrapper;\r\n","import React from 'react';\r\nimport './Loader.css';\r\n\r\ninterface Props {\r\n  title: string;\r\n}\r\n\r\nconst Loader1 = (props: Props) => {\r\n  const { title } = props;\r\n  return (\r\n    // <div className=\"loader\">\r\n    //     <img className=\"img\" src={loader} alt=\"\" />\r\n    //     <span>{title}</span>\r\n    // </div>\r\n    <div className=\"spinner-container\">\r\n      <div className=\"loading-spinner\"></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loader1;\r\n","import { Helmet } from 'react-helmet-async';\r\nimport PageTitleWrapper from 'src/components/PageTitleWrapper';\r\nimport {\r\n  Grid,\r\n  Container,\r\n  Box,\r\n  Breadcrumbs,\r\n  Button,\r\n  Card,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n  Divider,\r\n  FormHelperText,\r\n  IconButton,\r\n  Stack,\r\n  styled,\r\n  Switch,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  TextField,\r\n  Tooltip,\r\n  Typography,\r\n  useTheme,\r\n  FormControl,\r\n  InputAdornment,\r\n  Paper\r\n} from '@mui/material';\r\nimport EditTwoToneIcon from '@mui/icons-material/EditTwoTone';\r\nimport AddTwoToneIcon from '@mui/icons-material/AddTwoTone';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport HomeIcon from '@mui/icons-material/Home';\r\nimport Footer from 'src/components/Footer';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport React, { useState, ChangeEvent } from 'react';\r\nimport APIservice from 'src/utils/APIservice';\r\nimport Loader1 from '../Loader';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport '../smallScreen.css';\r\nimport de from 'date-fns/esm/locale/de/index.js';\r\nimport checkIsDemoUser from 'src/utils/IsDemoUserCheck';\r\nimport { useSnackbar } from '../useSnackbar';\r\n\r\nconst BootstrapDialog = styled(Dialog)(({ theme }) => ({\r\n  '& .MuiDialogContent-root': {\r\n    padding: theme.spacing(2)\r\n  },\r\n  '& .MuiDialogActions-root': {\r\n    padding: theme.spacing(1)\r\n  },\r\n  '& .MuiPaper-root': {\r\n    height: '260px'\r\n  }\r\n}));\r\n\r\nexport interface DialogTitleProps {\r\n  id: string;\r\n  children?: React.ReactNode;\r\n  onClose: () => void;\r\n}\r\n\r\nfunction BootstrapDialogTitle(props: DialogTitleProps) {\r\n  const { children, onClose, ...other } = props;\r\n\r\n  return (\r\n    <DialogTitle\r\n      sx={{ m: 0, p: 2, fontSize: '18px', fontWeight: 'bold' }}\r\n      {...other}\r\n    >\r\n      {children}\r\n      {onClose ? (\r\n        <IconButton\r\n          aria-label=\"close\"\r\n          onClick={onClose}\r\n          sx={{\r\n            position: 'absolute',\r\n            right: 13,\r\n            top: 13,\r\n            color: (theme) => theme.palette.grey[500]\r\n          }}\r\n        >\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </DialogTitle>\r\n  );\r\n}\r\n\r\nconst initialState = {\r\n  id: 0,\r\n  name: ''\r\n};\r\n\r\nfunction Weight() {\r\n  const [page, setPage] = useState<number>(0);\r\n  const [limit, setLimit] = useState<number>(10);\r\n  const [row, setRow] = useState<number>(10);\r\n  const [weights, setWeights] = React.useState<any>([]);\r\n  const [isOpen, setIsOpen] = React.useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [weight, setWeight] = React.useState<any>(initialState);\r\n  const [isNameError, setNameError] = useState(false);\r\n  const [NameErrorMsg, setNameErrorMsg] = useState('');\r\n  const [ischeck, setIsCheck] = useState(false);\r\n  const [isWeightError, setWeightError] = useState(false);\r\n  const [WeightErrorMsg, setWeightErrorMsg] = useState('');\r\n  let [search, setSearch] = useState('');\r\n  const navigate = useNavigate();\r\n  let [credentail, setCredentail] = useState<any>();\r\n\r\n  const [isReadPermission, setIsReadPermission] = useState(true);\r\n  const [isWritePermission, setIsWritePermission] = useState(true);\r\n  const [isEditPermission, setIsEditPermission] = useState(true);\r\n  const [isDeletePermission, setIsDeletePermission] = useState(true);\r\n\r\n  const { showSnackBar, SnackbarComponent } = useSnackbar();\r\n\r\n  // window.onpopstate = () => {\r\n  //   navigate(-1);\r\n  // }\r\n\r\n  React.useEffect(() => {\r\n    let cred = JSON.parse(localStorage.getItem('Credentials'));\r\n    setCredentail(cred);\r\n    if (cred) {\r\n      if (cred.roleId != 1) {\r\n        let ind = cred.pagePermissions.findIndex(\r\n          (c: any) => c.title === 'Block Users'\r\n        );\r\n        if (ind >= 0) {\r\n          setIsReadPermission(cred.pagePermissions[ind].isReadPermission);\r\n          setIsWritePermission(cred.pagePermissions[ind].isAddPermission);\r\n          setIsEditPermission(cred.pagePermissions[ind].isEditPermission);\r\n          setIsDeletePermission(cred.pagePermissions[ind].isDeletePermission);\r\n\r\n          if (cred.pagePermissions[ind].isReadPermission) loadData();\r\n        }\r\n      } else {\r\n        loadData();\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  const loadData = async () => {\r\n    getData(page, limit);\r\n    setIsOpen(false);\r\n  };\r\n\r\n  // const reg = new RegExp('^(\\\\d{1,3}(\\\\.\\\\d{0,3})?|\\\\.\\\\d{1,3})$');\r\n  const reg = new RegExp('^[0-9]{1,3}$');\r\n\r\n  const validateName = (arr: any) => {\r\n    const { name, value } = arr.target;\r\n    if (value) {\r\n      if (reg.test(arr.target.value)) {\r\n        setNameError(false);\r\n        setNameErrorMsg('');\r\n      } else {\r\n        setNameError(true);\r\n        setNameErrorMsg('Weight is not valid ');\r\n      }\r\n    } else {\r\n      setNameError(true);\r\n      setNameErrorMsg('Weight is required');\r\n    }\r\n  };\r\n\r\n  const validateForm = (e: any) => {\r\n    e?.preventDefault();\r\n    var flag = true;\r\n    if (!weight.name) {\r\n      setNameError(true);\r\n      setNameErrorMsg('Weight is required');\r\n      flag = false;\r\n    } else {\r\n      if (reg.test(weight.name)) {\r\n        setNameError(false);\r\n        setNameErrorMsg('');\r\n        flag = true;\r\n      } else {\r\n        setNameError(true);\r\n        setNameErrorMsg('Only 3 digit numbers allowed');\r\n        flag = false;\r\n      }\r\n    }\r\n    return flag;\r\n  };\r\n\r\n  const handleCloseWeightDailog = () => {\r\n    setIsOpen(false);\r\n  };\r\n\r\n  const handleClickisAdd = async () => {\r\n    setWeight(initialState);\r\n    setNameError(false);\r\n    setNameErrorMsg('');\r\n    setIsOpen(true);\r\n    setWeightError(false);\r\n    setWeightErrorMsg('');\r\n  };\r\n\r\n  const handleClickisEdit = (no: number, st: string) => {\r\n    let obj = {\r\n      id: no,\r\n      name: st\r\n    };\r\n    setWeight(obj);\r\n    setNameError(false);\r\n    setNameErrorMsg('');\r\n    setWeightError(false);\r\n    setWeightErrorMsg('');\r\n    setIsOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setIsCheck(false);\r\n  };\r\n\r\n  const handleSwitch = async (id: number, status: number) => {\r\n    let obj = {\r\n      id: id,\r\n      status: status\r\n    };\r\n    setWeight(obj);\r\n    setIsCheck(true);\r\n  };\r\n\r\n  const handleSwitchCheck = async () => {\r\n    const token = localStorage.getItem('SessionToken');\r\n    const refreshToken = localStorage.getItem('RefreshToken');\r\n    let obj = {\r\n      id: weight.id\r\n    };\r\n    const res = await APIservice.httpPost(\r\n      '/api/admin/weight/activeInactiveWeight',\r\n      obj,\r\n      token,\r\n      refreshToken\r\n    );\r\n    setIsCheck(false);\r\n    getData(page * limit, limit);\r\n  };\r\n\r\n  const WeightDialog = (arr: any) => {\r\n    const { name, value } = arr.target;\r\n    setWeight({ ...weight, [name]: value });\r\n    setIsOpen(true);\r\n    setWeightError(false);\r\n    setWeightErrorMsg('');\r\n  };\r\n\r\n  const getData = async (startIndex: number, fetchRecord: number) => {\r\n    try {\r\n      if (search) {\r\n        const token = localStorage.getItem('SessionToken');\r\n        const refreshToken = localStorage.getItem('RefreshToken');\r\n        let obj = {\r\n          startIndex: startIndex,\r\n          fetchRecord: fetchRecord,\r\n          name: search ? search : ''\r\n        };\r\n        const res = await APIservice.httpPost(\r\n          '/api/admin/weight/getWeight',\r\n          obj,\r\n          token,\r\n          refreshToken\r\n        );\r\n        setWeights(res.recordList);\r\n        setRow(res.totalRecords);\r\n      } else {\r\n        setIsLoading(true);\r\n        const token = localStorage.getItem('SessionToken');\r\n        const refreshToken = localStorage.getItem('RefreshToken');\r\n        let obj = {\r\n          startIndex: startIndex,\r\n          fetchRecord: fetchRecord\r\n        };\r\n        const res = await APIservice.httpPost(\r\n          '/api/admin/weight/getWeight',\r\n          obj,\r\n          token,\r\n          refreshToken\r\n        );\r\n        setWeights(res.recordList);\r\n        setRow(res.totalRecords);\r\n        if (res && res.status == 200) {\r\n          setIsOpen(false);\r\n        } else if (res.status == 401) {\r\n          localStorage.clear();\r\n          navigate('/admin');\r\n        } else if (res.status == 500) {\r\n          setIsOpen(false);\r\n          toast.error(res.message, {\r\n            autoClose: 6000,\r\n            hideProgressBar: true,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n            theme: 'colored',\r\n            position: toast.POSITION.TOP_RIGHT\r\n          });\r\n        } else if (res.status == 400) {\r\n          setIsOpen(false);\r\n          toast.error(res.message, {\r\n            autoClose: 6000,\r\n            hideProgressBar: true,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n            theme: 'colored',\r\n            position: toast.POSITION.TOP_RIGHT\r\n          });\r\n        } else if (res.status == 300) {\r\n          setIsOpen(false);\r\n          toast.error(res.message, {\r\n            autoClose: 6000,\r\n            hideProgressBar: true,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n            theme: 'colored',\r\n            position: toast.POSITION.TOP_RIGHT\r\n          });\r\n        } else if (res.status == 404) {\r\n          setIsOpen(false);\r\n          toast.error(res.message, {\r\n            autoClose: 6000,\r\n            hideProgressBar: true,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n            theme: 'colored',\r\n            position: toast.POSITION.TOP_RIGHT\r\n          });\r\n        }\r\n        setIsLoading(false);\r\n      }\r\n    } catch (error) {\r\n      setIsOpen(false);\r\n      toast.error(error, {\r\n        autoClose: 6000,\r\n        hideProgressBar: true,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: 'colored',\r\n        position: toast.POSITION.TOP_RIGHT\r\n      });\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const saveWeight = async (e: any) => {\r\n    debugger;\r\n    var flag = validateForm(e);\r\n    if (flag) {\r\n      try {\r\n        if (weight.id) {\r\n          const token = localStorage.getItem('SessionToken');\r\n          const refreshToken = localStorage.getItem('RefreshToken');\r\n          let val = { id: weight.id, name: weight.name };\r\n          const res = await APIservice.httpPost(\r\n            '/api/admin/weight/insertUpdateWeight',\r\n            val,\r\n            token,\r\n            refreshToken\r\n          );\r\n          if (res && res.status == 200) {\r\n            getData(page * limit, limit);\r\n            setIsOpen(false);\r\n          } else if (res.status == 401) {\r\n            localStorage.clear();\r\n            navigate('/admin');\r\n          } else if (res.status == 400) {\r\n            setIsOpen(false);\r\n            toast.error(res.message, {\r\n              autoClose: 6000,\r\n              hideProgressBar: true,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              draggable: true,\r\n              progress: undefined,\r\n              theme: 'colored',\r\n              position: toast.POSITION.TOP_RIGHT\r\n            });\r\n          } else if (res.status == 203) {\r\n            setWeightError(true);\r\n            setWeightErrorMsg('Weight already exists!');\r\n          } else if (res.status == 500) {\r\n            setIsOpen(false);\r\n            toast.error(res.message, {\r\n              autoClose: 6000,\r\n              hideProgressBar: true,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              draggable: true,\r\n              progress: undefined,\r\n              theme: 'colored',\r\n              position: toast.POSITION.TOP_RIGHT\r\n            });\r\n          } else if (res.status == 300) {\r\n            setIsOpen(false);\r\n            toast.error(res.message, {\r\n              autoClose: 6000,\r\n              hideProgressBar: true,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              draggable: true,\r\n              progress: undefined,\r\n              theme: 'colored',\r\n              position: toast.POSITION.TOP_RIGHT\r\n            });\r\n          } else if (res.status == 404) {\r\n            setIsOpen(false);\r\n            toast.error(res.message, {\r\n              autoClose: 6000,\r\n              hideProgressBar: true,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              draggable: true,\r\n              progress: undefined,\r\n              theme: 'colored',\r\n              position: toast.POSITION.TOP_RIGHT\r\n            });\r\n          }\r\n        } else {\r\n          const token = localStorage.getItem('SessionToken');\r\n          const refreshToken = localStorage.getItem('RefreshToken');\r\n          const res = await APIservice.httpPost(\r\n            '/api/admin/weight/insertUpdateWeight',\r\n            weight,\r\n            token,\r\n            refreshToken\r\n          );\r\n          if (res && res.status == 200) {\r\n            setPage(0);\r\n            setIsOpen(false);\r\n            getData(0, limit);\r\n          } else if (res.status == 401) {\r\n            localStorage.clear();\r\n            navigate('/admin');\r\n          } else if (res.status == 400) {\r\n            setIsOpen(false);\r\n            toast.error(res.message, {\r\n              autoClose: 6000,\r\n              hideProgressBar: true,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              draggable: true,\r\n              progress: undefined,\r\n              theme: 'colored',\r\n              position: toast.POSITION.TOP_RIGHT\r\n            });\r\n          } else if (res.status == 203) {\r\n            setWeightError(true);\r\n            setWeightErrorMsg('Weight already exists!');\r\n          } else if (res.status == 500) {\r\n            setIsOpen(false);\r\n            toast.error(res.message, {\r\n              autoClose: 6000,\r\n              hideProgressBar: true,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              draggable: true,\r\n              progress: undefined,\r\n              theme: 'colored',\r\n              position: toast.POSITION.TOP_RIGHT\r\n            });\r\n          } else if (res.status == 300) {\r\n            setIsOpen(false);\r\n            toast.error(res.message, {\r\n              autoClose: 6000,\r\n              hideProgressBar: true,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              draggable: true,\r\n              progress: undefined,\r\n              theme: 'colored',\r\n              position: toast.POSITION.TOP_RIGHT\r\n            });\r\n          } else if (res.status == 404) {\r\n            setIsOpen(false);\r\n            toast.error(res.message, {\r\n              autoClose: 6000,\r\n              hideProgressBar: true,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              draggable: true,\r\n              progress: undefined,\r\n              theme: 'colored',\r\n              position: toast.POSITION.TOP_RIGHT\r\n            });\r\n          }\r\n        }\r\n      } catch (error: any) {\r\n        setIsOpen(false);\r\n        toast.error(error, {\r\n          autoClose: 6000,\r\n          hideProgressBar: true,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: 'colored',\r\n          position: toast.POSITION.TOP_RIGHT\r\n        });\r\n        setIsLoading(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  const searchData = (e) => {\r\n    setSearch(e.target.value);\r\n    search = e.target.value;\r\n    getData(page, limit);\r\n  };\r\n\r\n  const handlePageChange = (event: any, newPage: number): void => {\r\n    setPage(newPage);\r\n    getData(newPage * limit, limit);\r\n  };\r\n\r\n  const handleLimitChange = (event: ChangeEvent<HTMLInputElement>): void => {\r\n    setLimit(parseInt(event.target.value));\r\n    setPage(0);\r\n    getData(0, parseInt(event.target.value));\r\n  };\r\n\r\n  const theme = useTheme();\r\n\r\n  return (\r\n    <>\r\n      <SnackbarComponent />\r\n      <ToastContainer\r\n        style={{ top: '10%', left: '80%' }}\r\n        autoClose={6000}\r\n        hideProgressBar={true}\r\n        newestOnTop={false}\r\n        closeOnClick\r\n        rtl={false}\r\n        pauseOnFocusLoss\r\n        draggable\r\n        pauseOnHover\r\n      />\r\n      <Helmet>\r\n        <title>Weight</title>\r\n      </Helmet>\r\n      <PageTitleWrapper>\r\n        <Box p={1}>\r\n          <Grid container justifyContent=\"space-between\" alignItems=\"center\">\r\n            <Grid item>\r\n              <Stack alignItems=\"left\" justifyContent=\"space-between\">\r\n                <Breadcrumbs aria-label=\"breadcrumb\">\r\n                  <Link\r\n                    to=\"/admin/dashboard\"\r\n                    style={{ display: 'flex', color: 'black' }}\r\n                  >\r\n                    <HomeIcon />\r\n                  </Link>\r\n                  <Typography\r\n                    color=\"inherit\"\r\n                    variant=\"subtitle2\"\r\n                    fontWeight=\"bold\"\r\n                  >\r\n                    Weight\r\n                  </Typography>\r\n                </Breadcrumbs>\r\n              </Stack>\r\n            </Grid>\r\n            <Grid item>\r\n              <Grid container spacing={1.5}>\r\n                <Grid item>\r\n                  {isWritePermission ? (\r\n                    <>\r\n                      <Button\r\n                        className=\"buttonLarge\"\r\n                        sx={{\r\n                          mt: {\r\n                            xs: 0,\r\n                            md: 0,\r\n                            display: 'flex',\r\n                            alignItems: 'center',\r\n                            padding: '8.3px',\r\n                            top: '3px'\r\n                          }\r\n                        }}\r\n                        variant=\"contained\"\r\n                        onClick={handleClickisAdd}\r\n                        size=\"small\"\r\n                      >\r\n                        <AddTwoToneIcon fontSize=\"small\" />\r\n                        Create Weight\r\n                      </Button>\r\n                      <Button\r\n                        className=\"button\"\r\n                        sx={{\r\n                          mt: {\r\n                            xs: 0,\r\n                            md: 0,\r\n                            display: 'flex',\r\n                            alignItems: 'center',\r\n                            padding: '8.3px',\r\n                            top: '3px'\r\n                          }\r\n                        }}\r\n                        variant=\"contained\"\r\n                        onClick={handleClickisAdd}\r\n                        size=\"small\"\r\n                      >\r\n                        <AddTwoToneIcon fontSize=\"small\" />\r\n                      </Button>\r\n                    </>\r\n                  ) : (\r\n                    <></>\r\n                  )}\r\n                </Grid>\r\n                <Grid item>\r\n                  <FormControl\r\n                    sx={{ mt: { xs: 0.3, md: 0.3, lg: 0.3, sm: 0.3 } }}\r\n                  >\r\n                    <TextField\r\n                      name=\"searchString\"\r\n                      value={search}\r\n                      onChange={(e) => searchData(e)}\r\n                      id=\"outlined-basic\"\r\n                      label=\"Search\"\r\n                      variant=\"outlined\"\r\n                      size=\"small\"\r\n                      InputProps={{\r\n                        startAdornment: (\r\n                          <InputAdornment position=\"start\">\r\n                            <SearchIcon />\r\n                          </InputAdornment>\r\n                        )\r\n                      }}\r\n                    />\r\n                  </FormControl>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </Box>\r\n      </PageTitleWrapper>\r\n      <Container maxWidth=\"lg\">\r\n        <Grid\r\n          container\r\n          direction=\"row\"\r\n          justifyContent=\"center\"\r\n          alignItems=\"stretch\"\r\n          spacing={3}\r\n        >\r\n          <Grid item xs={12}>\r\n            <>\r\n              <Card className=\"heightcard\">\r\n                <div>\r\n                  {isLoading ? (\r\n                    <Loader1 title=\"Loading...\" />\r\n                  ) : (\r\n                    <>\r\n                      <Divider />\r\n                      {weights && weights.length > 0 ? (\r\n                        <>\r\n                          <TableContainer className=\"heighttableContainer\">\r\n                            <Table stickyHeader>\r\n                              <TableHead>\r\n                                <TableRow>\r\n                                  <TableCell>\r\n                                    <Typography\r\n                                      noWrap\r\n                                      style={{\r\n                                        fontSize: '13px',\r\n                                        fontWeight: 'bold',\r\n                                        marginBottom: 'none'\r\n                                      }}\r\n                                    >\r\n                                      Sr. NO\r\n                                    </Typography>\r\n                                  </TableCell>\r\n                                  <TableCell align=\"center\">\r\n                                    <Typography\r\n                                      noWrap\r\n                                      style={{\r\n                                        fontSize: '13px',\r\n                                        fontWeight: 'bold',\r\n                                        marginBottom: 'none'\r\n                                      }}\r\n                                    >\r\n                                      Weight in kg\r\n                                    </Typography>\r\n                                  </TableCell>\r\n                                  <TableCell align=\"right\">\r\n                                    <Typography\r\n                                      noWrap\r\n                                      style={{\r\n                                        fontSize: '13px',\r\n                                        fontWeight: 'bold',\r\n                                        marginBottom: 'none'\r\n                                      }}\r\n                                    >\r\n                                      Actions\r\n                                    </Typography>\r\n                                  </TableCell>\r\n                                </TableRow>\r\n                              </TableHead>\r\n                              <TableBody>\r\n                                {weights.map((arr: any, index: number) => {\r\n                                  return (\r\n                                    <TableRow hover key={arr.id}>\r\n                                      <TableCell>\r\n                                        <Typography\r\n                                          variant=\"body1\"\r\n                                          fontWeight=\"bold\"\r\n                                          color=\"text.primary\"\r\n                                          gutterBottom\r\n                                          noWrap\r\n                                        >\r\n                                          {page * limit + index + 1}\r\n                                        </Typography>\r\n                                      </TableCell>\r\n                                      <TableCell align=\"center\">\r\n                                        <Typography\r\n                                          variant=\"body1\"\r\n                                          fontWeight=\"bold\"\r\n                                          color=\"text.primary\"\r\n                                          gutterBottom\r\n                                          noWrap\r\n                                        >\r\n                                          {arr.name} kg\r\n                                        </Typography>\r\n                                      </TableCell>\r\n                                      <TableCell align=\"right\">\r\n                                        {isEditPermission ? (\r\n                                          <>\r\n                                            <Tooltip\r\n                                              title={\r\n                                                arr.isActive === 0\r\n                                                  ? 'Inactive'\r\n                                                  : 'Active'\r\n                                              }\r\n                                              arrow\r\n                                            >\r\n                                              <Switch\r\n                                                // disabled={credentail?.isDemoAdmin}\r\n                                                checked={\r\n                                                  arr.isActive === 0\r\n                                                    ? false\r\n                                                    : true\r\n                                                }\r\n                                                onClick={(e) =>\r\n                                                  checkIsDemoUser(\r\n                                                    () =>\r\n                                                      handleSwitch(\r\n                                                        arr.id,\r\n                                                        arr.isActive\r\n                                                      ),\r\n                                                    showSnackBar\r\n                                                  )()\r\n                                                }\r\n                                                inputProps={{\r\n                                                  'aria-label': 'controlled'\r\n                                                }}\r\n                                              />\r\n                                            </Tooltip>\r\n                                            <Tooltip title=\"Edit \" arrow>\r\n                                              <IconButton\r\n                                                // disabled={credentail?.isDemoAdmin}\r\n                                                sx={{\r\n                                                  '&:hover': {\r\n                                                    background:\r\n                                                      theme.colors.error.lighter\r\n                                                  },\r\n                                                  color:\r\n                                                    theme.palette.primary.main\r\n                                                }}\r\n                                                color=\"inherit\"\r\n                                                size=\"small\"\r\n                                                onClick={(e) =>\r\n                                                  handleClickisEdit(\r\n                                                    arr.id,\r\n                                                    arr.name\r\n                                                  )\r\n                                                }\r\n                                              >\r\n                                                <EditTwoToneIcon fontSize=\"small\" />\r\n                                              </IconButton>\r\n                                            </Tooltip>\r\n                                          </>\r\n                                        ) : (\r\n                                          <></>\r\n                                        )}\r\n                                      </TableCell>\r\n                                    </TableRow>\r\n                                  );\r\n                                })}\r\n                              </TableBody>\r\n                            </Table>\r\n                          </TableContainer>\r\n                          <Box p={2}>\r\n                            <TablePagination\r\n                              component=\"div\"\r\n                              count={row}\r\n                              onPageChange={handlePageChange}\r\n                              onRowsPerPageChange={handleLimitChange}\r\n                              page={page}\r\n                              rowsPerPage={limit}\r\n                              rowsPerPageOptions={[10, 20, 30, 40]}\r\n                            />\r\n                          </Box>\r\n                        </>\r\n                      ) : (\r\n                        <Paper\r\n                          sx={{\r\n                            display: 'flex',\r\n                            justifyContent: 'center',\r\n                            alignItems: 'center',\r\n                            textAlign: 'center',\r\n                            verticalAlign: 'middle',\r\n                            boxShadow: 'none'\r\n                          }}\r\n                          className=\"heightcard\"\r\n                        >\r\n                          <Typography variant=\"h5\" paragraph>\r\n                            Data not Found\r\n                          </Typography>\r\n                        </Paper>\r\n                      )}\r\n                    </>\r\n                  )}\r\n                </div>\r\n              </Card>\r\n\r\n              <div>\r\n                <Dialog\r\n                  open={ischeck}\r\n                  onClose={handleClose}\r\n                  fullWidth\r\n                  maxWidth=\"xs\"\r\n                >\r\n                  <DialogTitle\r\n                    sx={{ m: 0, p: 2, fontSize: '20px', fontWeight: 'bolder' }}\r\n                  >\r\n                    {weight.status === 0 ? 'Inactive' : 'Active'}\r\n                  </DialogTitle>\r\n                  <DialogContent>\r\n                    <DialogContentText\r\n                      style={{ fontSize: '1rem', letterSpacing: '0.00938em' }}\r\n                    >\r\n                      {weight.status === 0\r\n                        ? 'Are you sure you want to Active?'\r\n                        : 'Are you sure you want to Inactive?'}\r\n                    </DialogContentText>\r\n                  </DialogContent>\r\n                  <DialogActions>\r\n                    <Button\r\n                      onClick={handleClose}\r\n                      variant=\"outlined\"\r\n                      style={{ marginRight: '10px' }}\r\n                    >\r\n                      Cancel\r\n                    </Button>\r\n                    <Button\r\n                      disabled={credentail?.isDemoAdmin}\r\n                      onClick={handleSwitchCheck}\r\n                      variant=\"outlined\"\r\n                      style={{ marginRight: '10px' }}\r\n                    >\r\n                      Yes\r\n                    </Button>\r\n                  </DialogActions>\r\n                </Dialog>\r\n              </div>\r\n\r\n              <div>\r\n                <BootstrapDialog\r\n                  open={isOpen}\r\n                  onClose={handleCloseWeightDailog}\r\n                  PaperProps={{ sx: { height: '40%' } }}\r\n                  fullWidth\r\n                  maxWidth=\"xs\"\r\n                >\r\n                  <BootstrapDialogTitle\r\n                    id=\"customized-dialog-title\"\r\n                    onClose={handleCloseWeightDailog}\r\n                  >\r\n                    {weight.id ? 'Edit Weight' : 'Add Weight'}\r\n                  </BootstrapDialogTitle>\r\n                  <DialogContent dividers>\r\n                    <SnackbarComponent />\r\n                    <TextField\r\n                      autoFocus\r\n                      margin=\"dense\"\r\n                      id=\"name\"\r\n                      label=\"Weight in kg\"\r\n                      type=\"text\"\r\n                      fullWidth\r\n                      variant=\"outlined\"\r\n                      name=\"name\"\r\n                      value={weight.name}\r\n                      onChange={(arr) => {\r\n                        WeightDialog(arr);\r\n                        validateName(arr);\r\n                      }}\r\n                      required={true}\r\n                    />\r\n                    <FormHelperText style={{ color: 'red', height: '22px' }}>\r\n                      {isNameError && NameErrorMsg}\r\n                    </FormHelperText>\r\n                  </DialogContent>\r\n                  <Box\r\n                    sx={{\r\n                      display: 'flex',\r\n                      justifyContent: 'space-between',\r\n                      p: '8px'\r\n                    }}\r\n                  >\r\n                    <FormHelperText\r\n                      style={{\r\n                        color: 'red',\r\n                        height: '22px',\r\n                        margin: 'none',\r\n                        padding: '8px 0px'\r\n                      }}\r\n                    >\r\n                      {isWeightError && WeightErrorMsg}\r\n                    </FormHelperText>\r\n                    <Typography>\r\n                      <Button\r\n                        onClick={handleCloseWeightDailog}\r\n                        variant=\"outlined\"\r\n                        style={{ marginRight: '10px' }}\r\n                      >\r\n                        Cancel\r\n                      </Button>\r\n                      <Button\r\n                        // disabled={credentail?.isDemoAdmin}\r\n                        onClick={() =>\r\n                          checkIsDemoUser(saveWeight, showSnackBar)()\r\n                        }\r\n                        variant=\"outlined\"\r\n                        style={{ marginRight: '10px' }}\r\n                      >\r\n                        Save\r\n                      </Button>\r\n                    </Typography>\r\n                  </Box>\r\n                </BootstrapDialog>\r\n              </div>\r\n            </>\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n      {/* <Footer /> */}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Weight;\r\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\"\n}), 'Search');\nexports.default = _default;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getTableHeadUtilityClass(slot) {\n  return generateUtilityClass('MuiTableHead', slot);\n}\nconst tableHeadClasses = generateUtilityClasses('MuiTableHead', ['root']);\nexport default tableHeadClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport Tablelvl2Context from '../Table/Tablelvl2Context';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport styled from '../styles/styled';\nimport { getTableHeadUtilityClass } from './tableHeadClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getTableHeadUtilityClass, classes);\n};\nconst TableHeadRoot = styled('thead', {\n  name: 'MuiTableHead',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  display: 'table-header-group'\n});\nconst tablelvl2 = {\n  variant: 'head'\n};\nconst defaultComponent = 'thead';\nconst TableHead = /*#__PURE__*/React.forwardRef(function TableHead(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiTableHead'\n  });\n  const {\n      className,\n      component = defaultComponent\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    component\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(Tablelvl2Context.Provider, {\n    value: tablelvl2,\n    children: /*#__PURE__*/_jsx(TableHeadRoot, _extends({\n      as: component,\n      className: clsx(classes.root, className),\n      ref: ref,\n      role: component === defaultComponent ? null : 'rowgroup',\n      ownerState: ownerState\n    }, other))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? TableHead.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component, normally `TableRow`.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default TableHead;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getTableUtilityClass(slot) {\n  return generateUtilityClass('MuiTable', slot);\n}\nconst tableClasses = generateUtilityClasses('MuiTable', ['root', 'stickyHeader']);\nexport default tableClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"component\", \"padding\", \"size\", \"stickyHeader\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport TableContext from './TableContext';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport styled from '../styles/styled';\nimport { getTableUtilityClass } from './tableClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    stickyHeader\n  } = ownerState;\n  const slots = {\n    root: ['root', stickyHeader && 'stickyHeader']\n  };\n  return composeClasses(slots, getTableUtilityClass, classes);\n};\nconst TableRoot = styled('table', {\n  name: 'MuiTable',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.stickyHeader && styles.stickyHeader];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  display: 'table',\n  width: '100%',\n  borderCollapse: 'collapse',\n  borderSpacing: 0,\n  '& caption': _extends({}, theme.typography.body2, {\n    padding: theme.spacing(2),\n    color: (theme.vars || theme).palette.text.secondary,\n    textAlign: 'left',\n    captionSide: 'bottom'\n  })\n}, ownerState.stickyHeader && {\n  borderCollapse: 'separate'\n}));\nconst defaultComponent = 'table';\nconst Table = /*#__PURE__*/React.forwardRef(function Table(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiTable'\n  });\n  const {\n      className,\n      component = defaultComponent,\n      padding = 'normal',\n      size = 'medium',\n      stickyHeader = false\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    component,\n    padding,\n    size,\n    stickyHeader\n  });\n  const classes = useUtilityClasses(ownerState);\n  const table = React.useMemo(() => ({\n    padding,\n    size,\n    stickyHeader\n  }), [padding, size, stickyHeader]);\n  return /*#__PURE__*/_jsx(TableContext.Provider, {\n    value: table,\n    children: /*#__PURE__*/_jsx(TableRoot, _extends({\n      as: component,\n      role: component === defaultComponent ? null : 'table',\n      ref: ref,\n      className: clsx(classes.root, className),\n      ownerState: ownerState\n    }, other))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Table.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the table, normally `TableHead` and `TableBody`.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * Allows TableCells to inherit padding of the Table.\n   * @default 'normal'\n   */\n  padding: PropTypes.oneOf(['checkbox', 'none', 'normal']),\n  /**\n   * Allows TableCells to inherit size of the Table.\n   * @default 'medium'\n   */\n  size: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.string]),\n  /**\n   * Set the header sticky.\n   *\n   * ⚠️ It doesn't work with IE11.\n   * @default false\n   */\n  stickyHeader: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Table;"],"names":["PageTitle","styled","Box","_ref","theme","spacing","_ref2","children","_jsx","className","Container","maxWidth","props","title","BootstrapDialog","Dialog","padding","height","BootstrapDialogTitle","onClose","other","_jsxs","DialogTitle","sx","m","p","fontSize","fontWeight","IconButton","onClick","position","right","top","color","palette","grey","CloseIcon","initialState","id","name","page","setPage","useState","limit","setLimit","row","setRow","weights","setWeights","React","isOpen","setIsOpen","isLoading","setIsLoading","weight","setWeight","isNameError","setNameError","NameErrorMsg","setNameErrorMsg","ischeck","setIsCheck","isWeightError","setWeightError","WeightErrorMsg","setWeightErrorMsg","search","setSearch","navigate","useNavigate","credentail","setCredentail","isReadPermission","setIsReadPermission","isWritePermission","setIsWritePermission","isEditPermission","setIsEditPermission","isDeletePermission","setIsDeletePermission","showSnackBar","SnackbarComponent","useSnackbar","cred","JSON","parse","localStorage","getItem","roleId","ind","pagePermissions","findIndex","c","isAddPermission","loadData","async","getData","reg","RegExp","handleCloseWeightDailog","handleClickisAdd","handleClose","startIndex","fetchRecord","token","refreshToken","obj","res","APIservice","httpPost","recordList","totalRecords","status","clear","toast","error","message","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","POSITION","TOP_RIGHT","saveWeight","flag","e","preventDefault","test","validateForm","val","useTheme","_Fragment","ToastContainer","style","left","newestOnTop","rtl","pauseOnFocusLoss","Helmet","PageTitleWrapper","Grid","container","justifyContent","alignItems","item","Stack","Breadcrumbs","Link","to","display","HomeIcon","Typography","variant","Button","mt","xs","md","size","AddTwoToneIcon","FormControl","lg","sm","TextField","value","onChange","target","searchData","label","InputProps","startAdornment","InputAdornment","SearchIcon","direction","Card","Loader1","Divider","length","TableContainer","Table","stickyHeader","TableHead","TableRow","TableCell","noWrap","marginBottom","align","TableBody","map","arr","index","hover","gutterBottom","Tooltip","isActive","arrow","Switch","checked","checkIsDemoUser","handleSwitch","inputProps","background","colors","lighter","primary","main","handleClickisEdit","no","st","EditTwoToneIcon","TablePagination","component","count","onPageChange","handlePageChange","event","newPage","onRowsPerPageChange","parseInt","rowsPerPage","rowsPerPageOptions","Paper","textAlign","verticalAlign","boxShadow","paragraph","open","fullWidth","DialogContent","DialogContentText","letterSpacing","DialogActions","marginRight","disabled","isDemoAdmin","PaperProps","dividers","autoFocus","margin","type","WeightDialog","validateName","required","FormHelperText","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d","getTableHeadUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","TableHeadRoot","overridesResolver","styles","root","tablelvl2","defaultComponent","inProps","ref","useDefaultProps","_objectWithoutPropertiesLoose","ownerState","_extends","classes","composeClasses","useUtilityClasses","Tablelvl2Context","Provider","as","clsx","role","getTableUtilityClass","TableRoot","width","borderCollapse","borderSpacing","typography","body2","vars","text","secondary","captionSide","slots","table","TableContext"],"sourceRoot":""}