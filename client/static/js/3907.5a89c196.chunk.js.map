{"version":3,"file":"static/js/3907.5a89c196.chunk.js","mappings":"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","sources":["components/PageTitleWrapper/index.tsx","content/Loader.tsx","content/ProfileFor/ProfileFor.tsx","../node_modules/@mui/icons-material/Search.js","../node_modules/@mui/material/TableHead/tableHeadClasses.js","../node_modules/@mui/material/TableHead/TableHead.js","../node_modules/@mui/material/Table/tableClasses.js","../node_modules/@mui/material/Table/Table.js"],"sourcesContent":["import { FC, ReactNode } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Box, Container, styled } from '@mui/material';\r\n\r\nconst PageTitle = styled(Box)(\r\n  ({ theme }) => `\r\n        padding: ${theme.spacing(1)};\r\n`\r\n);\r\n\r\ninterface PageTitleWrapperProps {\r\n  children?: ReactNode;\r\n}\r\n\r\nconst PageTitleWrapper: FC<PageTitleWrapperProps> = ({ children }) => {\r\n  return (\r\n    <PageTitle className=\"MuiPageTitle-wrapper\">\r\n      <Container maxWidth=\"lg\">{children}</Container>\r\n    </PageTitle>\r\n  );\r\n};\r\n\r\nPageTitleWrapper.propTypes = {\r\n  children: PropTypes.node.isRequired\r\n};\r\n\r\nexport default PageTitleWrapper;\r\n","import React from 'react';\r\nimport './Loader.css';\r\n\r\ninterface Props {\r\n  title: string;\r\n}\r\n\r\nconst Loader1 = (props: Props) => {\r\n  const { title } = props;\r\n  return (\r\n    // <div className=\"loader\">\r\n    //     <img className=\"img\" src={loader} alt=\"\" />\r\n    //     <span>{title}</span>\r\n    // </div>\r\n    <div className=\"spinner-container\">\r\n      <div className=\"loading-spinner\"></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loader1;\r\n","import { Helmet } from 'react-helmet-async';\r\nimport PageTitleWrapper from '../../components/PageTitleWrapper';\r\nimport {\r\n  Grid,\r\n  Container,\r\n  Box,\r\n  Breadcrumbs,\r\n  Button,\r\n  Card,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n  Divider,\r\n  FormHelperText,\r\n  IconButton,\r\n  Stack,\r\n  Switch,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  TextField,\r\n  Tooltip,\r\n  Typography,\r\n  useTheme,\r\n  styled,\r\n  FormControl,\r\n  InputAdornment,\r\n  Paper,\r\n  Checkbox,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  FormLabel,\r\n  RadioGroup,\r\n  FormControlLabel,\r\n  Radio\r\n} from '@mui/material';\r\nimport EditTwoToneIcon from '@mui/icons-material/EditTwoTone';\r\nimport AddTwoToneIcon from '@mui/icons-material/AddTwoTone';\r\nimport HomeIcon from '@mui/icons-material/Home';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport Footer from 'src/components/Footer';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport React, { useState, ChangeEvent } from 'react';\r\nimport Loader1 from '../Loader';\r\nimport APIservice from 'src/utils/APIservice';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport '../smallScreen.css';\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n      width: 250\r\n    }\r\n  }\r\n};\r\n\r\nconst BootstrapDialog = styled(Dialog)(({ theme }) => ({\r\n  '& .MuiDialogContent-root': {\r\n    padding: theme.spacing(2)\r\n  },\r\n  '& .MuiDialogActions-root': {\r\n    padding: theme.spacing(1)\r\n  }\r\n  // '& .MuiPaper-root': {\r\n  //     height: '300px'\r\n  // },\r\n}));\r\n\r\nexport interface DialogTitleProps {\r\n  id: string;\r\n  children?: React.ReactNode;\r\n  onClose: () => void;\r\n}\r\n\r\nfunction BootstrapDialogTitle(props: DialogTitleProps) {\r\n  const { children, onClose, ...other } = props;\r\n\r\n  return (\r\n    <DialogTitle\r\n      sx={{ m: 0, p: 2, fontSize: '18px', fontWeight: 'bold' }}\r\n      {...other}\r\n    >\r\n      {children}\r\n      {onClose ? (\r\n        <IconButton\r\n          aria-label=\"close\"\r\n          onClick={onClose}\r\n          sx={{\r\n            position: 'absolute',\r\n            right: 13,\r\n            top: 13,\r\n            color: (theme) => theme.palette.grey[500]\r\n          }}\r\n        >\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </DialogTitle>\r\n  );\r\n}\r\n\r\nconst initialState = {\r\n  id: 0,\r\n  name: '',\r\n  gender: null\r\n};\r\n\r\nfunction ProfileFor() {\r\n  const [page, setPage] = useState<number>(0);\r\n  const [limit, setLimit] = useState<number>(10);\r\n  const [row, setRow] = useState<number>(10);\r\n  const [profileFor, setProfileFor] = React.useState<any>([]);\r\n  const [v1, setV1] = React.useState<any>(initialState);\r\n  const [isOpen, setIsOpen] = React.useState(false);\r\n  const [isloading, setIsLoading] = useState(false);\r\n  const [ischeck, setIsCheck] = useState(false);\r\n  const [isProfileForError, setIsProfileForErrorError] = useState(false);\r\n  const [profileForErrorMsg, setProfileForErrorMsg] = useState('');\r\n  let [search, setSearch] = useState('');\r\n\r\n  const [isReadPermission, setIsReadPermission] = useState(true);\r\n  const [isWritePermission, setIsWritePermission] = useState(true);\r\n  const [isEditPermission, setIsEditPermission] = useState(true);\r\n  const [isDeletePermission, setIsDeletePermission] = useState(true);\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const [isNameError, setNameError] = useState(false);\r\n  const [NameErrorMsg, setNameErrorMsg] = useState('');\r\n  const [isGenderError, setGenderError] = useState(false);\r\n  const [GenderErrorMsg, setGenderErrorMsg] = useState('');\r\n\r\n  let [credentail, setCredentail] = useState<any>();\r\n\r\n  // window.onpopstate = () => {\r\n  //   navigate(-1);\r\n  // }\r\n\r\n  React.useEffect(() => {\r\n    let cred = JSON.parse(localStorage.getItem('Credentials'));\r\n    setCredentail(cred);\r\n    if (cred) {\r\n      if (cred.roleId != 1) {\r\n        let ind = cred.pagePermissions.findIndex(\r\n          (c: any) => c.title === 'Block Users'\r\n        );\r\n        if (ind >= 0) {\r\n          setIsReadPermission(cred.pagePermissions[ind].isReadPermission);\r\n          setIsWritePermission(cred.pagePermissions[ind].isAddPermission);\r\n          setIsEditPermission(cred.pagePermissions[ind].isEditPermission);\r\n          setIsDeletePermission(cred.pagePermissions[ind].isDeletePermission);\r\n\r\n          if (cred.pagePermissions[ind].isReadPermission) loadData();\r\n        }\r\n      } else {\r\n        loadData();\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  const loadData = async () => {\r\n    await getdata(page, limit);\r\n    setIsOpen(false);\r\n  };\r\n\r\n  const reg = new RegExp(/^[a-zA-Z_ ]+$/);\r\n  const validateName = (arr) => {\r\n    const { name, value } = arr.target;\r\n    if (value) {\r\n      if (reg.test(arr.target.value)) {\r\n        setNameError(false);\r\n        setNameErrorMsg('');\r\n      } else {\r\n        setNameError(true);\r\n        setNameErrorMsg('Alphabet and space allowed');\r\n      }\r\n    } else {\r\n      setNameError(true);\r\n      setNameErrorMsg('Religion is required');\r\n    }\r\n  };\r\n\r\n  const validateGender = (event: ChangeEvent<HTMLInputElement>) => {\r\n    const { name, value } = event.target;\r\n    // if (value) {\r\n    setGenderError(false);\r\n    setGenderErrorMsg('');\r\n    // } else {\r\n    //   setGenderError(true);\r\n    //   setGenderErrorMsg('Gender is required');\r\n    // }\r\n  };\r\n\r\n  const validateForm = (e: any) => {\r\n    e?.preventDefault();\r\n    var flag = true;\r\n    if (!v1.name) {\r\n      setNameError(true);\r\n      setNameErrorMsg('Religion is required');\r\n      flag = false;\r\n    } else {\r\n      if (reg.test(v1.name)) {\r\n        setNameError(false);\r\n        setNameErrorMsg('');\r\n        flag = true;\r\n      } else {\r\n        setNameError(true);\r\n        setNameErrorMsg('Alphabet and space allowed');\r\n        flag = false;\r\n      }\r\n    }\r\n    return flag;\r\n  };\r\n\r\n  const handleCloseReligionDialog = () => {\r\n    setIsOpen(false);\r\n  };\r\n\r\n  const handleClickisAdd = async () => {\r\n    setV1(initialState);\r\n    setIsOpen(true);\r\n    setNameError(false);\r\n    setNameErrorMsg('');\r\n    setGenderError(false);\r\n    setGenderErrorMsg('');\r\n    setIsProfileForErrorError(false);\r\n    setProfileForErrorMsg('');\r\n  };\r\n\r\n  const handleClickisEdit = (no: number, st: string, gender?: string) => {\r\n    let obj = {\r\n      id: no,\r\n      name: st,\r\n      gender: gender\r\n    };\r\n    setV1(obj);\r\n    setIsOpen(true);\r\n    setNameError(false);\r\n    setNameErrorMsg('');\r\n    setGenderError(false);\r\n    setGenderErrorMsg('');\r\n    setIsProfileForErrorError(false);\r\n    setProfileForErrorMsg('');\r\n  };\r\n\r\n  const editReligionDialog = (arr: any) => {\r\n    setV1(arr);\r\n    setIsOpen(true);\r\n  };\r\n\r\n  const handleSwitch = async (id: number, status: number) => {\r\n    let obj = {\r\n      id: id,\r\n      status: status\r\n    };\r\n    setV1(obj);\r\n    setIsCheck(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setIsCheck(false);\r\n  };\r\n\r\n  const handleSwitchCheck = async () => {\r\n    const token = localStorage.getItem('SessionToken');\r\n    const refreshToken = localStorage.getItem('RefreshToken');\r\n    let obj = {\r\n      id: v1.id\r\n    };\r\n    const res = await APIservice.httpPost(\r\n      '/api/admin/profileFor/activeInactiveProfileFor',\r\n      obj,\r\n      token,\r\n      refreshToken\r\n    );\r\n    setIsCheck(false);\r\n    getdata(page * limit, limit);\r\n  };\r\n\r\n  const handleInputChange = (arr: any) => {\r\n    const { name, value } = arr.target;\r\n    setV1({ ...v1, [name]: value });\r\n    setIsOpen(true);\r\n  };\r\n\r\n  // const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n  //     //setChecked(event.target.checked);\r\n  //     const name = event.target.name;\r\n  //     setV1({ ...v1, [name]: event.target.checked});\r\n  //     setIsOpen(true);\r\n  // };\r\n\r\n  const getdata = async (startIndex: number, fetchRecord: number) => {\r\n    debugger;\r\n    try {\r\n      if (search) {\r\n        const token = localStorage.getItem('SessionToken');\r\n        const refreshToken = localStorage.getItem('RefreshToken');\r\n        let obj = {\r\n          startIndex: startIndex,\r\n          fetchRecord: fetchRecord,\r\n          name: search ? search : '',\r\n          isActive: null\r\n        };\r\n        const res = await APIservice.httpPost(\r\n          '/api/admin/profileFor/getProfileFor',\r\n          obj,\r\n          token,\r\n          refreshToken\r\n        );\r\n        setProfileFor(res.recordList);\r\n        setRow(res.totalRecords);\r\n      } else {\r\n        setIsLoading(true);\r\n        const token = localStorage.getItem('SessionToken');\r\n        const refreshToken = localStorage.getItem('RefreshToken');\r\n        let obj = {\r\n          startIndex: startIndex,\r\n          fetchRecord: fetchRecord\r\n        };\r\n        const res = await APIservice.httpPost(\r\n          '/api/admin/profileFor/getProfileFor',\r\n          obj,\r\n          token,\r\n          refreshToken\r\n        );\r\n        setProfileFor(res.recordList);\r\n        setRow(res.totalRecords);\r\n        if (res && res.status == 200) {\r\n          setIsOpen(false);\r\n        } else if (res.status == 401) {\r\n          navigate('/admin');\r\n          localStorage.clear();\r\n        } else if (res.status == 500) {\r\n          setIsOpen(false);\r\n          toast.error(res.message, {\r\n            autoClose: 6000,\r\n            hideProgressBar: true,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n            theme: 'colored',\r\n            position: toast.POSITION.TOP_RIGHT\r\n          });\r\n        } else if (res.status == 300) {\r\n          setIsOpen(false);\r\n          toast.error(res.message, {\r\n            autoClose: 6000,\r\n            hideProgressBar: true,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n            theme: 'colored',\r\n            position: toast.POSITION.TOP_RIGHT\r\n          });\r\n        } else if (res.status == 400) {\r\n          setIsOpen(false);\r\n          toast.error(res.message, {\r\n            autoClose: 6000,\r\n            hideProgressBar: true,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n            theme: 'colored',\r\n            position: toast.POSITION.TOP_RIGHT\r\n          });\r\n        } else if (res.status == 404) {\r\n          setIsOpen(false);\r\n          toast.error(res.message, {\r\n            autoClose: 6000,\r\n            hideProgressBar: true,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n            theme: 'colored',\r\n            position: toast.POSITION.TOP_RIGHT\r\n          });\r\n        }\r\n        setIsLoading(false);\r\n      }\r\n    } catch (error) {\r\n      setIsLoading(false);\r\n      setIsOpen(false);\r\n      toast.error(error, {\r\n        autoClose: 6000,\r\n        hideProgressBar: true,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: 'colored',\r\n        position: toast.POSITION.TOP_RIGHT\r\n      });\r\n    }\r\n  };\r\n\r\n  const saveProfileFor = async (e: any) => {\r\n    debugger;\r\n    var flag = validateForm(e);\r\n    if (flag) {\r\n      try {\r\n        if (v1.id) {\r\n          const token = localStorage.getItem('SessionToken');\r\n          const refreshToken = localStorage.getItem('RefreshToken');\r\n          let val = {\r\n            id: v1.id,\r\n            name: v1.name,\r\n            gender: v1.gender\r\n          };\r\n          const res = await APIservice.httpPost(\r\n            '/api/admin/profileFor/insertUpdateProfileFor',\r\n            val,\r\n            token,\r\n            refreshToken\r\n          );\r\n          if (res && res.status == 200) {\r\n            setIsOpen(false);\r\n            getdata(page * limit, limit);\r\n          } else if (res.status == 401) {\r\n            navigate('/admin');\r\n            localStorage.clear();\r\n          } else if (res.status == 500) {\r\n            setIsOpen(false);\r\n            toast.error(res.message, {\r\n              autoClose: 6000,\r\n              hideProgressBar: true,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              draggable: true,\r\n              progress: undefined,\r\n              theme: 'colored',\r\n              position: toast.POSITION.TOP_RIGHT\r\n            });\r\n          } else if (res.status == 300) {\r\n            setIsOpen(false);\r\n            toast.error(res.message, {\r\n              autoClose: 6000,\r\n              hideProgressBar: true,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              draggable: true,\r\n              progress: undefined,\r\n              theme: 'colored',\r\n              position: toast.POSITION.TOP_RIGHT\r\n            });\r\n          } else if (res.status == 404) {\r\n            setIsOpen(false);\r\n            toast.error(res.message, {\r\n              autoClose: 6000,\r\n              hideProgressBar: true,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              draggable: true,\r\n              progress: undefined,\r\n              theme: 'colored',\r\n              position: toast.POSITION.TOP_RIGHT\r\n            });\r\n          } else if (res.status == 400) {\r\n            setIsOpen(false);\r\n            toast.error(res.message, {\r\n              autoClose: 6000,\r\n              hideProgressBar: true,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              draggable: true,\r\n              progress: undefined,\r\n              theme: 'colored',\r\n              position: toast.POSITION.TOP_RIGHT\r\n            });\r\n          } else if (res.status == 203) {\r\n            setIsProfileForErrorError(true);\r\n            setProfileForErrorMsg('Profile for already exists!');\r\n          }\r\n        } else {\r\n          const token = localStorage.getItem('SessionToken');\r\n          const refreshToken = localStorage.getItem('RefreshToken');\r\n          const res = await APIservice.httpPost(\r\n            '/api/admin/profileFor/insertUpdateProfileFor',\r\n            v1,\r\n            token,\r\n            refreshToken\r\n          );\r\n          if (res && res.status == 200) {\r\n            setPage(0);\r\n            setIsOpen(false);\r\n            getdata(0, limit);\r\n          } else if (res.status == 401) {\r\n            navigate('/admin');\r\n            localStorage.clear();\r\n          } else if (res.status == 500) {\r\n            setIsOpen(false);\r\n            toast.error(res.message, {\r\n              autoClose: 6000,\r\n              hideProgressBar: true,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              draggable: true,\r\n              progress: undefined,\r\n              theme: 'colored',\r\n              position: toast.POSITION.TOP_RIGHT\r\n            });\r\n          } else if (res.status == 300) {\r\n            setIsOpen(false);\r\n            toast.error(res.message, {\r\n              autoClose: 6000,\r\n              hideProgressBar: true,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              draggable: true,\r\n              progress: undefined,\r\n              theme: 'colored',\r\n              position: toast.POSITION.TOP_RIGHT\r\n            });\r\n          } else if (res.status == 404) {\r\n            setIsOpen(false);\r\n            toast.error(res.message, {\r\n              autoClose: 6000,\r\n              hideProgressBar: true,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              draggable: true,\r\n              progress: undefined,\r\n              theme: 'colored',\r\n              position: toast.POSITION.TOP_RIGHT\r\n            });\r\n          } else if (res.status == 400) {\r\n            setIsOpen(false);\r\n            toast.error(res.message, {\r\n              autoClose: 6000,\r\n              hideProgressBar: true,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              draggable: true,\r\n              progress: undefined,\r\n              theme: 'colored',\r\n              position: toast.POSITION.TOP_RIGHT\r\n            });\r\n          } else if (res.status == 203) {\r\n            setIsProfileForErrorError(true);\r\n            setProfileForErrorMsg('Profile for already exists!');\r\n          }\r\n        }\r\n      } catch (error: any) {\r\n        setIsOpen(false);\r\n        toast.error(error, {\r\n          autoClose: 6000,\r\n          hideProgressBar: true,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: 'colored',\r\n          position: toast.POSITION.TOP_RIGHT\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  const searchData = (e) => {\r\n    setSearch(e.target.value);\r\n    search = e.target.value;\r\n    getdata(page, limit);\r\n  };\r\n\r\n  const handlePageChange = (event: any, newPage: number): void => {\r\n    setPage(newPage);\r\n    getdata(newPage * limit, limit);\r\n  };\r\n\r\n  const handleLimitChange = (event: ChangeEvent<HTMLInputElement>): void => {\r\n    setLimit(parseInt(event.target.value));\r\n    setPage(0);\r\n    getdata(0, parseInt(event.target.value));\r\n  };\r\n\r\n  const theme = useTheme();\r\n  return (\r\n    <>\r\n      <ToastContainer\r\n        style={{ top: '10%', left: '80%' }}\r\n        autoClose={6000}\r\n        hideProgressBar={true}\r\n        newestOnTop={false}\r\n        closeOnClick\r\n        rtl={false}\r\n        pauseOnFocusLoss\r\n        draggable\r\n        pauseOnHover\r\n      />\r\n      <Helmet>\r\n        <title>Profile For</title>\r\n      </Helmet>\r\n      <PageTitleWrapper>\r\n        <Box p={1}>\r\n          <Grid container justifyContent=\"space-between\" alignItems=\"center\">\r\n            <Grid item>\r\n              <Stack alignItems=\"left\" justifyContent=\"space-between\">\r\n                <Breadcrumbs aria-label=\"breadcrumb\">\r\n                  <Link\r\n                    to=\"/admin/dashboard\"\r\n                    style={{ display: 'flex', color: 'black' }}\r\n                  >\r\n                    <HomeIcon />\r\n                  </Link>\r\n                  <Typography\r\n                    variant=\"subtitle2\"\r\n                    color=\"inherit\"\r\n                    fontWeight=\"bold\"\r\n                  >\r\n                    Profile For\r\n                  </Typography>\r\n                </Breadcrumbs>\r\n              </Stack>\r\n            </Grid>\r\n            <Grid item>\r\n              <Grid container spacing={1.5}>\r\n                <Grid item>\r\n                  {isWritePermission ? (\r\n                    <>\r\n                      <Button\r\n                        className=\"buttonLarge\"\r\n                        sx={{\r\n                          mt: {\r\n                            xs: 0,\r\n                            md: 0,\r\n                            display: 'flex',\r\n                            alignItems: 'center',\r\n                            padding: '8.3px',\r\n                            top: '3px'\r\n                          }\r\n                        }}\r\n                        variant=\"contained\"\r\n                        onClick={handleClickisAdd}\r\n                        size=\"small\"\r\n                      >\r\n                        <AddTwoToneIcon fontSize=\"small\" />\r\n                        Create Profile For\r\n                      </Button>\r\n                      <Button\r\n                        className=\"button\"\r\n                        sx={{\r\n                          mt: {\r\n                            xs: 0,\r\n                            md: 0,\r\n                            display: 'flex',\r\n                            alignItems: 'center',\r\n                            padding: '8.3px',\r\n                            top: '3px'\r\n                          }\r\n                        }}\r\n                        variant=\"contained\"\r\n                        onClick={handleClickisAdd}\r\n                        size=\"small\"\r\n                      >\r\n                        <AddTwoToneIcon fontSize=\"small\" />\r\n                      </Button>\r\n                    </>\r\n                  ) : (\r\n                    <></>\r\n                  )}\r\n                </Grid>\r\n                <Grid item>\r\n                  <FormControl\r\n                    sx={{ mt: { xs: 0.3, md: 0.3, lg: 0.3, sm: 0.3 } }}\r\n                  >\r\n                    <TextField\r\n                      // size=\"small\"\r\n                      id=\"outlined-basic\"\r\n                      label=\"Search\"\r\n                      variant=\"outlined\"\r\n                      name=\"searchString\"\r\n                      value={search}\r\n                      onChange={(e) => searchData(e)}\r\n                      size=\"small\"\r\n                      InputProps={{\r\n                        startAdornment: (\r\n                          <InputAdornment position=\"start\">\r\n                            <SearchIcon />\r\n                          </InputAdornment>\r\n                        )\r\n                      }}\r\n                    />\r\n                  </FormControl>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </Box>\r\n      </PageTitleWrapper>\r\n      <Container maxWidth=\"lg\">\r\n        <Grid\r\n          container\r\n          direction=\"row\"\r\n          justifyContent=\"center\"\r\n          alignItems=\"stretch\"\r\n          spacing={3}\r\n        >\r\n          <Grid item xs={12}>\r\n            <>\r\n              <Card className=\"religioncard\">\r\n                <div>\r\n                  {isloading ? (\r\n                    <Loader1 title=\"Loading...\" />\r\n                  ) : (\r\n                    <>\r\n                      <Divider />\r\n                      {profileFor && profileFor.length > 0 ? (\r\n                        <>\r\n                          <TableContainer className=\"religiontableContainer\">\r\n                            <Table stickyHeader>\r\n                              <TableHead>\r\n                                <TableRow>\r\n                                  <TableCell>\r\n                                    <Typography\r\n                                      noWrap\r\n                                      style={{\r\n                                        fontSize: '13px',\r\n                                        fontWeight: 'bold',\r\n                                        marginBottom: 'none'\r\n                                      }}\r\n                                    >\r\n                                      Sr. NO\r\n                                    </Typography>\r\n                                  </TableCell>\r\n                                  <TableCell>\r\n                                    <Typography\r\n                                      noWrap\r\n                                      style={{\r\n                                        fontSize: '13px',\r\n                                        fontWeight: 'bold',\r\n                                        marginBottom: 'none'\r\n                                      }}\r\n                                    >\r\n                                      Name\r\n                                    </Typography>\r\n                                  </TableCell>\r\n                                  <TableCell>\r\n                                    <Typography\r\n                                      noWrap\r\n                                      style={{\r\n                                        fontSize: '13px',\r\n                                        fontWeight: 'bold',\r\n                                        marginBottom: 'none'\r\n                                      }}\r\n                                    >\r\n                                      Gender\r\n                                    </Typography>\r\n                                  </TableCell>\r\n                                  <TableCell align=\"right\">\r\n                                    <Typography\r\n                                      noWrap\r\n                                      style={{\r\n                                        fontSize: '13px',\r\n                                        fontWeight: 'bold',\r\n                                        marginBottom: 'none'\r\n                                      }}\r\n                                    >\r\n                                      Actions\r\n                                    </Typography>\r\n                                  </TableCell>\r\n                                </TableRow>\r\n                              </TableHead>\r\n                              <TableBody>\r\n                                {profileFor.map((arr: any, index: number) => {\r\n                                  return (\r\n                                    <TableRow hover key={arr.id}>\r\n                                      <TableCell>\r\n                                        <Typography\r\n                                          variant=\"body1\"\r\n                                          fontWeight=\"bold\"\r\n                                          color=\"text.primary\"\r\n                                          gutterBottom\r\n                                          noWrap\r\n                                        >\r\n                                          {page * limit + index + 1}\r\n                                        </Typography>\r\n                                      </TableCell>\r\n                                      <TableCell>\r\n                                        <Typography\r\n                                          variant=\"body1\"\r\n                                          fontWeight=\"bold\"\r\n                                          color=\"text.primary\"\r\n                                          gutterBottom\r\n                                          noWrap\r\n                                          sx={{ textTransform: 'capitalize' }}\r\n                                        >\r\n                                          {arr.name}\r\n                                        </Typography>\r\n                                      </TableCell>\r\n                                      <TableCell>\r\n                                        <Typography\r\n                                          variant=\"body1\"\r\n                                          fontWeight=\"bold\"\r\n                                          color=\"text.primary\"\r\n                                          gutterBottom\r\n                                          noWrap\r\n                                          sx={{ textTransform: 'capitalize' }}\r\n                                        >\r\n                                          {arr.gender ? arr.gender : '--'}\r\n                                        </Typography>\r\n                                      </TableCell>\r\n                                      <TableCell align=\"right\">\r\n                                        {isEditPermission ? (\r\n                                          <>\r\n                                            <Tooltip\r\n                                              title={\r\n                                                arr.isActive === 0\r\n                                                  ? 'Inactive'\r\n                                                  : 'Active'\r\n                                              }\r\n                                              arrow\r\n                                            >\r\n                                              <Switch\r\n                                                disabled={\r\n                                                  credentail?.isDemoAdmin\r\n                                                }\r\n                                                checked={\r\n                                                  arr.isActive === 0\r\n                                                    ? false\r\n                                                    : true\r\n                                                }\r\n                                                onClick={(e) =>\r\n                                                  handleSwitch(\r\n                                                    arr.id,\r\n                                                    arr.isActive\r\n                                                  )\r\n                                                }\r\n                                                inputProps={{\r\n                                                  'aria-label': 'controlled'\r\n                                                }}\r\n                                              />\r\n                                            </Tooltip>\r\n                                            <Tooltip title=\"Edit\" arrow>\r\n                                              <IconButton\r\n                                                disabled={\r\n                                                  credentail?.isDemoAdmin\r\n                                                }\r\n                                                sx={{\r\n                                                  '&:hover': {\r\n                                                    background:\r\n                                                      theme.colors.primary\r\n                                                        .lighter\r\n                                                  },\r\n                                                  color:\r\n                                                    theme.palette.primary.main\r\n                                                }}\r\n                                                color=\"inherit\"\r\n                                                size=\"small\"\r\n                                                onClick={(e) =>\r\n                                                  handleClickisEdit(\r\n                                                    arr.id,\r\n                                                    arr.name,\r\n                                                    arr.gender\r\n                                                  )\r\n                                                }\r\n                                                data-toggle=\"modal\"\r\n                                                data-target=\"#exampleModal\"\r\n                                              >\r\n                                                <EditTwoToneIcon fontSize=\"small\" />\r\n                                              </IconButton>\r\n                                            </Tooltip>\r\n                                          </>\r\n                                        ) : (\r\n                                          <></>\r\n                                        )}\r\n                                      </TableCell>\r\n                                    </TableRow>\r\n                                  );\r\n                                })}\r\n                              </TableBody>\r\n                            </Table>\r\n                          </TableContainer>\r\n                          <Box p={2}>\r\n                            <TablePagination\r\n                              component=\"div\"\r\n                              count={row}\r\n                              onPageChange={handlePageChange}\r\n                              onRowsPerPageChange={handleLimitChange}\r\n                              page={page}\r\n                              rowsPerPage={limit}\r\n                              rowsPerPageOptions={[10, 20, 30, 40]}\r\n                            />\r\n                          </Box>\r\n                        </>\r\n                      ) : (\r\n                        <Paper\r\n                          sx={{\r\n                            display: 'flex',\r\n                            justifyContent: 'center',\r\n                            alignItems: 'center',\r\n                            textAlign: 'center',\r\n                            verticalAlign: 'middle',\r\n                            boxShadow: 'none'\r\n                          }}\r\n                          className=\"religioncard\"\r\n                        >\r\n                          <Typography variant=\"h5\" paragraph>\r\n                            Data not Found\r\n                          </Typography>\r\n                        </Paper>\r\n                      )}\r\n                      <div>\r\n                        <Dialog\r\n                          open={ischeck}\r\n                          onClose={handleClose}\r\n                          fullWidth\r\n                          maxWidth=\"xs\"\r\n                        >\r\n                          <DialogTitle\r\n                            sx={{\r\n                              m: 0,\r\n                              p: 2,\r\n                              fontSize: '20px',\r\n                              fontWeight: 'bolder'\r\n                            }}\r\n                          >\r\n                            {v1.status === 0 ? 'Inactive' : 'Active'}\r\n                          </DialogTitle>\r\n                          <DialogContent>\r\n                            <DialogContentText\r\n                              style={{\r\n                                fontSize: '1rem',\r\n                                letterSpacing: '0.00938em'\r\n                              }}\r\n                            >\r\n                              {v1.status === 0\r\n                                ? 'Are you sure you want to Active?'\r\n                                : 'Are you sure you want to Inactive?'}\r\n                            </DialogContentText>\r\n                          </DialogContent>\r\n                          <DialogActions>\r\n                            <Button\r\n                              onClick={handleClose}\r\n                              variant=\"outlined\"\r\n                              style={{ marginRight: '10px' }}\r\n                            >\r\n                              Cancel\r\n                            </Button>\r\n                            <Button\r\n                              disabled={credentail?.isDemoAdmin}\r\n                              onClick={handleSwitchCheck}\r\n                              variant=\"outlined\"\r\n                              style={{ marginRight: '10px' }}\r\n                            >\r\n                              Yes\r\n                            </Button>\r\n                          </DialogActions>\r\n                        </Dialog>\r\n                      </div>\r\n\r\n                      <div>\r\n                        <BootstrapDialog\r\n                          open={isOpen}\r\n                          onClose={handleCloseReligionDialog}\r\n                          PaperProps={{ sx: { height: '40%' } }}\r\n                          fullWidth\r\n                          maxWidth=\"xs\"\r\n                        >\r\n                          <BootstrapDialogTitle\r\n                            id=\"customized-dialog-title\"\r\n                            onClose={handleCloseReligionDialog}\r\n                          >\r\n                            {v1.id ? 'Edit Profile For' : 'Add Profile For'}\r\n                          </BootstrapDialogTitle>\r\n                          <DialogContent dividers>\r\n                            <TextField\r\n                              autoFocus\r\n                              margin=\"dense\"\r\n                              id=\"name\"\r\n                              label=\"Profile For\"\r\n                              type=\"text\"\r\n                              fullWidth\r\n                              variant=\"outlined\"\r\n                              name=\"name\"\r\n                              value={v1.name}\r\n                              onChange={(arr) => {\r\n                                handleInputChange(arr);\r\n                                validateName(arr);\r\n                              }}\r\n                              required={true}\r\n                            />\r\n                            <FormHelperText\r\n                              style={{ color: 'red', height: '22px' }}\r\n                            >\r\n                              {isNameError && NameErrorMsg}\r\n                            </FormHelperText>\r\n                            {/* <FormControl\r\n                                                            sx={{ width: { lg: 265, md: 265, sm: 265, xs: 200 } }}\r\n                                                        >\r\n                                                            <InputLabel id=\"demo-multiple-name-label\">\r\n                                                                Premium Facility\r\n                                                            </InputLabel>\r\n                                                            <Select\r\n                                                                labelId=\"demo-multiple-name-label\"\r\n                                                                id=\"gender\"\r\n                                                                multiple={true}\r\n                                                                name=\"gender\"\r\n                                                                value={['male', 'female']}\r\n                                                                onChange={(arr) => {\r\n                                                                    handleChange(arr);\r\n                                                                    validateGender(arr);\r\n                                                                }}\r\n                                                                label=\"Premium Facility\"\r\n                                                                MenuProps={MenuProps}\r\n                                                                required={true}\r\n                                                            >\r\n                                                                <MenuItem value=\"male\">Male</MenuItem>\r\n                                                                <MenuItem value=\"female\">Female</MenuItem>\r\n                                                            </Select>\r\n                                                        </FormControl> */}\r\n\r\n                            <FormControl style={{ verticalAlign: 'sub' }}>\r\n                              <FormLabel id=\"demo-radio-buttons-group-label\">\r\n                                Gender\r\n                              </FormLabel>\r\n                              <RadioGroup\r\n                                row\r\n                                aria-labelledby=\"demo-radio-buttons-group-label\"\r\n                                name=\"radio-buttons-group\"\r\n                              >\r\n                                <FormControlLabel\r\n                                  name=\"gender\"\r\n                                  value=\"Female\"\r\n                                  checked={v1.gender === 'Female'}\r\n                                  onChange={(e: any) => {\r\n                                    validateGender(e);\r\n                                    handleInputChange(e);\r\n                                  }}\r\n                                  control={<Radio />}\r\n                                  label=\"Female\"\r\n                                />\r\n                                <FormControlLabel\r\n                                  name=\"gender\"\r\n                                  value=\"Male\"\r\n                                  checked={v1.gender === 'Male'}\r\n                                  onChange={(e: any) => {\r\n                                    validateGender(e);\r\n                                    handleInputChange(e);\r\n                                  }}\r\n                                  control={<Radio />}\r\n                                  label=\"Male\"\r\n                                />\r\n                              </RadioGroup>\r\n                              <FormHelperText\r\n                                style={{ color: 'red', height: '22px' }}\r\n                              >\r\n                                {isGenderError && GenderErrorMsg}\r\n                              </FormHelperText>\r\n                            </FormControl>\r\n                            {/* Required <Checkbox\r\n                                                            checked={v1.isRequired}\r\n                                                            onChange={handleChange}\r\n                                                            name=\"isRequired\"\r\n                                                            inputProps={{ 'aria-label': 'controlled' }}\r\n                                                        /> */}\r\n                          </DialogContent>\r\n                          <Box\r\n                            sx={{\r\n                              display: 'flex',\r\n                              justifyContent: 'space-between',\r\n                              p: '8px'\r\n                            }}\r\n                          >\r\n                            <FormHelperText\r\n                              style={{\r\n                                color: 'red',\r\n                                height: '22px',\r\n                                margin: 'none',\r\n                                padding: '8px'\r\n                              }}\r\n                            >\r\n                              {isProfileForError && profileForErrorMsg}\r\n                            </FormHelperText>\r\n                            <Typography>\r\n                              <Button\r\n                                disabled={credentail?.isDemoAdmin}\r\n                                onClick={handleCloseReligionDialog}\r\n                                variant=\"outlined\"\r\n                                style={{ marginRight: '10px' }}\r\n                              >\r\n                                Cancel\r\n                              </Button>\r\n                              <Button\r\n                                disabled={credentail?.isDemoAdmin}\r\n                                onClick={saveProfileFor}\r\n                                variant=\"outlined\"\r\n                                style={{ marginRight: '10px' }}\r\n                              >\r\n                                Save\r\n                              </Button>\r\n                            </Typography>\r\n                          </Box>\r\n                        </BootstrapDialog>\r\n                      </div>\r\n                    </>\r\n                  )}\r\n                </div>\r\n              </Card>\r\n            </>\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n      {/* <Footer /> */}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ProfileFor;\r\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\"\n}), 'Search');\nexports.default = _default;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getTableHeadUtilityClass(slot) {\n  return generateUtilityClass('MuiTableHead', slot);\n}\nconst tableHeadClasses = generateUtilityClasses('MuiTableHead', ['root']);\nexport default tableHeadClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport Tablelvl2Context from '../Table/Tablelvl2Context';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport styled from '../styles/styled';\nimport { getTableHeadUtilityClass } from './tableHeadClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getTableHeadUtilityClass, classes);\n};\nconst TableHeadRoot = styled('thead', {\n  name: 'MuiTableHead',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  display: 'table-header-group'\n});\nconst tablelvl2 = {\n  variant: 'head'\n};\nconst defaultComponent = 'thead';\nconst TableHead = /*#__PURE__*/React.forwardRef(function TableHead(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiTableHead'\n  });\n  const {\n      className,\n      component = defaultComponent\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    component\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(Tablelvl2Context.Provider, {\n    value: tablelvl2,\n    children: /*#__PURE__*/_jsx(TableHeadRoot, _extends({\n      as: component,\n      className: clsx(classes.root, className),\n      ref: ref,\n      role: component === defaultComponent ? null : 'rowgroup',\n      ownerState: ownerState\n    }, other))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? TableHead.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component, normally `TableRow`.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default TableHead;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getTableUtilityClass(slot) {\n  return generateUtilityClass('MuiTable', slot);\n}\nconst tableClasses = generateUtilityClasses('MuiTable', ['root', 'stickyHeader']);\nexport default tableClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"component\", \"padding\", \"size\", \"stickyHeader\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport TableContext from './TableContext';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport styled from '../styles/styled';\nimport { getTableUtilityClass } from './tableClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    stickyHeader\n  } = ownerState;\n  const slots = {\n    root: ['root', stickyHeader && 'stickyHeader']\n  };\n  return composeClasses(slots, getTableUtilityClass, classes);\n};\nconst TableRoot = styled('table', {\n  name: 'MuiTable',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.stickyHeader && styles.stickyHeader];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  display: 'table',\n  width: '100%',\n  borderCollapse: 'collapse',\n  borderSpacing: 0,\n  '& caption': _extends({}, theme.typography.body2, {\n    padding: theme.spacing(2),\n    color: (theme.vars || theme).palette.text.secondary,\n    textAlign: 'left',\n    captionSide: 'bottom'\n  })\n}, ownerState.stickyHeader && {\n  borderCollapse: 'separate'\n}));\nconst defaultComponent = 'table';\nconst Table = /*#__PURE__*/React.forwardRef(function Table(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiTable'\n  });\n  const {\n      className,\n      component = defaultComponent,\n      padding = 'normal',\n      size = 'medium',\n      stickyHeader = false\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    component,\n    padding,\n    size,\n    stickyHeader\n  });\n  const classes = useUtilityClasses(ownerState);\n  const table = React.useMemo(() => ({\n    padding,\n    size,\n    stickyHeader\n  }), [padding, size, stickyHeader]);\n  return /*#__PURE__*/_jsx(TableContext.Provider, {\n    value: table,\n    children: /*#__PURE__*/_jsx(TableRoot, _extends({\n      as: component,\n      role: component === defaultComponent ? null : 'table',\n      ref: ref,\n      className: clsx(classes.root, className),\n      ownerState: ownerState\n    }, other))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Table.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the table, normally `TableHead` and `TableBody`.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * Allows TableCells to inherit padding of the Table.\n   * @default 'normal'\n   */\n  padding: PropTypes.oneOf(['checkbox', 'none', 'normal']),\n  /**\n   * Allows TableCells to inherit size of the Table.\n   * @default 'medium'\n   */\n  size: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.string]),\n  /**\n   * Set the header sticky.\n   *\n   * ⚠️ It doesn't work with IE11.\n   * @default false\n   */\n  stickyHeader: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Table;"],"names":["PageTitle","styled","Box","_ref","theme","spacing","_ref2","children","_jsx","className","Container","maxWidth","props","title","BootstrapDialog","Dialog","padding","BootstrapDialogTitle","onClose","other","_jsxs","DialogTitle","sx","m","p","fontSize","fontWeight","IconButton","onClick","position","right","top","color","palette","grey","CloseIcon","initialState","id","name","gender","page","setPage","useState","limit","setLimit","row","setRow","profileFor","setProfileFor","React","v1","setV1","isOpen","setIsOpen","isloading","setIsLoading","ischeck","setIsCheck","isProfileForError","setIsProfileForErrorError","profileForErrorMsg","setProfileForErrorMsg","search","setSearch","isReadPermission","setIsReadPermission","isWritePermission","setIsWritePermission","isEditPermission","setIsEditPermission","isDeletePermission","setIsDeletePermission","navigate","useNavigate","isNameError","setNameError","NameErrorMsg","setNameErrorMsg","isGenderError","setGenderError","GenderErrorMsg","setGenderErrorMsg","credentail","setCredentail","cred","JSON","parse","localStorage","getItem","roleId","ind","pagePermissions","findIndex","c","isAddPermission","loadData","async","getdata","reg","RegExp","validateGender","event","value","target","handleCloseReligionDialog","handleClickisAdd","handleClose","handleInputChange","arr","startIndex","fetchRecord","token","refreshToken","obj","isActive","res","APIservice","httpPost","recordList","totalRecords","status","clear","toast","error","message","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","POSITION","TOP_RIGHT","useTheme","_Fragment","ToastContainer","style","left","newestOnTop","rtl","pauseOnFocusLoss","Helmet","PageTitleWrapper","Grid","container","justifyContent","alignItems","item","Stack","Breadcrumbs","Link","to","display","HomeIcon","Typography","variant","Button","mt","xs","md","size","AddTwoToneIcon","FormControl","lg","sm","TextField","label","onChange","e","searchData","InputProps","startAdornment","InputAdornment","SearchIcon","direction","Card","Loader1","Divider","length","TableContainer","Table","stickyHeader","TableHead","TableRow","TableCell","noWrap","marginBottom","align","TableBody","map","index","hover","gutterBottom","textTransform","Tooltip","arrow","Switch","disabled","isDemoAdmin","checked","handleSwitch","inputProps","background","colors","primary","lighter","main","handleClickisEdit","no","st","EditTwoToneIcon","TablePagination","component","count","onPageChange","handlePageChange","newPage","onRowsPerPageChange","parseInt","rowsPerPage","rowsPerPageOptions","Paper","textAlign","verticalAlign","boxShadow","paragraph","open","fullWidth","DialogContent","DialogContentText","letterSpacing","DialogActions","marginRight","PaperProps","height","dividers","autoFocus","margin","type","test","validateName","required","FormHelperText","FormLabel","RadioGroup","FormControlLabel","control","Radio","flag","preventDefault","validateForm","val","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d","getTableHeadUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","TableHeadRoot","overridesResolver","styles","root","tablelvl2","defaultComponent","inProps","ref","useDefaultProps","_objectWithoutPropertiesLoose","ownerState","_extends","classes","composeClasses","useUtilityClasses","Tablelvl2Context","Provider","as","clsx","role","getTableUtilityClass","TableRoot","width","borderCollapse","borderSpacing","typography","body2","vars","text","secondary","captionSide","slots","table","TableContext"],"sourceRoot":""}