{"version":3,"file":"static/js/7561.6cb29755.chunk.js","mappings":"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","sources":["components/PageTitleWrapper/index.tsx","content/Loader.tsx","content/blog/blog.tsx","../node_modules/@mui/icons-material/Delete.js","../node_modules/@mui/material/TableCell/tableCellClasses.js","../node_modules/@mui/material/TableCell/TableCell.js","../node_modules/@mui/material/TableContainer/tableContainerClasses.js","../node_modules/@mui/material/TableContainer/TableContainer.js","../node_modules/@mui/material/Table/TableContext.js","../node_modules/@mui/material/Table/Tablelvl2Context.js"],"sourcesContent":["import { FC, ReactNode } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Box, Container, styled } from '@mui/material';\r\n\r\nconst PageTitle = styled(Box)(\r\n  ({ theme }) => `\r\n        padding: ${theme.spacing(1)};\r\n`\r\n);\r\n\r\ninterface PageTitleWrapperProps {\r\n  children?: ReactNode;\r\n}\r\n\r\nconst PageTitleWrapper: FC<PageTitleWrapperProps> = ({ children }) => {\r\n  return (\r\n    <PageTitle className=\"MuiPageTitle-wrapper\">\r\n      <Container maxWidth=\"lg\">{children}</Container>\r\n    </PageTitle>\r\n  );\r\n};\r\n\r\nPageTitleWrapper.propTypes = {\r\n  children: PropTypes.node.isRequired\r\n};\r\n\r\nexport default PageTitleWrapper;\r\n","import React from 'react';\r\nimport './Loader.css';\r\n\r\ninterface Props {\r\n  title: string;\r\n}\r\n\r\nconst Loader1 = (props: Props) => {\r\n  const { title } = props;\r\n  return (\r\n    // <div className=\"loader\">\r\n    //     <img className=\"img\" src={loader} alt=\"\" />\r\n    //     <span>{title}</span>\r\n    // </div>\r\n    <div className=\"spinner-container\">\r\n      <div className=\"loading-spinner\"></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loader1;\r\n","import { Helmet } from 'react-helmet-async';\r\nimport PageTitleWrapper from 'src/components/PageTitleWrapper';\r\nimport {\r\n  Grid,\r\n  Container,\r\n  Box,\r\n  Breadcrumbs,\r\n  Button,\r\n  Card,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n  Divider,\r\n  FormHelperText,\r\n  IconButton,\r\n  Stack,\r\n  styled,\r\n  Switch,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  TextField,\r\n  Tooltip,\r\n  Typography,\r\n  useTheme,\r\n  FormControl,\r\n  InputAdornment,\r\n  Paper,\r\n  Chip,\r\n  Avatar\r\n} from '@mui/material';\r\nimport EditTwoToneIcon from '@mui/icons-material/EditTwoTone';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport AddTwoToneIcon from '@mui/icons-material/AddTwoTone';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport HomeIcon from '@mui/icons-material/Home';\r\nimport VisibilityIcon from '@mui/icons-material/Visibility';\r\nimport Footer from 'src/components/Footer';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport React, { useState, ChangeEvent, useRef } from 'react';\r\nimport APIservice from 'src/utils/APIservice';\r\nimport Loader1 from '../Loader';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport '../smallScreen.css';\r\nimport { string } from 'prop-types';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\nimport './blog.css';\r\nimport { Col, FormGroup, Row } from 'react-bootstrap';\r\nimport {\r\n  DatePicker,\r\n  DateTimePicker,\r\n  LocalizationProvider\r\n} from '@mui/x-date-pickers';\r\nimport { AdapterDateFns } from '@mui/x-date-pickers/AdapterDateFns';\r\nimport Resizer from 'react-image-file-resizer';\r\nimport { format } from 'date-fns';\r\nimport checkIsDemoUser from 'src/utils/IsDemoUserCheck';\r\nimport { useSnackbar } from '../useSnackbar';\r\n\r\nconst modules = {\r\n  toolbar: {\r\n    container: [\r\n      [{ header: [1, 2, false] }],\r\n      ['bold', 'italic', 'underline', 'strike'], // toggled buttons\r\n      ['blockquote', 'code-block'],\r\n      ['link', 'image', 'video', 'formula'],\r\n      [{ list: 'ordered' }, { list: 'bullet' }, { list: 'check' }],\r\n      [{ script: 'sub' }, { script: 'super' }], // superscript/subscript\r\n      [{ indent: '-1' }, { indent: '+1' }], // outdent/indent\r\n      [{ direction: 'rtl' }], // text direction\r\n\r\n      [{ size: ['small', false, 'large', 'huge'] }], // custom dropdown\r\n      [{ header: [1, 2, 3, 4, 5, 6, false] }],\r\n\r\n      [{ color: [] }, { background: [] }], // dropdown with defaults from theme\r\n      [{ font: [] }],\r\n      [{ align: [] }],\r\n\r\n      ['clean']\r\n    ]\r\n  }\r\n};\r\n\r\nconst BootstrapDialog = styled(Dialog)(({ theme }) => ({\r\n  '& .MuiDialogContent-root': {\r\n    padding: theme.spacing(2)\r\n  },\r\n  '& .MuiDialogActions-root': {\r\n    padding: theme.spacing(1)\r\n  },\r\n  '& .MuiPaper-root': {\r\n    height: '890px'\r\n  }\r\n}));\r\n\r\nexport interface DialogTitleProps {\r\n  id: string;\r\n  children?: React.ReactNode;\r\n  onClose: () => void;\r\n}\r\n\r\nfunction BootstrapDialogTitle(props: DialogTitleProps) {\r\n  const { children, onClose, ...other } = props;\r\n\r\n  return (\r\n    <DialogTitle\r\n      sx={{ m: 0, p: 2, fontSize: '18px', fontWeight: 'bold' }}\r\n      {...other}\r\n    >\r\n      {children}\r\n      {onClose ? (\r\n        <IconButton\r\n          aria-label=\"close\"\r\n          onClick={onClose}\r\n          sx={{\r\n            position: 'absolute',\r\n            right: 13,\r\n            top: 13,\r\n            color: (theme) => theme.palette.grey[500]\r\n          }}\r\n        >\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </DialogTitle>\r\n  );\r\n}\r\n\r\nconst initialState = {\r\n  id: 0,\r\n  title: '',\r\n  description: '',\r\n  tags: [],\r\n  authorName: '',\r\n  image: '',\r\n  publishDate: ''\r\n};\r\n\r\nfunction Blog() {\r\n  let [search, setSearch] = useState('');\r\n  const navigate = useNavigate();\r\n  let [credentail, setCredentail] = useState<any>();\r\n  const [v1, setV1] = React.useState<any>(initialState);\r\n  const [blogs, setBlogs] = useState<any>([]);\r\n  const [isOpen, setIsOpen] = React.useState(false);\r\n  let [coverImage, setCoverImage] = React.useState('');\r\n  const [page, setPage] = useState<number>(0);\r\n  const [limit, setLimit] = useState<number>(10);\r\n  const [row, setRow] = useState<number>(10);\r\n  const [ischeck, setIsCheck] = useState(false);\r\n  const [isdelete, setIsDelete] = useState(false);\r\n\r\n  const [isTitleError, setIsTitleError] = useState(false);\r\n  const [titleErrorMsg, setTitleErrorMsg] = useState('');\r\n  const [isDescriptionError, setIsDescriptionError] = useState(false);\r\n  const [descriptionErrorMsg, setDescriptionErrorMsg] = useState('');\r\n  const [isTagsError, setIsTagsError] = useState(false);\r\n  const [tagsErrorMsg, setTagsErrorMsg] = useState('');\r\n  const [isImageError, setIsImageError] = useState(false);\r\n  const [imageErrorMsg, setImageErrorMsg] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  let [singleTag, setSingleTag] = useState('');\r\n  let [arrayTags, setArrayTags] = useState<any>([]);\r\n  let [apiUrl, setApiUrl] = useState<any>();\r\n\r\n  const [isReadPermission, setIsReadPermission] = useState(true);\r\n  const [isWritePermission, setIsWritePermission] = useState(true);\r\n  const [isEditPermission, setIsEditPermission] = useState(true);\r\n  const [isDeletePermission, setIsDeletePermission] = useState(true);\r\n\r\n  const { showSnackBar, SnackbarComponent } = useSnackbar();\r\n\r\n  let dateFormat: any = 'MM/dd/yyyy';\r\n  if (sessionStorage.getItem('DateFormat')) {\r\n    let storedDateFormat: any = sessionStorage.getItem('DateFormat');\r\n    dateFormat = JSON.parse(storedDateFormat);\r\n  }\r\n\r\n  // window.onpopstate = () => {\r\n  //   navigate(-1);\r\n  // }\r\n\r\n  const editor = useRef(null);\r\n\r\n  React.useEffect(() => {\r\n    debugger;\r\n    let cred = JSON.parse(localStorage.getItem('Credentials'));\r\n    setCredentail(cred);\r\n    if (cred) {\r\n      if (cred.roleId != 1) {\r\n        let ind = cred.pagePermissions.findIndex(\r\n          (c: any) => c.title === 'Block Users'\r\n        );\r\n        if (ind >= 0) {\r\n          setIsReadPermission(cred.pagePermissions[ind].isReadPermission);\r\n          setIsWritePermission(cred.pagePermissions[ind].isAddPermission);\r\n          setIsEditPermission(cred.pagePermissions[ind].isEditPermission);\r\n          setIsDeletePermission(cred.pagePermissions[ind].isDeletePermission);\r\n\r\n          if (cred.pagePermissions[ind].isReadPermission) loadData();\r\n          loadjson();\r\n        }\r\n      } else {\r\n        loadData();\r\n        loadjson();\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  const loadjson = async () => {\r\n    let res = await fetch('/admin/variable.json'); // Adjust the file path as needed\r\n    let url = await res.json();\r\n    setApiUrl(url);\r\n    apiUrl = url;\r\n  };\r\n\r\n  const loadData = async () => {\r\n    await getData(page, limit);\r\n    setIsOpen(false);\r\n  };\r\n\r\n  const getData = async (startIndex: number, fetchRecord: number) => {\r\n    try {\r\n      if (search) {\r\n        const token = localStorage.getItem('SessionToken');\r\n        const refreshToken = localStorage.getItem('RefreshToken');\r\n        let obj = {\r\n          startIndex: startIndex,\r\n          fetchRecord: fetchRecord,\r\n          name: search ? search : ''\r\n        };\r\n        const res = await APIservice.httpPost(\r\n          '/api/admin/blog/getBlogs',\r\n          obj,\r\n          token,\r\n          refreshToken\r\n        );\r\n        if (res.recordList && res.recordList.length > 0) {\r\n          for (let i = 0; i < res.recordList.length; i++) {\r\n            // res.recordList[i].image =  res.recordList[i].image\r\n            // res.recordList[i].publishDate = new Date(); // Or your date object\r\n            res.recordList[i].formatdate = new Date(\r\n              res.recordList[i].publishDate\r\n            ).toLocaleDateString('en-US');\r\n          }\r\n        }\r\n        setBlogs(res.recordList);\r\n        setRow(res.totalRecords);\r\n        if (res && res.status == 200) {\r\n          setIsOpen(false);\r\n        } else if (res.status == 401) {\r\n          localStorage.clear();\r\n          navigate('/admin');\r\n        } else if (res.status == 500) {\r\n          setIsOpen(false);\r\n          toast.error(res.message, {\r\n            autoClose: 6000,\r\n            hideProgressBar: true,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n            theme: 'colored',\r\n            position: toast.POSITION.TOP_RIGHT\r\n          });\r\n        } else if (res.status == 400) {\r\n          setIsOpen(false);\r\n          toast.error(res.message, {\r\n            autoClose: 6000,\r\n            hideProgressBar: true,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n            theme: 'colored',\r\n            position: toast.POSITION.TOP_RIGHT\r\n          });\r\n        } else if (res.status == 300) {\r\n          setIsOpen(false);\r\n          toast.error(res.message, {\r\n            autoClose: 6000,\r\n            hideProgressBar: true,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n            theme: 'colored',\r\n            position: toast.POSITION.TOP_RIGHT\r\n          });\r\n        } else if (res.status == 404) {\r\n          setIsOpen(false);\r\n          toast.error(res.message, {\r\n            autoClose: 6000,\r\n            hideProgressBar: true,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n            theme: 'colored',\r\n            position: toast.POSITION.TOP_RIGHT\r\n          });\r\n        }\r\n        setIsLoading(false);\r\n      } else {\r\n        setIsLoading(true);\r\n        const token = localStorage.getItem('SessionToken');\r\n        const refreshToken = localStorage.getItem('RefreshToken');\r\n        let obj = {\r\n          startIndex: startIndex,\r\n          fetchRecord: fetchRecord\r\n        };\r\n        const res = await APIservice.httpPost(\r\n          '/api/admin/blog/getBlogs',\r\n          obj,\r\n          token,\r\n          refreshToken\r\n        );\r\n\r\n        if (res.recordList && res.recordList.length > 0) {\r\n          for (let i = 0; i < res.recordList.length; i++) {\r\n            // res.recordList[i].image =  res.recordList[i].image\r\n            res.recordList[i].formatdate = new Date(\r\n              res.recordList[i].publishDate\r\n            ).toLocaleDateString('en-US');\r\n          }\r\n        }\r\n\r\n        setBlogs(res.recordList);\r\n        setRow(res.totalRecords);\r\n        if (res && res.status == 200) {\r\n          setIsOpen(false);\r\n        } else if (res.status == 401) {\r\n          localStorage.clear();\r\n          navigate('/admin');\r\n        } else if (res.status == 500) {\r\n          setIsOpen(false);\r\n          toast.error(res.message, {\r\n            autoClose: 6000,\r\n            hideProgressBar: true,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n            theme: 'colored',\r\n            position: toast.POSITION.TOP_RIGHT\r\n          });\r\n        } else if (res.status == 400) {\r\n          setIsOpen(false);\r\n          toast.error(res.message, {\r\n            autoClose: 6000,\r\n            hideProgressBar: true,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n            theme: 'colored',\r\n            position: toast.POSITION.TOP_RIGHT\r\n          });\r\n        } else if (res.status == 300) {\r\n          setIsOpen(false);\r\n          toast.error(res.message, {\r\n            autoClose: 6000,\r\n            hideProgressBar: true,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n            theme: 'colored',\r\n            position: toast.POSITION.TOP_RIGHT\r\n          });\r\n        } else if (res.status == 404) {\r\n          setIsOpen(false);\r\n          toast.error(res.message, {\r\n            autoClose: 6000,\r\n            hideProgressBar: true,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n            theme: 'colored',\r\n            position: toast.POSITION.TOP_RIGHT\r\n          });\r\n        }\r\n        setIsLoading(false);\r\n      }\r\n    } catch (error) {\r\n      setIsOpen(false);\r\n      toast.error(error, {\r\n        autoClose: 6000,\r\n        hideProgressBar: true,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: 'colored',\r\n        position: toast.POSITION.TOP_RIGHT\r\n      });\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const validateDescription = (arr) => {\r\n    // const { name, value } = arr.target;\r\n    if (arr) {\r\n      setIsDescriptionError(false);\r\n      setDescriptionErrorMsg('');\r\n    } else {\r\n      setIsDescriptionError(true);\r\n      setDescriptionErrorMsg('Description is required');\r\n    }\r\n  };\r\n\r\n  const validateTitle = (arr) => {\r\n    const { name, value } = arr.target;\r\n    if (value) {\r\n      setIsTitleError(false);\r\n      setTitleErrorMsg('');\r\n    } else {\r\n      setIsTitleError(true);\r\n      setTitleErrorMsg('Title is required');\r\n    }\r\n  };\r\n\r\n  const ValidateImage = (arr: any) => {\r\n    if (arr.target.value) {\r\n      setIsImageError(false);\r\n      setImageErrorMsg('');\r\n    } else {\r\n      setIsImageError(true);\r\n      setImageErrorMsg('Image is required');\r\n    }\r\n  };\r\n\r\n  const validateTags = (arr) => {\r\n    let value = arr;\r\n    if (value) {\r\n      setIsTagsError(false);\r\n      setTagsErrorMsg('');\r\n    } else {\r\n      setIsTagsError(true);\r\n      setTagsErrorMsg('Tag is required');\r\n    }\r\n  };\r\n\r\n  const setValidateFromValue = (dateVal: Date) => {\r\n    setV1({ ...v1, publishDate: dateVal });\r\n  };\r\n\r\n  const handleChange = (e: any) => {\r\n    debugger;\r\n    const { name, value } = e.target;\r\n    setV1({\r\n      ...v1,\r\n      [name]: value\r\n    });\r\n    setIsOpen(true);\r\n  };\r\n\r\n  const handleDescriptionChange = (value) => {\r\n    setV1({ ...v1, description: value });\r\n    console.log(v1);\r\n  };\r\n\r\n  const reg = new RegExp('^[a-zA-Z0-9 ]+$');\r\n  const handleAddTags = () => {\r\n    if (reg.test(singleTag)) {\r\n      if (singleTag.trim() !== '') {\r\n        arrayTags = arrayTags ? [...arrayTags] : [];\r\n        arrayTags.push(singleTag);\r\n        setArrayTags(arrayTags);\r\n        setSingleTag('');\r\n        console.log(arrayTags);\r\n      }\r\n    } else {\r\n      setIsTagsError(true);\r\n      setTagsErrorMsg('Value is invalid.');\r\n    }\r\n  };\r\n\r\n  const handleDeleteTags = (indexToRemove) => {\r\n    arrayTags = arrayTags.filter((_, index) => index !== indexToRemove);\r\n    setArrayTags(arrayTags);\r\n    // v1.valueList = arrayValueList\r\n  };\r\n\r\n  const handleTagsInputChange = (arr: any) => {\r\n    const { name, value } = arr.target;\r\n    setSingleTag(value);\r\n    setIsOpen(true);\r\n  };\r\n\r\n  const onFileChange = (e: any) => {\r\n    const file = e.target.files[0];\r\n    const name = e.target.name;\r\n    const reader = new FileReader();\r\n\r\n    reader.onload = () => {\r\n      setCoverImage(reader.result.toString());\r\n      setV1({\r\n        ...v1,\r\n        [name]: reader.result.toString()\r\n      });\r\n    };\r\n    reader.readAsDataURL(file);\r\n  };\r\n\r\n  // const onImageChange = (e: any) => {\r\n  //     const { name, value } = e.target;\r\n  //     setV1({\r\n  //         ...v1,\r\n  //         [name]: value\r\n  //     });\r\n  // };\r\n\r\n  const handleClickisAdd = async () => {\r\n    setV1(initialState);\r\n    setCoverImage('');\r\n    setIsOpen(true);\r\n    setIsTitleError(false);\r\n    setTitleErrorMsg('');\r\n    setIsImageError(false);\r\n    setImageErrorMsg('');\r\n    setIsDescriptionError(false);\r\n    setDescriptionErrorMsg('');\r\n    setIsTagsError(false);\r\n    setTagsErrorMsg('');\r\n    setSingleTag('');\r\n    setArrayTags([]);\r\n  };\r\n\r\n  const handleClickOpenEdit = (obj: any) => {\r\n    debugger;\r\n    if (obj.image) {\r\n      setCoverImage(obj.image);\r\n    } else {\r\n      setCoverImage('');\r\n    }\r\n\r\n    if (obj.tags && typeof obj.tags === 'string') {\r\n      const valueArray: string[] = obj.tags.includes(';')\r\n        ? obj.tags.split(';')\r\n        : [obj.tags];\r\n      obj.tags = valueArray;\r\n    }\r\n    setArrayTags(obj.tags);\r\n\r\n    setV1(obj);\r\n    console.log(v1);\r\n    setIsOpen(true);\r\n    setIsTitleError(false);\r\n    setTitleErrorMsg('');\r\n    setIsImageError(false);\r\n    setImageErrorMsg('');\r\n    setIsDescriptionError(false);\r\n    setDescriptionErrorMsg('');\r\n    setIsTagsError(false);\r\n    setTagsErrorMsg('');\r\n  };\r\n\r\n  const handleCloseBlogDailog = () => {\r\n    setIsOpen(false);\r\n  };\r\n\r\n  const validateForm = (e: any) => {\r\n    e?.preventDefault();\r\n    var flag = true;\r\n    if (!v1.title) {\r\n      setIsTitleError(true);\r\n      setTitleErrorMsg('Title is required');\r\n      flag = false;\r\n    } else {\r\n      setIsTitleError(false);\r\n      setTitleErrorMsg('');\r\n    }\r\n    if (!v1.description) {\r\n      setIsDescriptionError(true);\r\n      setDescriptionErrorMsg('Description is required');\r\n      flag = false;\r\n    } else {\r\n      setIsDescriptionError(false);\r\n      setDescriptionErrorMsg('');\r\n    }\r\n    if (!v1.image) {\r\n      setIsImageError(true);\r\n      setImageErrorMsg('Image is required');\r\n      flag = false;\r\n    } else {\r\n      setIsImageError(false);\r\n      setImageErrorMsg('');\r\n    }\r\n\r\n    if (v1.tags && v1.tags.length == 0) {\r\n      setIsTagsError(true);\r\n      setTagsErrorMsg('Value list is required');\r\n      flag = false;\r\n    } else {\r\n      setIsTagsError(false);\r\n      setTagsErrorMsg('');\r\n    }\r\n\r\n    return flag;\r\n  };\r\n\r\n  const saveBlog = async (e: any) => {\r\n    debugger;\r\n    v1.tags = arrayTags ? arrayTags : null;\r\n\r\n    var flag = validateForm(e);\r\n    if (flag) {\r\n      try {\r\n        setIsLoading(true);\r\n        v1.image = v1.image ? v1.image : null;\r\n        v1.publishDate = v1.publishDate ? v1.publishDate : null;\r\n        v1.authorName = v1.authorName ? v1.authorName : null;\r\n        if (v1.id) {\r\n          const token = localStorage.getItem('SessionToken');\r\n          const refreshToken = localStorage.getItem('RefreshToken');\r\n          let val = v1;\r\n          val.isActive = v1.isActive == 1 ? true : false;\r\n          val.isDelete = v1.isDelete == 1 ? true : false;\r\n          const res = await APIservice.httpPost(\r\n            '/api/admin/blog/updateBlog',\r\n            val,\r\n            token,\r\n            refreshToken\r\n          );\r\n          if (res && res.status == 200) {\r\n            setIsOpen(false);\r\n            getData(page * limit, limit);\r\n            toast.success('Blog Updated Successfully.', {\r\n              autoClose: 6000,\r\n              hideProgressBar: true,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              draggable: true,\r\n              progress: undefined,\r\n              theme: 'colored',\r\n              position: toast.POSITION.TOP_RIGHT\r\n            });\r\n          } else if (res.status == 401) {\r\n            navigate('/admin');\r\n            localStorage.clear();\r\n          } else if (res.status == 500) {\r\n            setIsOpen(false);\r\n            toast.error(res.message, {\r\n              autoClose: 6000,\r\n              hideProgressBar: true,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              draggable: true,\r\n              progress: undefined,\r\n              theme: 'colored',\r\n              position: toast.POSITION.TOP_RIGHT\r\n            });\r\n          } else if (res.status == 300) {\r\n            setIsOpen(false);\r\n            toast.error(res.message, {\r\n              autoClose: 6000,\r\n              hideProgressBar: true,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              draggable: true,\r\n              progress: undefined,\r\n              theme: 'colored',\r\n              position: toast.POSITION.TOP_RIGHT\r\n            });\r\n          } else if (res.status == 404) {\r\n            setIsOpen(false);\r\n            toast.error(res.message, {\r\n              autoClose: 6000,\r\n              hideProgressBar: true,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              draggable: true,\r\n              progress: undefined,\r\n              theme: 'colored',\r\n              position: toast.POSITION.TOP_RIGHT\r\n            });\r\n          } else if (res.status == 400) {\r\n            setIsOpen(false);\r\n            toast.error(res.message, {\r\n              autoClose: 6000,\r\n              hideProgressBar: true,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              draggable: true,\r\n              progress: undefined,\r\n              theme: 'colored',\r\n              position: toast.POSITION.TOP_RIGHT\r\n            });\r\n          }\r\n        } else {\r\n          const token = localStorage.getItem('SessionToken');\r\n          const refreshToken = localStorage.getItem('RefreshToken');\r\n          let val = v1;\r\n          const res = await APIservice.httpPost(\r\n            '/api/admin/blog/insertBlog',\r\n            val,\r\n            token,\r\n            refreshToken\r\n          );\r\n          if (res && res.status == 200) {\r\n            setPage(0);\r\n            setIsOpen(false);\r\n            getData(0, limit);\r\n            toast.success('Blog Added Successfully.', {\r\n              autoClose: 6000,\r\n              hideProgressBar: true,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              draggable: true,\r\n              progress: undefined,\r\n              theme: 'colored',\r\n              position: toast.POSITION.TOP_RIGHT\r\n            });\r\n          } else if (res.status == 401) {\r\n            navigate('/admin');\r\n            localStorage.clear();\r\n          } else if (res.status == 500) {\r\n            setIsOpen(false);\r\n            toast.error(res.message, {\r\n              autoClose: 6000,\r\n              hideProgressBar: true,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              draggable: true,\r\n              progress: undefined,\r\n              theme: 'colored',\r\n              position: toast.POSITION.TOP_RIGHT\r\n            });\r\n          } else if (res.status == 300) {\r\n            setIsOpen(false);\r\n            toast.error(res.message, {\r\n              autoClose: 6000,\r\n              hideProgressBar: true,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              draggable: true,\r\n              progress: undefined,\r\n              theme: 'colored',\r\n              position: toast.POSITION.TOP_RIGHT\r\n            });\r\n          } else if (res.status == 404) {\r\n            setIsOpen(false);\r\n            toast.error(res.message, {\r\n              autoClose: 6000,\r\n              hideProgressBar: true,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              draggable: true,\r\n              progress: undefined,\r\n              theme: 'colored',\r\n              position: toast.POSITION.TOP_RIGHT\r\n            });\r\n          } else if (res.status == 400) {\r\n            setIsOpen(false);\r\n            toast.error(res.message, {\r\n              autoClose: 6000,\r\n              hideProgressBar: true,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              draggable: true,\r\n              progress: undefined,\r\n              theme: 'colored',\r\n              position: toast.POSITION.TOP_RIGHT\r\n            });\r\n          }\r\n        }\r\n        setIsLoading(false);\r\n      } catch (error: any) {\r\n        setIsLoading(false);\r\n        setIsOpen(false);\r\n        toast.error(error, {\r\n          autoClose: 6000,\r\n          hideProgressBar: true,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: 'colored',\r\n          position: toast.POSITION.TOP_RIGHT\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleSwitch = async (id: number, status: number) => {\r\n    let obj = {\r\n      id: id,\r\n      status: status\r\n    };\r\n    setV1(obj);\r\n    setIsCheck(true);\r\n  };\r\n\r\n  const handleSwitchCheck = async () => {\r\n    const token = localStorage.getItem('SessionToken');\r\n    const refreshToken = localStorage.getItem('RefreshToken');\r\n    let obj = {\r\n      id: v1.id\r\n    };\r\n    const res = await APIservice.httpPost(\r\n      '/api/admin/blog/activeInactiveBlog',\r\n      obj,\r\n      token,\r\n      refreshToken\r\n    );\r\n    setIsCheck(false);\r\n    getData(page * limit, limit);\r\n  };\r\n\r\n  const handleDelete = async (id: number) => {\r\n    let obj = {\r\n      id: id\r\n    };\r\n    setV1(obj);\r\n    setIsDelete(true);\r\n  };\r\n\r\n  const handleDeleteCheck = async () => {\r\n    const token = localStorage.getItem('SessionToken');\r\n    const refreshToken = localStorage.getItem('RefreshToken');\r\n    let obj = {\r\n      id: v1.id\r\n    };\r\n    const res = await APIservice.httpPost(\r\n      '/api/admin/blog/deleteBlog',\r\n      obj,\r\n      token,\r\n      refreshToken\r\n    );\r\n    setIsDelete(false);\r\n    getData(page * limit, limit);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setIsCheck(false);\r\n    setIsDelete(false);\r\n  };\r\n\r\n  const searchData = (e) => {\r\n    setSearch(e.target.value);\r\n    search = e.target.value;\r\n    getData(page, limit);\r\n  };\r\n\r\n  const handlePageChange = (event: any, newPage: number): void => {\r\n    setPage(newPage);\r\n    getData(newPage * limit, limit);\r\n  };\r\n\r\n  const handleLimitChange = (event: ChangeEvent<HTMLInputElement>): void => {\r\n    setLimit(parseInt(event.target.value));\r\n    setPage(0);\r\n    getData(0, parseInt(event.target.value));\r\n  };\r\n\r\n  const handleClickVisible = (element: any) => {\r\n    let id = element?.id;\r\n    navigate(`/admin/blog/view/${id}`);\r\n  };\r\n\r\n  const theme = useTheme();\r\n\r\n  return (\r\n    <>\r\n      <SnackbarComponent />\r\n      <ToastContainer\r\n        style={{ top: '10%', left: '80%' }}\r\n        autoClose={6000}\r\n        hideProgressBar={true}\r\n        newestOnTop={false}\r\n        closeOnClick\r\n        rtl={false}\r\n        pauseOnFocusLoss\r\n        draggable\r\n        pauseOnHover\r\n      />\r\n      <Helmet>\r\n        <title>Blog</title>\r\n      </Helmet>\r\n      <PageTitleWrapper>\r\n        <Box p={1}>\r\n          <Grid container justifyContent=\"space-between\" alignItems=\"center\">\r\n            <Grid item>\r\n              <Stack alignItems=\"left\" justifyContent=\"space-between\">\r\n                <Breadcrumbs aria-label=\"breadcrumb\">\r\n                  <Link\r\n                    to=\"/admin/dashboard\"\r\n                    style={{ display: 'flex', color: 'black' }}\r\n                  >\r\n                    <HomeIcon />\r\n                  </Link>\r\n                  <Typography\r\n                    color=\"inherit\"\r\n                    variant=\"subtitle2\"\r\n                    fontWeight=\"bold\"\r\n                  >\r\n                    Blog\r\n                  </Typography>\r\n                </Breadcrumbs>\r\n              </Stack>\r\n            </Grid>\r\n            <Grid item>\r\n              <Grid container spacing={1.5}>\r\n                <Grid item>\r\n                  {isWritePermission ? (\r\n                    <>\r\n                      <Button\r\n                        className=\"buttonLarge\"\r\n                        sx={{\r\n                          mt: {\r\n                            xs: 0,\r\n                            md: 0,\r\n                            display: 'flex',\r\n                            alignItems: 'center',\r\n                            padding: '8.3px',\r\n                            top: '3px'\r\n                          }\r\n                        }}\r\n                        variant=\"contained\"\r\n                        onClick={handleClickisAdd}\r\n                        size=\"small\"\r\n                      >\r\n                        <AddTwoToneIcon fontSize=\"small\" />\r\n                        Create Blog\r\n                      </Button>\r\n                      <Button\r\n                        className=\"button\"\r\n                        sx={{\r\n                          mt: {\r\n                            xs: 0,\r\n                            md: 0,\r\n                            display: 'flex',\r\n                            alignItems: 'center',\r\n                            padding: '8.3px',\r\n                            top: '3px'\r\n                          }\r\n                        }}\r\n                        variant=\"contained\"\r\n                        onClick={handleClickisAdd}\r\n                        size=\"small\"\r\n                      >\r\n                        <AddTwoToneIcon fontSize=\"small\" />\r\n                      </Button>\r\n                    </>\r\n                  ) : (\r\n                    <></>\r\n                  )}\r\n                </Grid>\r\n                <Grid item>\r\n                  <FormControl\r\n                    sx={{ mt: { xs: 0.3, md: 0.3, lg: 0.3, sm: 0.3 } }}\r\n                  >\r\n                    <TextField\r\n                      name=\"searchString\"\r\n                      value={search}\r\n                      onChange={(e) => searchData(e)}\r\n                      id=\"outlined-basic\"\r\n                      label=\"Search\"\r\n                      variant=\"outlined\"\r\n                      size=\"small\"\r\n                      InputProps={{\r\n                        startAdornment: (\r\n                          <InputAdornment position=\"start\">\r\n                            <SearchIcon />\r\n                          </InputAdornment>\r\n                        )\r\n                      }}\r\n                    />\r\n                  </FormControl>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </Box>\r\n      </PageTitleWrapper>\r\n      <Container maxWidth=\"lg\">\r\n        <Grid>\r\n          <Grid>\r\n            <>\r\n              <Card className=\"communitycard\">\r\n                <div>\r\n                  {isLoading ? (\r\n                    <Loader1 title=\"Loading...\" />\r\n                  ) : (\r\n                    <>\r\n                      <Divider />\r\n                      {blogs && blogs.length > 0 ? (\r\n                        <>\r\n                          <TableContainer className=\"communitytableContainer\">\r\n                            {/* <Table stickyHeader>\r\n                                                            <TableHead>\r\n                                                                <TableRow>\r\n                                                                    <TableCell colSpan={1}>\r\n                                                                        <Typography\r\n                                                                            noWrap\r\n                                                                            style={{\r\n                                                                                fontSize: '13px',\r\n                                                                                fontWeight: 'bold',\r\n                                                                                marginBottom: 'none'\r\n                                                                            }}\r\n                                                                        >\r\n                                                                            Sr. No\r\n                                                                        </Typography>\r\n                                                                    </TableCell>\r\n                                                                    <TableCell colSpan={1}>\r\n                                                                        <Typography\r\n                                                                            noWrap\r\n                                                                            style={{\r\n                                                                                fontSize: '13px',\r\n                                                                                fontWeight: 'bold',\r\n                                                                                marginBottom: 'none'\r\n                                                                            }}\r\n                                                                        >\r\n                                                                            Title\r\n                                                                        </Typography>\r\n                                                                    </TableCell>\r\n                                                                    <TableCell colSpan={1}>\r\n                                                                        <Typography\r\n                                                                            noWrap\r\n                                                                            style={{\r\n                                                                                fontSize: '13px',\r\n                                                                                fontWeight: 'bold',\r\n                                                                                marginBottom: 'none'\r\n                                                                            }}\r\n                                                                        >\r\n                                                                            Tags\r\n                                                                        </Typography>\r\n                                                                    </TableCell>\r\n                                                                    <TableCell colSpan={3}>\r\n                                                                        <Typography\r\n                                                                            noWrap\r\n                                                                            style={{\r\n                                                                                fontSize: '13px',\r\n                                                                                fontWeight: 'bold',\r\n                                                                                marginBottom: 'none'\r\n                                                                            }}\r\n                                                                        >\r\n                                                                            Author Name\r\n                                                                        </Typography>\r\n                                                                    </TableCell>\r\n                                                                    <TableCell align=\"right\" colSpan={1}>\r\n                                                                        <Typography\r\n                                                                            noWrap\r\n                                                                            style={{\r\n                                                                                fontSize: '13px',\r\n                                                                                fontWeight: 'bold',\r\n                                                                                marginBottom: 'none'\r\n                                                                            }}\r\n                                                                        >\r\n                                                                            Actions\r\n                                                                        </Typography>\r\n                                                                    </TableCell>\r\n                                                                </TableRow>\r\n                                                            </TableHead>\r\n                                                            <TableBody>\r\n                                                                {blogs.map((arr: any, index: number) => {\r\n                                                                    return (\r\n                                                                        <TableRow hover key={arr.id}>\r\n                                                                            <TableCell colSpan={1} >\r\n                                                                                <Typography\r\n                                                                                    variant=\"body1\"\r\n                                                                                    fontWeight=\"bold\"\r\n                                                                                    color=\"text.primary\"\r\n                                                                                    gutterBottom\r\n                                                                                    noWrap\r\n                                                                                >\r\n                                                                                    {page * limit + index + 1}\r\n                                                                                </Typography>\r\n                                                                            </TableCell>\r\n                                                                            <TableCell colSpan={1} >\r\n                                                                                <Typography\r\n                                                                                    variant=\"body1\"\r\n                                                                                    fontWeight=\"bold\"\r\n                                                                                    color=\"text.primary\"\r\n                                                                                    gutterBottom\r\n                                                                                    noWrap\r\n                                                                                    sx={{ textTransform: 'capitalize' }}\r\n                                                                                >\r\n                                                                                    {arr.title}\r\n                                                                                </Typography>\r\n                                                                            </TableCell>\r\n                                                                            <TableCell colSpan={1} >\r\n                                                                                <Typography\r\n                                                                                    variant=\"body1\"\r\n                                                                                    fontWeight=\"bold\"\r\n                                                                                    color=\"text.primary\"\r\n                                                                                    gutterBottom\r\n                                                                                    noWrap\r\n                                                                                    sx={{ textTransform: 'capitalize' }}\r\n                                                                                >\r\n                                                                                    {arr.tagNames}\r\n                                                                                </Typography>\r\n                                                                            </TableCell>\r\n                                                                            <TableCell colSpan={3} >\r\n                                                                                <Typography\r\n                                                                                    variant=\"body1\"\r\n                                                                                    fontWeight=\"bold\"\r\n                                                                                    color=\"text.primary\"\r\n                                                                                    gutterBottom\r\n                                                                                    noWrap\r\n                                                                                    sx={{ textTransform: 'capitalize', width: '250px' }}\r\n                                                                                >\r\n                                                                                    {arr.authorName ? arr.authorName : \"--\"}\r\n                                                                                </Typography>\r\n                                                                            </TableCell>\r\n                                                                            <TableCell colSpan={1}\r\n                                                                                align=\"right\"\r\n                                                                            >\r\n                                                                                  <Tooltip title=\"View\" arrow>\r\n                                                                                    <IconButton\r\n                                                                                        sx={{\r\n                                                                                            '&:hover': {\r\n                                                                                                background:\r\n                                                                                                    theme.colors.error.lighter\r\n                                                                                            },\r\n                                                                                            color: theme.palette.primary.main\r\n                                                                                        }}\r\n                                                                                        color=\"inherit\"\r\n                                                                                        size=\"small\"\r\n                                                                                        onClick={(e) => {\r\n                                                                                            handleClickVisible(arr);\r\n                                                                                        }}\r\n                                                                                    >\r\n                                                                                        <VisibilityIcon />\r\n                                                                                    </IconButton>\r\n                                                                                </Tooltip>\r\n                                                                                {isEditPermission ?\r\n                                                                                    <>\r\n                                                                                        <Tooltip\r\n                                                                                            title={\r\n                                                                                                arr.isActive === 0\r\n                                                                                                    ? 'Inactive'\r\n                                                                                                    : 'Active'\r\n                                                                                            }\r\n                                                                                            arrow\r\n                                                                                        >\r\n                                                                                            <Switch\r\n                                                                                                disabled={credentail?.email === \"demo@admin.com\"}\r\n                                                                                                checked={\r\n                                                                                                    arr.isActive === 0 ? false : true\r\n                                                                                                }\r\n                                                                                                onClick={(e) =>\r\n                                                                                                    handleSwitch(arr.id, arr.isActive)\r\n                                                                                                }\r\n                                                                                                inputProps={{\r\n                                                                                                    'aria-label': 'controlled'\r\n                                                                                                }}\r\n                                                                                            />\r\n                                                                                        </Tooltip>\r\n                                                                                        <Tooltip title=\"Edit\" arrow>\r\n                                                                                            <IconButton\r\n                                                                                                disabled={credentail?.email === \"demo@admin.com\"}\r\n                                                                                                sx={{\r\n                                                                                                    '&:hover': {\r\n                                                                                                        background:\r\n                                                                                                            theme.colors.primary.lighter\r\n                                                                                                    },\r\n                                                                                                    color: theme.palette.primary.main\r\n                                                                                                }}\r\n                                                                                                color=\"inherit\"\r\n                                                                                                size=\"small\"\r\n                                                                                                onClick={(e) =>\r\n                                                                                                    handleClickOpenEdit(arr)\r\n                                                                                                }\r\n                                                                                                data-toggle=\"modal\"\r\n                                                                                                data-target=\"#exampleModal\"\r\n                                                                                            >\r\n                                                                                                <EditTwoToneIcon fontSize=\"small\" />\r\n                                                                                            </IconButton>\r\n                                                                                        </Tooltip>\r\n                                                                                        <Tooltip title=\"Delete\" arrow>\r\n                                                                                            <IconButton\r\n                                                                                                disabled={credentail?.email === \"demo@admin.com\"}\r\n                                                                                                sx={{\r\n                                                                                                    '&:hover': {\r\n                                                                                                        background:\r\n                                                                                                            theme.colors.primary.lighter\r\n                                                                                                    },\r\n                                                                                                    color: theme.palette.primary.main\r\n                                                                                                }}\r\n                                                                                                color=\"inherit\"\r\n                                                                                                size=\"small\"\r\n                                                                                                onClick={(e) =>\r\n                                                                                                    handleDelete(arr.id)\r\n                                                                                                }\r\n                                                                                                data-toggle=\"modal\"\r\n                                                                                                data-target=\"#exampleModal\"\r\n                                                                                            >\r\n                                                                                                <DeleteIcon fontSize=\"small\" />\r\n                                                                                            </IconButton>\r\n                                                                                        </Tooltip>\r\n\r\n                                                                                    </> : <></>}\r\n\r\n                                                                            </TableCell>\r\n                                                                        </TableRow>\r\n                                                                    );\r\n                                                                })}\r\n                                                            </TableBody>\r\n                                                        </Table> */}\r\n                            {/* <Table stickyHeader> */}\r\n\r\n                            <Row style={{ padding: '25px', width: '100%' }}>\r\n                              {blogs.map((arr: any, index: number) => {\r\n                                return (\r\n                                  <Col\r\n                                    hover\r\n                                    key={index}\r\n                                    sm={12}\r\n                                    md={4}\r\n                                    style={{ marginBottom: '25px' }}\r\n                                  >\r\n                                    <Card className=\"blogCard\">\r\n                                      <Typography className=\"chip-container\">\r\n                                        <Chip label={arr.tags[0]}>\r\n                                          {arr.tags[0]}\r\n                                        </Chip>\r\n                                      </Typography>\r\n                                      <Typography\r\n                                        style={{\r\n                                          height: '150px',\r\n                                          width: 'auto'\r\n                                        }}\r\n                                      >\r\n                                        {arr.image ? (\r\n                                          <img\r\n                                            src={arr.image}\r\n                                            alt=\"blog Url\"\r\n                                            style={{\r\n                                              height: '100%',\r\n                                              width: '100%',\r\n                                              objectFit: 'cover'\r\n                                              // borderRadius: '50%',\r\n                                            }}\r\n                                          />\r\n                                        ) : (\r\n                                          <img\r\n                                            src=\"/dummy.png\"\r\n                                            alt=\"notification Url\"\r\n                                            style={{\r\n                                              height: '100%',\r\n                                              width: '100%'\r\n                                              // borderRadius: '50%',\r\n                                            }}\r\n                                          />\r\n                                        )}\r\n                                      </Typography>\r\n                                      <Grid style={{ padding: '13px 0px' }}>\r\n                                        <h6>{arr.title}</h6>\r\n                                        <Typography className=\"detail\">\r\n                                          {arr.authorName && (\r\n                                            <span>&nbsp;{arr.authorName}</span>\r\n                                          )}\r\n                                          {arr.publishDate && (\r\n                                            <span>\r\n                                              {/* &nbsp;&nbsp;{arr.formatdate} */}\r\n                                              &nbsp;&nbsp;\r\n                                              {arr.publishDate\r\n                                                ? format(\r\n                                                    new Date(arr.publishDate),\r\n                                                    dateFormat\r\n                                                  )\r\n                                                : '--'}\r\n                                            </span>\r\n                                          )}\r\n                                        </Typography>\r\n                                        <Typography\r\n                                          className=\"description\"\r\n                                          dangerouslySetInnerHTML={{\r\n                                            __html: arr.description\r\n                                          }}\r\n                                        />\r\n                                        <Typography\r\n                                          style={{\r\n                                            color: 'grey',\r\n                                            cursor: 'pointer'\r\n                                          }}\r\n                                          onClick={(e) => {\r\n                                            handleClickVisible(arr);\r\n                                          }}\r\n                                        >\r\n                                          Read More...\r\n                                        </Typography>\r\n                                        <Typography className=\"icon-container\">\r\n                                          {/* <Tooltip title=\"View\" arrow>\r\n                                                                                            <IconButton\r\n                                                                                                sx={{\r\n                                                                                                    '&:hover': {\r\n                                                                                                        background:\r\n                                                                                                            theme.colors.error.lighter\r\n                                                                                                    },\r\n                                                                                                    color: theme.palette.primary.main\r\n                                                                                                }}\r\n                                                                                                color=\"inherit\"\r\n                                                                                                size=\"small\"\r\n                                                                                                onClick={(e) => {\r\n                                                                                                    handleClickVisible(arr);\r\n                                                                                                }}\r\n                                                                                            >\r\n                                                                                                <VisibilityIcon />\r\n                                                                                            </IconButton>\r\n                                                                                        </Tooltip> */}\r\n                                          {isEditPermission ? (\r\n                                            <>\r\n                                              <Tooltip\r\n                                                title={\r\n                                                  arr.isActive === 0\r\n                                                    ? 'Inactive'\r\n                                                    : 'Active'\r\n                                                }\r\n                                                arrow\r\n                                              >\r\n                                                <Switch\r\n                                                  // disabled={credentail?.isDemoAdmin}\r\n                                                  checked={\r\n                                                    arr.isActive === 0\r\n                                                      ? false\r\n                                                      : true\r\n                                                  }\r\n                                                  onClick={(e) =>\r\n                                                    checkIsDemoUser(\r\n                                                      () =>\r\n                                                        handleSwitch(\r\n                                                          arr.id,\r\n                                                          arr.isActive\r\n                                                        ),\r\n                                                      showSnackBar\r\n                                                    )()\r\n                                                  }\r\n                                                  inputProps={{\r\n                                                    'aria-label': 'controlled'\r\n                                                  }}\r\n                                                />\r\n                                              </Tooltip>\r\n                                              <Tooltip title=\"Edit\" arrow>\r\n                                                <IconButton\r\n                                                  // disabled={credentail?.isDemoAdmin}\r\n                                                  sx={{\r\n                                                    '&:hover': {\r\n                                                      background:\r\n                                                        theme.colors.primary\r\n                                                          .lighter\r\n                                                    },\r\n                                                    color:\r\n                                                      theme.palette.primary.main\r\n                                                  }}\r\n                                                  color=\"inherit\"\r\n                                                  size=\"small\"\r\n                                                  onClick={(e) =>\r\n                                                    handleClickOpenEdit(arr)\r\n                                                  }\r\n                                                  data-toggle=\"modal\"\r\n                                                  data-target=\"#exampleModal\"\r\n                                                >\r\n                                                  <EditTwoToneIcon fontSize=\"small\" />\r\n                                                </IconButton>\r\n                                              </Tooltip>\r\n                                              <Tooltip title=\"Delete\" arrow>\r\n                                                <IconButton\r\n                                                  // disabled={credentail?.isDemoAdmin}\r\n                                                  sx={{\r\n                                                    '&:hover': {\r\n                                                      background:\r\n                                                        theme.colors.primary\r\n                                                          .lighter\r\n                                                    },\r\n                                                    color:\r\n                                                      theme.palette.primary.main\r\n                                                  }}\r\n                                                  color=\"inherit\"\r\n                                                  size=\"small\"\r\n                                                  onClick={(e) =>\r\n                                                    handleDelete(arr.id)\r\n                                                  }\r\n                                                  data-toggle=\"modal\"\r\n                                                  data-target=\"#exampleModal\"\r\n                                                >\r\n                                                  <DeleteIcon fontSize=\"small\" />\r\n                                                </IconButton>\r\n                                              </Tooltip>\r\n                                            </>\r\n                                          ) : (\r\n                                            <></>\r\n                                          )}\r\n                                        </Typography>\r\n                                      </Grid>\r\n                                    </Card>\r\n                                  </Col>\r\n                                );\r\n                              })}\r\n                            </Row>\r\n                            {/* </Table> */}\r\n                          </TableContainer>\r\n                          <Box p={2}>\r\n                            <TablePagination\r\n                              component=\"div\"\r\n                              count={row}\r\n                              onPageChange={handlePageChange}\r\n                              onRowsPerPageChange={handleLimitChange}\r\n                              page={page}\r\n                              rowsPerPage={limit}\r\n                              rowsPerPageOptions={[10, 20, 30, 40]}\r\n                            />\r\n                          </Box>\r\n                        </>\r\n                      ) : (\r\n                        <Paper\r\n                          sx={{\r\n                            display: 'flex',\r\n                            justifyContent: 'center',\r\n                            alignItems: 'center',\r\n                            textAlign: 'center',\r\n                            verticalAlign: 'middle',\r\n                            boxShadow: 'none'\r\n                          }}\r\n                          className=\"communitycard\"\r\n                        >\r\n                          <Typography variant=\"h5\" paragraph>\r\n                            Data not Found\r\n                          </Typography>\r\n                        </Paper>\r\n                      )}\r\n                    </>\r\n                  )}\r\n                </div>\r\n              </Card>\r\n\r\n              <div>\r\n                <BootstrapDialog\r\n                  open={isOpen}\r\n                  onClose={handleCloseBlogDailog}\r\n                  PaperProps={{ sx: { height: '40%' } }}\r\n                  fullWidth\r\n                  maxWidth=\"lg\"\r\n                >\r\n                  <BootstrapDialogTitle\r\n                    id=\"customized-dialog-title\"\r\n                    onClose={handleCloseBlogDailog}\r\n                  >\r\n                    {v1.id ? 'Edit Blod' : 'Add Blog'}\r\n                  </BootstrapDialogTitle>\r\n\r\n                  <DialogContent dividers>\r\n                    <SnackbarComponent />\r\n                    <Row>\r\n                      <Col xs={12} md={12}>\r\n                        <FormGroup style={{ alignItems: 'center' }}>\r\n                          <Typography>Cover Image:</Typography>\r\n                          <input\r\n                            style={{\r\n                              display: 'none'\r\n                            }}\r\n                            id=\"icon-button-file\"\r\n                            type=\"file\"\r\n                            accept=\"image/*\"\r\n                            name=\"image\"\r\n                            // value={occupation.imageUrl}\r\n                            onChange={(e) => {\r\n                              onFileChange(e);\r\n                              // onImageChange(e);\r\n                              ValidateImage(e);\r\n                            }}\r\n                          ></input>\r\n                          <label\r\n                            htmlFor=\"icon-button-file\"\r\n                            style={{ cursor: 'pointer' }}\r\n                          >\r\n                            {coverImage ? (\r\n                              <img\r\n                                src={coverImage}\r\n                                style={{\r\n                                  height: '120px',\r\n                                  width: 'auto'\r\n                                  // borderRadius: '50%',\r\n                                }}\r\n                              />\r\n                            ) : (\r\n                              <img\r\n                                src=\"/dummy.png\"\r\n                                style={{\r\n                                  height: '100px',\r\n                                  width: '100px'\r\n                                  // borderRadius: '50%',\r\n                                }}\r\n                              />\r\n                            )}\r\n                          </label>\r\n                        </FormGroup>\r\n                        <FormHelperText\r\n                          style={{ color: 'red', height: '22px' }}\r\n                        >\r\n                          {isImageError && imageErrorMsg}\r\n                        </FormHelperText>\r\n                      </Col>\r\n                    </Row>\r\n                    <Row>\r\n                      <Col xs={12}>\r\n                        <TextField\r\n                          autoFocus\r\n                          margin=\"dense\"\r\n                          id=\"title\"\r\n                          label=\"Title\"\r\n                          type=\"text\"\r\n                          fullWidth\r\n                          variant=\"outlined\"\r\n                          name=\"title\"\r\n                          value={v1.title}\r\n                          onChange={(arr) => {\r\n                            handleChange(arr);\r\n                            validateTitle(arr);\r\n                          }}\r\n                          required={true}\r\n                        />\r\n                        <FormHelperText\r\n                          style={{ color: 'red', height: '22px' }}\r\n                        >\r\n                          {isTitleError && titleErrorMsg}\r\n                        </FormHelperText>\r\n                      </Col>\r\n                    </Row>\r\n                    <FormControl fullWidth>\r\n                      <label>Description:</label>\r\n                      <div>\r\n                        <ReactQuill\r\n                          theme=\"snow\" // Specify the theme (optional)\r\n                          value={v1.description}\r\n                          onChange={(arr) => {\r\n                            handleDescriptionChange(arr);\r\n                            validateDescription(arr);\r\n                          }}\r\n                          modules={modules}\r\n                        />\r\n                      </div>\r\n\r\n                      <FormHelperText style={{ color: 'red', height: '22px' }}>\r\n                        {isDescriptionError && descriptionErrorMsg}\r\n                      </FormHelperText>\r\n                    </FormControl>\r\n                    <Row>\r\n                      <Col xs={12} md={6}>\r\n                        <TextField\r\n                          autoFocus\r\n                          margin=\"dense\"\r\n                          id=\"authorname\"\r\n                          label=\"AuthorName\"\r\n                          type=\"text\"\r\n                          fullWidth\r\n                          variant=\"outlined\"\r\n                          name=\"authorName\"\r\n                          value={v1.authorName}\r\n                          onChange={(arr) => {\r\n                            handleChange(arr);\r\n                          }}\r\n                          required={true}\r\n                        />\r\n                      </Col>\r\n                      <Col xs={12} md={6} style={{ paddingTop: '8px' }}>\r\n                        <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n                          <DatePicker\r\n                            label=\"Publish Date\"\r\n                            openTo=\"day\"\r\n                            views={['year', 'month', 'day']}\r\n                            value={v1.publishDate}\r\n                            maxDate={v1.validTo}\r\n                            onChange={(newValue) => {\r\n                              setValidateFromValue(newValue);\r\n                            }}\r\n                            renderInput={(params) => <TextField {...params} />}\r\n                          />\r\n                        </LocalizationProvider>\r\n                      </Col>\r\n                    </Row>\r\n                    <Row>\r\n                      <Col xs={12}>\r\n                        {/* <Card sx={{ my: 1 }} style={{ height: 'auto' }}>\r\n                                                                <CardHeader title=\"Value List\" /> */}\r\n\r\n                        {/* <InputLabel id=\"value List\" style={{ color: '#223354', fontWeight: '700', fontSize: '15px', margin: '13px 0px' }}>\r\n                                                                        Value List\r\n                                                                    </InputLabel> */}\r\n\r\n                        <FormGroup style={{ display: 'flex' }}>\r\n                          <TextField\r\n                            autoFocus\r\n                            margin=\"dense\"\r\n                            id=\"tags\"\r\n                            label=\"Tags\"\r\n                            type=\"text\"\r\n                            fullWidth\r\n                            variant=\"outlined\"\r\n                            name=\"singleTag\"\r\n                            value={singleTag}\r\n                            onChange={(arr) => {\r\n                              handleTagsInputChange(arr);\r\n                              validateTags(arr);\r\n                            }}\r\n                          />\r\n                          <Button\r\n                            sx={{ mt: 0.5 }}\r\n                            variant=\"outlined\"\r\n                            onClick={handleAddTags}\r\n                            style={{\r\n                              border: '0px',\r\n                              borderLeft: '1px solid #ced4da',\r\n                              borderRadius: '0px',\r\n                              margin: '13px 0px 8px -68px'\r\n                            }}\r\n                          >\r\n                            Add\r\n                          </Button>\r\n                        </FormGroup>\r\n                        <FormHelperText\r\n                          style={{ color: 'red', height: '22px' }}\r\n                        >\r\n                          {isTagsError && tagsErrorMsg}\r\n                        </FormHelperText>\r\n\r\n                        {arrayTags && arrayTags.length > 0 && (\r\n                          <Typography\r\n                            style={{ display: 'flex', flexWrap: 'wrap' }}\r\n                          >\r\n                            {arrayTags.map((value, index) => (\r\n                              <Typography\r\n                                key={index}\r\n                                style={{\r\n                                  // paddingLeft: '4%',\r\n                                  // paddingTop: '1.4%',\r\n                                  paddingBottom: '1.4%',\r\n                                  paddingRight: '1.4%'\r\n                                }}\r\n                              >\r\n                                <Chip\r\n                                  key={index}\r\n                                  label={value}\r\n                                  onDelete={(e) => {\r\n                                    handleDeleteTags(index);\r\n                                  }}\r\n                                >\r\n                                  {value}\r\n                                </Chip>\r\n                              </Typography>\r\n                            ))}\r\n                          </Typography>\r\n                        )}\r\n                      </Col>\r\n                    </Row>\r\n                  </DialogContent>\r\n                  <Box\r\n                    sx={{\r\n                      display: 'flex',\r\n                      justifyContent: 'end',\r\n                      p: '8px'\r\n                    }}\r\n                  >\r\n                    <Typography>\r\n                      <Button\r\n                        onClick={handleCloseBlogDailog}\r\n                        variant=\"outlined\"\r\n                        style={{ marginRight: '10px' }}\r\n                      >\r\n                        Cancel\r\n                      </Button>\r\n                      <Button\r\n                        // disabled={credentail?.isDemoAdmin}\r\n                        onClick={(e) => {\r\n                          checkIsDemoUser(saveBlog, showSnackBar)();\r\n                        }}\r\n                        variant=\"outlined\"\r\n                        style={{ marginRight: '10px' }}\r\n                      >\r\n                        Save\r\n                      </Button>\r\n                    </Typography>\r\n                  </Box>\r\n                </BootstrapDialog>\r\n              </div>\r\n              <div>\r\n                <Dialog\r\n                  open={ischeck}\r\n                  onClose={handleClose}\r\n                  fullWidth\r\n                  maxWidth=\"xs\"\r\n                >\r\n                  <DialogTitle\r\n                    sx={{ m: 0, p: 2, fontSize: '20px', fontWeight: 'bolder' }}\r\n                  >\r\n                    {v1.status === 0 ? 'Inactive' : 'Active'}\r\n                  </DialogTitle>\r\n                  <DialogContent>\r\n                    <DialogContentText\r\n                      style={{ fontSize: '1rem', letterSpacing: '0.00938em' }}\r\n                    >\r\n                      {v1.status === 0\r\n                        ? 'Are you sure you want to Active?'\r\n                        : 'Are you sure you want to Inactive?'}\r\n                    </DialogContentText>\r\n                  </DialogContent>\r\n                  <DialogActions>\r\n                    <Button\r\n                      onClick={handleClose}\r\n                      variant=\"outlined\"\r\n                      style={{ marginRight: '10px' }}\r\n                    >\r\n                      Cancel\r\n                    </Button>\r\n                    <Button\r\n                      // disabled={credentail?.isDemoAdmin}\r\n                      onClick={() => checkIsDemoUser(handleSwitchCheck)()}\r\n                      variant=\"outlined\"\r\n                      style={{ marginRight: '10px' }}\r\n                    >\r\n                      Yes\r\n                    </Button>\r\n                  </DialogActions>\r\n                </Dialog>\r\n              </div>\r\n              <div>\r\n                <Dialog\r\n                  open={isdelete}\r\n                  onClose={handleClose}\r\n                  fullWidth\r\n                  maxWidth=\"xs\"\r\n                >\r\n                  <SnackbarComponent />\r\n                  <DialogTitle\r\n                    sx={{ m: 0, p: 2, fontSize: '20px', fontWeight: 'bolder' }}\r\n                  >\r\n                    Delete\r\n                  </DialogTitle>\r\n                  <DialogContent>\r\n                    <DialogContentText\r\n                      style={{ fontSize: '1rem', letterSpacing: '0.00938em' }}\r\n                    >\r\n                      Are you sure you want to Delete?\r\n                    </DialogContentText>\r\n                  </DialogContent>\r\n                  <DialogActions>\r\n                    <Button\r\n                      onClick={handleClose}\r\n                      variant=\"outlined\"\r\n                      style={{ marginRight: '10px' }}\r\n                    >\r\n                      Cancel\r\n                    </Button>\r\n                    <Button\r\n                      // disabled={credentail?.isDemoAdmin}\r\n                      onClick={() =>\r\n                        checkIsDemoUser(handleDeleteCheck, showSnackBar)()\r\n                      }\r\n                      variant=\"outlined\"\r\n                      style={{ marginRight: '10px' }}\r\n                    >\r\n                      Yes\r\n                    </Button>\r\n                  </DialogActions>\r\n                </Dialog>\r\n              </div>\r\n            </>\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Blog;\r\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');\nexports.default = _default;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getTableCellUtilityClass(slot) {\n  return generateUtilityClass('MuiTableCell', slot);\n}\nconst tableCellClasses = generateUtilityClasses('MuiTableCell', ['root', 'head', 'body', 'footer', 'sizeSmall', 'sizeMedium', 'paddingCheckbox', 'paddingNone', 'alignLeft', 'alignCenter', 'alignRight', 'alignJustify', 'stickyHeader']);\nexport default tableCellClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"align\", \"className\", \"component\", \"padding\", \"scope\", \"size\", \"sortDirection\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { darken, alpha, lighten } from '@mui/system/colorManipulator';\nimport capitalize from '../utils/capitalize';\nimport TableContext from '../Table/TableContext';\nimport Tablelvl2Context from '../Table/Tablelvl2Context';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport styled from '../styles/styled';\nimport tableCellClasses, { getTableCellUtilityClass } from './tableCellClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    variant,\n    align,\n    padding,\n    size,\n    stickyHeader\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, stickyHeader && 'stickyHeader', align !== 'inherit' && `align${capitalize(align)}`, padding !== 'normal' && `padding${capitalize(padding)}`, `size${capitalize(size)}`]\n  };\n  return composeClasses(slots, getTableCellUtilityClass, classes);\n};\nconst TableCellRoot = styled('td', {\n  name: 'MuiTableCell',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[ownerState.variant], styles[`size${capitalize(ownerState.size)}`], ownerState.padding !== 'normal' && styles[`padding${capitalize(ownerState.padding)}`], ownerState.align !== 'inherit' && styles[`align${capitalize(ownerState.align)}`], ownerState.stickyHeader && styles.stickyHeader];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({}, theme.typography.body2, {\n  display: 'table-cell',\n  verticalAlign: 'inherit',\n  // Workaround for a rendering bug with spanned columns in Chrome 62.0.\n  // Removes the alpha (sets it to 1), and lightens or darkens the theme color.\n  borderBottom: theme.vars ? `1px solid ${theme.vars.palette.TableCell.border}` : `1px solid\n    ${theme.palette.mode === 'light' ? lighten(alpha(theme.palette.divider, 1), 0.88) : darken(alpha(theme.palette.divider, 1), 0.68)}`,\n  textAlign: 'left',\n  padding: 16\n}, ownerState.variant === 'head' && {\n  color: (theme.vars || theme).palette.text.primary,\n  lineHeight: theme.typography.pxToRem(24),\n  fontWeight: theme.typography.fontWeightMedium\n}, ownerState.variant === 'body' && {\n  color: (theme.vars || theme).palette.text.primary\n}, ownerState.variant === 'footer' && {\n  color: (theme.vars || theme).palette.text.secondary,\n  lineHeight: theme.typography.pxToRem(21),\n  fontSize: theme.typography.pxToRem(12)\n}, ownerState.size === 'small' && {\n  padding: '6px 16px',\n  [`&.${tableCellClasses.paddingCheckbox}`]: {\n    width: 24,\n    // prevent the checkbox column from growing\n    padding: '0 12px 0 16px',\n    '& > *': {\n      padding: 0\n    }\n  }\n}, ownerState.padding === 'checkbox' && {\n  width: 48,\n  // prevent the checkbox column from growing\n  padding: '0 0 0 4px'\n}, ownerState.padding === 'none' && {\n  padding: 0\n}, ownerState.align === 'left' && {\n  textAlign: 'left'\n}, ownerState.align === 'center' && {\n  textAlign: 'center'\n}, ownerState.align === 'right' && {\n  textAlign: 'right',\n  flexDirection: 'row-reverse'\n}, ownerState.align === 'justify' && {\n  textAlign: 'justify'\n}, ownerState.stickyHeader && {\n  position: 'sticky',\n  top: 0,\n  zIndex: 2,\n  backgroundColor: (theme.vars || theme).palette.background.default\n}));\n\n/**\n * The component renders a `<th>` element when the parent context is a header\n * or otherwise a `<td>` element.\n */\nconst TableCell = /*#__PURE__*/React.forwardRef(function TableCell(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiTableCell'\n  });\n  const {\n      align = 'inherit',\n      className,\n      component: componentProp,\n      padding: paddingProp,\n      scope: scopeProp,\n      size: sizeProp,\n      sortDirection,\n      variant: variantProp\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const table = React.useContext(TableContext);\n  const tablelvl2 = React.useContext(Tablelvl2Context);\n  const isHeadCell = tablelvl2 && tablelvl2.variant === 'head';\n  let component;\n  if (componentProp) {\n    component = componentProp;\n  } else {\n    component = isHeadCell ? 'th' : 'td';\n  }\n  let scope = scopeProp;\n  // scope is not a valid attribute for <td/> elements.\n  // source: https://html.spec.whatwg.org/multipage/tables.html#the-td-element\n  if (component === 'td') {\n    scope = undefined;\n  } else if (!scope && isHeadCell) {\n    scope = 'col';\n  }\n  const variant = variantProp || tablelvl2 && tablelvl2.variant;\n  const ownerState = _extends({}, props, {\n    align,\n    component,\n    padding: paddingProp || (table && table.padding ? table.padding : 'normal'),\n    size: sizeProp || (table && table.size ? table.size : 'medium'),\n    sortDirection,\n    stickyHeader: variant === 'head' && table && table.stickyHeader,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  let ariaSort = null;\n  if (sortDirection) {\n    ariaSort = sortDirection === 'asc' ? 'ascending' : 'descending';\n  }\n  return /*#__PURE__*/_jsx(TableCellRoot, _extends({\n    as: component,\n    ref: ref,\n    className: clsx(classes.root, className),\n    \"aria-sort\": ariaSort,\n    scope: scope,\n    ownerState: ownerState\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? TableCell.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * Set the text-align on the table cell content.\n   *\n   * Monetary or generally number fields **should be right aligned** as that allows\n   * you to add them up quickly in your head without having to worry about decimals.\n   * @default 'inherit'\n   */\n  align: PropTypes.oneOf(['center', 'inherit', 'justify', 'left', 'right']),\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * Sets the padding applied to the cell.\n   * The prop defaults to the value (`'default'`) inherited from the parent Table component.\n   */\n  padding: PropTypes.oneOf(['checkbox', 'none', 'normal']),\n  /**\n   * Set scope attribute.\n   */\n  scope: PropTypes.string,\n  /**\n   * Specify the size of the cell.\n   * The prop defaults to the value (`'medium'`) inherited from the parent Table component.\n   */\n  size: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.string]),\n  /**\n   * Set aria-sort direction.\n   */\n  sortDirection: PropTypes.oneOf(['asc', 'desc', false]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * Specify the cell type.\n   * The prop defaults to the value inherited from the parent TableHead, TableBody, or TableFooter components.\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['body', 'footer', 'head']), PropTypes.string])\n} : void 0;\nexport default TableCell;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getTableContainerUtilityClass(slot) {\n  return generateUtilityClass('MuiTableContainer', slot);\n}\nconst tableContainerClasses = generateUtilityClasses('MuiTableContainer', ['root']);\nexport default tableContainerClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport styled from '../styles/styled';\nimport { getTableContainerUtilityClass } from './tableContainerClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getTableContainerUtilityClass, classes);\n};\nconst TableContainerRoot = styled('div', {\n  name: 'MuiTableContainer',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  width: '100%',\n  overflowX: 'auto'\n});\nconst TableContainer = /*#__PURE__*/React.forwardRef(function TableContainer(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiTableContainer'\n  });\n  const {\n      className,\n      component = 'div'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    component\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(TableContainerRoot, _extends({\n    ref: ref,\n    as: component,\n    className: clsx(classes.root, className),\n    ownerState: ownerState\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? TableContainer.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component, normally `Table`.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default TableContainer;","'use client';\n\nimport * as React from 'react';\n\n/**\n * @ignore - internal component.\n */\nconst TableContext = /*#__PURE__*/React.createContext();\nif (process.env.NODE_ENV !== 'production') {\n  TableContext.displayName = 'TableContext';\n}\nexport default TableContext;","import * as React from 'react';\n\n/**\n * @ignore - internal component.\n */\nconst Tablelvl2Context = /*#__PURE__*/React.createContext();\nif (process.env.NODE_ENV !== 'production') {\n  Tablelvl2Context.displayName = 'Tablelvl2Context';\n}\nexport default Tablelvl2Context;"],"names":["PageTitle","styled","Box","_ref","theme","spacing","_ref2","children","_jsx","className","Container","maxWidth","props","title","modules","toolbar","container","header","list","script","indent","direction","size","color","background","font","align","BootstrapDialog","Dialog","padding","height","BootstrapDialogTitle","onClose","other","_jsxs","DialogTitle","sx","m","p","fontSize","fontWeight","IconButton","onClick","position","right","top","palette","grey","CloseIcon","initialState","id","description","tags","authorName","image","publishDate","search","setSearch","useState","navigate","useNavigate","credentail","setCredentail","v1","setV1","React","blogs","setBlogs","isOpen","setIsOpen","coverImage","setCoverImage","page","setPage","limit","setLimit","row","setRow","ischeck","setIsCheck","isdelete","setIsDelete","isTitleError","setIsTitleError","titleErrorMsg","setTitleErrorMsg","isDescriptionError","setIsDescriptionError","descriptionErrorMsg","setDescriptionErrorMsg","isTagsError","setIsTagsError","tagsErrorMsg","setTagsErrorMsg","isImageError","setIsImageError","imageErrorMsg","setImageErrorMsg","isLoading","setIsLoading","singleTag","setSingleTag","arrayTags","setArrayTags","apiUrl","setApiUrl","isReadPermission","setIsReadPermission","isWritePermission","setIsWritePermission","isEditPermission","setIsEditPermission","isDeletePermission","setIsDeletePermission","showSnackBar","SnackbarComponent","useSnackbar","dateFormat","sessionStorage","getItem","storedDateFormat","JSON","parse","useRef","cred","localStorage","roleId","ind","pagePermissions","findIndex","c","isAddPermission","loadData","loadjson","async","res","fetch","url","json","getData","startIndex","fetchRecord","token","refreshToken","obj","name","APIservice","httpPost","recordList","length","i","formatdate","Date","toLocaleDateString","totalRecords","status","clear","toast","error","message","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","POSITION","TOP_RIGHT","handleChange","e","value","target","reg","RegExp","handleClickisAdd","handleCloseBlogDailog","saveBlog","flag","preventDefault","validateForm","val","isActive","isDelete","success","handleSwitchCheck","handleDeleteCheck","handleClose","useTheme","_Fragment","ToastContainer","style","left","newestOnTop","rtl","pauseOnFocusLoss","Helmet","PageTitleWrapper","Grid","justifyContent","alignItems","item","Stack","Breadcrumbs","Link","to","display","HomeIcon","Typography","variant","Button","mt","xs","md","AddTwoToneIcon","FormControl","lg","sm","TextField","onChange","searchData","label","InputProps","startAdornment","InputAdornment","SearchIcon","Card","Loader1","Divider","TableContainer","Row","width","map","arr","index","Col","hover","marginBottom","Chip","src","alt","objectFit","format","dangerouslySetInnerHTML","__html","cursor","element","handleClickVisible","Tooltip","arrow","Switch","checked","checkIsDemoUser","handleSwitch","inputProps","colors","primary","lighter","main","valueArray","includes","split","console","log","handleClickOpenEdit","EditTwoToneIcon","handleDelete","DeleteIcon","TablePagination","component","count","onPageChange","handlePageChange","event","newPage","onRowsPerPageChange","parseInt","rowsPerPage","rowsPerPageOptions","Paper","textAlign","verticalAlign","boxShadow","paragraph","open","PaperProps","fullWidth","DialogContent","dividers","FormGroup","type","accept","file","files","reader","FileReader","onload","result","toString","readAsDataURL","onFileChange","htmlFor","FormHelperText","autoFocus","margin","validateTitle","required","ReactQuill","validateDescription","paddingTop","LocalizationProvider","dateAdapter","AdapterDateFns","DatePicker","openTo","views","maxDate","validTo","newValue","dateVal","renderInput","params","handleTagsInputChange","validateTags","handleAddTags","test","trim","push","border","borderLeft","borderRadius","flexWrap","paddingBottom","paddingRight","onDelete","indexToRemove","filter","_","marginRight","DialogContentText","letterSpacing","DialogActions","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d","getTableCellUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","TableCellRoot","overridesResolver","styles","ownerState","root","capitalize","stickyHeader","_extends","typography","body2","borderBottom","vars","TableCell","mode","lighten","alpha","divider","darken","text","lineHeight","pxToRem","fontWeightMedium","secondary","tableCellClasses","paddingCheckbox","flexDirection","zIndex","backgroundColor","inProps","ref","useDefaultProps","componentProp","paddingProp","scope","scopeProp","sizeProp","sortDirection","variantProp","_objectWithoutPropertiesLoose","table","TableContext","tablelvl2","Tablelvl2Context","isHeadCell","classes","slots","composeClasses","useUtilityClasses","ariaSort","as","clsx","getTableContainerUtilityClass","TableContainerRoot","overflowX"],"sourceRoot":""}