{"version":3,"file":"static/js/8304.338efe87.chunk.js","mappings":"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","sources":["components/PageTitleWrapper/index.tsx","content/Loader.tsx","content/user/ApplicationsUser.tsx","../node_modules/@mui/icons-material/AdminPanelSettings.js","../node_modules/@mui/icons-material/Check.js","../node_modules/@mui/icons-material/Delete.js","../node_modules/@mui/icons-material/EditTwoTone.js","../node_modules/@mui/icons-material/Search.js","../node_modules/@mui/material/DialogContentText/dialogContentTextClasses.js","../node_modules/@mui/material/DialogContentText/DialogContentText.js","../node_modules/@mui/material/TableHead/tableHeadClasses.js","../node_modules/@mui/material/TableHead/TableHead.js","../node_modules/@mui/material/Table/tableClasses.js","../node_modules/@mui/material/Table/Table.js"],"sourcesContent":["import { FC, ReactNode } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Box, Container, styled } from '@mui/material';\r\n\r\nconst PageTitle = styled(Box)(\r\n  ({ theme }) => `\r\n        padding: ${theme.spacing(1)};\r\n`\r\n);\r\n\r\ninterface PageTitleWrapperProps {\r\n  children?: ReactNode;\r\n}\r\n\r\nconst PageTitleWrapper: FC<PageTitleWrapperProps> = ({ children }) => {\r\n  return (\r\n    <PageTitle className=\"MuiPageTitle-wrapper\">\r\n      <Container maxWidth=\"lg\">{children}</Container>\r\n    </PageTitle>\r\n  );\r\n};\r\n\r\nPageTitleWrapper.propTypes = {\r\n  children: PropTypes.node.isRequired\r\n};\r\n\r\nexport default PageTitleWrapper;\r\n","import React from 'react';\r\nimport './Loader.css';\r\n\r\ninterface Props {\r\n  title: string;\r\n}\r\n\r\nconst Loader1 = (props: Props) => {\r\n  const { title } = props;\r\n  return (\r\n    // <div className=\"loader\">\r\n    //     <img className=\"img\" src={loader} alt=\"\" />\r\n    //     <span>{title}</span>\r\n    // </div>\r\n    <div className=\"spinner-container\">\r\n      <div className=\"loading-spinner\"></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loader1;\r\n","import { Helmet } from 'react-helmet-async';\r\nimport HomeIcon from '@mui/icons-material/Home';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport LockIcon from '@mui/icons-material/Lock';\r\nimport VisibilityIcon from '@mui/icons-material/Visibility';\r\nimport CheckIcon from '@mui/icons-material/Check';\r\nimport PageTitleWrapper from '../../components/PageTitleWrapper';\r\nimport HowToRegIcon from '@mui/icons-material/HowToReg';\r\nimport AdminPanelSettingsIcon from '@mui/icons-material/AdminPanelSettings';\r\nimport {\r\n  Grid,\r\n  Container,\r\n  Avatar,\r\n  Box,\r\n  Breadcrumbs,\r\n  Button,\r\n  Card,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n  Divider,\r\n  IconButton,\r\n  Stack,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  Tooltip,\r\n  Typography,\r\n  useTheme,\r\n  FormControl,\r\n  InputAdornment,\r\n  TextField,\r\n  Paper,\r\n  colors\r\n} from '@mui/material';\r\nimport Footer from 'src/components/Footer';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport EditTwoToneIcon from '@mui/icons-material/EditTwoTone';\r\nimport React, { useState, ChangeEvent, useEffect } from 'react';\r\nimport APIservice from 'src/utils/APIservice';\r\nimport Loader1 from '../Loader';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport './../smallScreen.css';\r\nimport { AppUser, AppUserDocuments } from 'src/models/appuser';\r\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\r\nimport Menu from '@mui/material/Menu';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport checkIsDemoUser from 'src/utils/IsDemoUserCheck';\r\nimport { useSnackbar } from '../useSnackbar';\r\n\r\nfunction ApplicationsUser() {\r\n  const [page, setPage] = useState<number>(0);\r\n  const [limit, setLimit] = useState<number>(10);\r\n  const [row, setRow] = useState<number>(10);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [users, setUsers] = React.useState<AppUser[]>([]);\r\n  const [ischeckUnBlock, setIsCheckUnBlock] = useState(false);\r\n  const [unblock, setUnblock] = useState<any>([]);\r\n  let [search, setSearch] = useState('');\r\n  let [credentail, setCredentail] = useState<any>();\r\n\r\n  const [isDocumentUpload, setIsDocumentUpload] = useState(false);\r\n  const [userDocuments, setUserDocuments] = React.useState<AppUserDocuments[]>(\r\n    []\r\n  );\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [arrr, setArrr] = useState('');\r\n  const [isDel, setIsDel] = useState(false);\r\n  const [isEdit, setIsEdit] = useState(false);\r\n  const [isReadPermission, setIsReadPermission] = useState(true);\r\n  const [isWritePermission, setIsWritePermission] = useState(true);\r\n  const [isEditPermission, setIsEditPermission] = useState(true);\r\n  const [isDeletePermission, setIsDeletePermission] = useState(true);\r\n  const [isVerifyProfile, setVerifyProfile] = useState(false);\r\n  const [userId, setUserId] = useState();\r\n  const [imageUrl, setImageUrl] = useState();\r\n  const [isUserProfilePicApprove, setUserProfilePicApproval] = useState(false);\r\n  const [isProfileConfirmation, setIsProfileConfirmationDialog] =\r\n    useState(false);\r\n  const navigate = useNavigate();\r\n  const [isVerified, setIsVerified] = useState();\r\n  const { showSnackBar, SnackbarComponent } = useSnackbar();\r\n\r\n  let [apiUrl, setApiUrl] = useState<any>();\r\n\r\n  const handleClickVisible = (element: any) => {\r\n    let id = element?.id;\r\n    navigate(`/admin/appuser/view/${id}`);\r\n  };\r\n\r\n  const handleEdit = (element: any) => {\r\n    debugger;\r\n    let id = element?.id;\r\n    navigate(`/admin/appuser/addappuser/${id}`);\r\n  };\r\n\r\n  const handlerEdit = (element) => {\r\n    // setIsEdit(true);\r\n    localStorage.setItem('isEdit', 'true');\r\n\r\n    handleEdit(element);\r\n  };\r\n\r\n  const handleOpenDeleteDialog = (arr: any) => {\r\n    debugger;\r\n    let obj = {\r\n      arr\r\n      // packageDurationId: arr1\r\n    };\r\n    // setPremiumAccount(obj);\r\n    setArrr(arr);\r\n    setIsOpen(true);\r\n    // setIsDel(true);\r\n  };\r\n\r\n  const handleDelClose = () => {\r\n    // setIsCheck(false);\r\n    setIsOpen(false);\r\n    setIsDel(false);\r\n  };\r\n  const handleDelete = async (element: any) => {\r\n    debugger;\r\n    // let userId = element?.id;\r\n    const token = localStorage.getItem('SessionToken');\r\n    let obj = {\r\n      userId: element?.id\r\n    };\r\n    const res = await APIservice.httpPost(\r\n      'api/admin/users/deleteUserData',\r\n      obj,\r\n      token\r\n    );\r\n    if (res && res.status === 200) {\r\n      toast.error(res.recordList, {\r\n        autoClose: 6000,\r\n        hideProgressBar: true,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: 'colored'\r\n      });\r\n      setIsDel((prev) => !prev);\r\n      // setIsDel(true)\r\n      setIsOpen(false);\r\n    }\r\n  };\r\n\r\n  const handleVerifyProfilePic = (element: any) => {\r\n    let id = element?.id;\r\n    let imageUrl = element?.imageUrl;\r\n    setUserId(id);\r\n    setVerifyProfile(true);\r\n    setImageUrl(imageUrl);\r\n  };\r\n  const ITEM_HEIGHT = 48;\r\n\r\n  React.useEffect(() => {\r\n    let cred = JSON.parse(localStorage.getItem('Credentials'));\r\n    let isUserProfilePicApprove = JSON.parse(\r\n      localStorage.getItem('isUserProfilePicApprove')\r\n    );\r\n    setCredentail(cred);\r\n    setUserProfilePicApproval(isUserProfilePicApprove);\r\n    if (cred) {\r\n      if (cred.roleId != 1) {\r\n        let ind = cred.pagePermissions.findIndex(\r\n          (c: any) => c.title === 'App Users'\r\n        );\r\n        if (ind >= 0) {\r\n          setIsReadPermission(cred.pagePermissions[ind].isReadPermission);\r\n          setIsWritePermission(cred.pagePermissions[ind].isAddPermission);\r\n          setIsEditPermission(cred.pagePermissions[ind].isEditPermission);\r\n          setIsDeletePermission(cred.pagePermissions[ind].isDeletePermission);\r\n\r\n          if (cred.pagePermissions[ind].isReadPermission) getData(page, limit);\r\n          loadjson();\r\n        }\r\n      } else {\r\n        getData(page, limit);\r\n        loadjson();\r\n      }\r\n    }\r\n  }, [isDel]);\r\n\r\n  const dateData = localStorage.getItem('DateFormat');\r\n\r\n  const loadjson = async () => {\r\n    let res = await fetch('/admin/variable.json'); // Adjust the file path as needed\r\n    let url = await res.json();\r\n    console.log(url);\r\n    setApiUrl(url);\r\n    apiUrl = url;\r\n  };\r\n\r\n  const getData = async (startIndex: number, fetchRecord: number) => {\r\n    try {\r\n      if (search) {\r\n        const token = localStorage.getItem('SessionToken');\r\n        const refreshToken = localStorage.getItem('RefreshToken');\r\n        let obj = {\r\n          startIndex: startIndex,\r\n          fetchRecord: fetchRecord,\r\n          searchString: search ? search : ''\r\n        };\r\n        let res = await APIservice.httpPost(\r\n          '/api/admin/appUsers/getAppUsers',\r\n          obj,\r\n          token,\r\n          refreshToken\r\n        );\r\n        for (let i = 0; i < res.recordList.length; i++) {\r\n          if (\r\n            res.recordList[i].userDocuments &&\r\n            res.recordList[i].userDocuments.length > 0\r\n          ) {\r\n            res.recordList[i].isDocumentUploaded = true;\r\n            res.recordList[i].isDocumentVerified = true;\r\n            for (let j = 0; j < res.recordList[i].userDocuments.length; j++) {\r\n              res.recordList[i].userDocuments[j].isError = false;\r\n              if (!res.recordList[i].userDocuments[j].isVerified) {\r\n                res.recordList[i].isDocumentVerified = false;\r\n              }\r\n            }\r\n          } else {\r\n            res.recordList[i].isDocumentUploaded = false;\r\n          }\r\n        }\r\n        setUsers(res.recordList);\r\n        setRow(res.totalRecords);\r\n      } else {\r\n        setIsLoading(true);\r\n        const token = localStorage.getItem('SessionToken');\r\n        const refreshToken = localStorage.getItem('RefreshToken');\r\n        let obj = {\r\n          startIndex: startIndex,\r\n          fetchRecord: fetchRecord\r\n        };\r\n        let res = await APIservice.httpPost(\r\n          '/api/admin/appUsers/getAppUsers',\r\n          obj,\r\n          token,\r\n          refreshToken\r\n        );\r\n        for (let i = 0; i < res.recordList.length; i++) {\r\n          if (\r\n            res.recordList[i].userDocuments &&\r\n            res.recordList[i].userDocuments.length > 0\r\n          ) {\r\n            res.recordList[i].isDocumentUploaded = true;\r\n            res.recordList[i].isDocumentVerified = true;\r\n            for (let j = 0; j < res.recordList[i].userDocuments.length; j++) {\r\n              res.recordList[i].userDocuments[j].isError = false;\r\n              if (!res.recordList[i].userDocuments[j].isVerified) {\r\n                res.recordList[i].isDocumentVerified = false;\r\n              }\r\n            }\r\n          } else {\r\n            res.recordList[i].isDocumentUploaded = false;\r\n          }\r\n        }\r\n        setUsers(res.recordList);\r\n        setRow(res.totalRecords);\r\n        if (res && res.status == 200) {\r\n        } else if (res.status == 401) {\r\n          localStorage.clear();\r\n          navigate('/admin');\r\n        } else if (res.status == 500) {\r\n          toast.error(res.message, {\r\n            autoClose: 6000,\r\n            hideProgressBar: true,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n            theme: 'colored',\r\n            position: toast.POSITION.TOP_RIGHT\r\n          });\r\n        } else if (res.status == 400) {\r\n          toast.error(res.message, {\r\n            autoClose: 6000,\r\n            hideProgressBar: true,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n            theme: 'colored',\r\n            position: toast.POSITION.TOP_RIGHT\r\n          });\r\n        } else if (res.status == 300) {\r\n          toast.error(res.message, {\r\n            autoClose: 6000,\r\n            hideProgressBar: true,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n            theme: 'colored',\r\n            position: toast.POSITION.TOP_RIGHT\r\n          });\r\n        } else if (res.status == 404) {\r\n          toast.error(res.message, {\r\n            autoClose: 6000,\r\n            hideProgressBar: true,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n            theme: 'colored',\r\n            position: toast.POSITION.TOP_RIGHT\r\n          });\r\n        }\r\n        setIsLoading(false);\r\n      }\r\n    } catch (error) {\r\n      setIsLoading(false);\r\n      toast.error(error, {\r\n        autoClose: 6000,\r\n        hideProgressBar: true,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: 'colored',\r\n        position: toast.POSITION.TOP_RIGHT\r\n      });\r\n    }\r\n  };\r\n\r\n  const searchData = (e) => {\r\n    setSearch(e.target.value);\r\n    search = e.target.value.charAt(0).toUpperCase() + e.target.value.slice(1);\r\n    getData(page, limit);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setIsCheckUnBlock(false);\r\n  };\r\n\r\n  const handleClickUnBlock = async (id: number) => {\r\n    let obj = {\r\n      id: id\r\n    };\r\n    setUnblock(obj);\r\n    setIsCheckUnBlock(true);\r\n  };\r\n\r\n  const handleCheckUnBlock = async () => {\r\n    try {\r\n      const token = localStorage.getItem('SessionToken');\r\n      const refreshToken = localStorage.getItem('RefreshToken');\r\n      let obj = {\r\n        id: unblock.id,\r\n        status: 0\r\n      };\r\n      const res = await APIservice.httpPost(\r\n        '/api/admin/appUsers/unblockUserRequest',\r\n        obj,\r\n        token,\r\n        refreshToken\r\n      );\r\n      if (res && res.status === 200) {\r\n        setIsCheckUnBlock(false);\r\n        getData(page * limit, limit);\r\n      } else if (res.status == 401) {\r\n        navigate('/admin');\r\n        localStorage.clear();\r\n      } else if (res.status == 500) {\r\n        toast.error(res.message, {\r\n          autoClose: 6000,\r\n          hideProgressBar: true,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: 'colored',\r\n          position: toast.POSITION.TOP_RIGHT\r\n        });\r\n      } else if (res.status == 400) {\r\n        toast.error(res.message, {\r\n          autoClose: 6000,\r\n          hideProgressBar: true,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: 'colored',\r\n          position: toast.POSITION.TOP_RIGHT\r\n        });\r\n      } else if (res.status == 300) {\r\n        toast.error(res.message, {\r\n          autoClose: 6000,\r\n          hideProgressBar: true,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: 'colored',\r\n          position: toast.POSITION.TOP_RIGHT\r\n        });\r\n      } else if (res.status == 404) {\r\n        toast.error(res.message, {\r\n          autoClose: 6000,\r\n          hideProgressBar: true,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: 'colored',\r\n          position: toast.POSITION.TOP_RIGHT\r\n        });\r\n      }\r\n    } catch (error) {\r\n      toast.error(error, {\r\n        autoClose: 6000,\r\n        hideProgressBar: true,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: 'colored',\r\n        position: toast.POSITION.TOP_RIGHT\r\n      });\r\n    }\r\n  };\r\n\r\n  const handlePageChange = (event: any, newPage: number): void => {\r\n    setPage(newPage);\r\n    getData(newPage * limit, limit);\r\n  };\r\n\r\n  const handleLimitChange = (event: ChangeEvent<HTMLInputElement>): void => {\r\n    setLimit(parseInt(event.target.value));\r\n    setPage(0);\r\n    getData(0, parseInt(event.target.value));\r\n  };\r\n\r\n  const theme = useTheme();\r\n\r\n  const handleClickOpenDoc = async (element: AppUser) => {\r\n    setIsDocumentUpload(true);\r\n    setUserDocuments(element.userDocuments);\r\n  };\r\n\r\n  const handleDocumentUploadClose = () => {\r\n    setIsDocumentUpload(false);\r\n  };\r\n\r\n  const handleVerifyProfilePicClose = () => {\r\n    setIsProfileConfirmationDialog(false);\r\n    setVerifyProfile(false);\r\n  };\r\n\r\n  const handleApprovedDocument = async () => {\r\n    for (let i = 0; i < userDocuments.length; i++) {\r\n      const token = localStorage.getItem('SessionToken');\r\n      const refreshToken = localStorage.getItem('RefreshToken');\r\n      let obj = {\r\n        id: userDocuments[i].id,\r\n        isVerified: true\r\n      };\r\n      let res = await APIservice.httpPost(\r\n        '/api/admin/appUsers/approveDocument',\r\n        obj,\r\n        token,\r\n        refreshToken\r\n      );\r\n      if (res && res.status === 200) {\r\n        handleDocumentUploadClose();\r\n        getData(page, limit);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleVerifyProfile = async () => {\r\n    const token = localStorage.getItem('SessionToken');\r\n    const refreshToken = localStorage.getItem('RefreshToken');\r\n    let obj = {\r\n      id: userId,\r\n      isVerified: isVerified\r\n    };\r\n    let res = await APIservice.httpPost(\r\n      '/api/admin/appUsers/verifyUserProfilePic',\r\n      obj,\r\n      token,\r\n      refreshToken\r\n    );\r\n    if (res && res.status === 200) {\r\n      handleVerifyProfilePicClose();\r\n      let msg = `Profile ` + (isVerified ? 'Approved' : 'Rejected');\r\n      toast.success(msg);\r\n      getData(page, limit);\r\n    }\r\n  };\r\n\r\n  const handleProfileConfirmation = async (isVerified) => {\r\n    setIsVerified(isVerified);\r\n    setIsProfileConfirmationDialog(true);\r\n    setVerifyProfile(false);\r\n  };\r\n  const [errorArray, setErrorArray] = useState<boolean[]>([]);\r\n  const handleImageError = (ele: AppUserDocuments, index: number) => {\r\n    setErrorArray((prevErrors) => {\r\n      const newErrors = [...prevErrors];\r\n      newErrors[index] = true;\r\n      return newErrors;\r\n    });\r\n  };\r\n\r\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\r\n  const open = Boolean(anchorEl);\r\n  const handleClick = (event: React.MouseEvent<HTMLElement>) => {\r\n    debugger;\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n  const handleCloseMenu = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ToastContainer\r\n        style={{ top: '10%', left: '80%' }}\r\n        autoClose={6000}\r\n        hideProgressBar={true}\r\n        newestOnTop={false}\r\n        closeOnClick\r\n        rtl={false}\r\n        pauseOnFocusLoss\r\n        draggable\r\n        pauseOnHover\r\n      />\r\n      <Helmet>\r\n        <title>App Users</title>\r\n      </Helmet>\r\n      <PageTitleWrapper>\r\n        <Box pt={1.2} pb={1.1} pl={1}>\r\n          <Grid\r\n            container\r\n            justifyContent=\"space-between\"\r\n            alignItems=\"center\"\r\n            spacing={1}\r\n          >\r\n            <Grid item>\r\n              {/* <Typography variant=\"h3\" component=\"h3\" gutterBottom>\r\n                App Users\r\n              </Typography> */}\r\n              <Stack alignItems=\"left\" justifyContent=\"space-between\">\r\n                <Breadcrumbs aria-label=\"breadcrumb\">\r\n                  <Link\r\n                    to=\"/admin/dashboard\"\r\n                    style={{ display: 'flex', color: 'black' }}\r\n                  >\r\n                    <HomeIcon />\r\n                  </Link>\r\n                  <Typography\r\n                    variant=\"subtitle2\"\r\n                    color=\"inherit\"\r\n                    style={{ fontWeight: 'bold' }}\r\n                  >\r\n                    {' '}\r\n                    App Users\r\n                  </Typography>\r\n                </Breadcrumbs>\r\n              </Stack>\r\n            </Grid>\r\n\r\n            <Grid item>\r\n              <Grid container spacing={1}>\r\n                <Grid item>\r\n                  {/* <Button\r\n                    variant=\"contained\"\r\n                    size=\"small\"\r\n                    sx={{ margin: '0px 4px'}}\r\n                  >\r\n                    <Link\r\n                      to=\"addappuser\"\r\n                      style={{\r\n                        textDecoration: 'none',\r\n                        color: 'white'\r\n                      }}\r\n                    >\r\n                      {' '}\r\n                      Add User{' '}\r\n                    </Link>\r\n                  </Button> */}\r\n\r\n                  <Button\r\n                    className=\"buttonLarge\"\r\n                    sx={{\r\n                      mt: { xs: 0, md: 0, padding: '8.3px', top: '3px' },\r\n                      display: 'flex',\r\n                      alignItems: 'center'\r\n                    }}\r\n                    variant=\"contained\"\r\n                    size=\"small\"\r\n                    onClick={() => {\r\n                      localStorage.setItem('isEdit', 'false');\r\n                    }}\r\n                  >\r\n                    <Link\r\n                      to=\"addappuser\"\r\n                      style={{\r\n                        textDecoration: 'none',\r\n                        color: 'white'\r\n                      }}\r\n                    >\r\n                      Add Users\r\n                    </Link>\r\n                  </Button>\r\n                </Grid>\r\n\r\n                <Grid item>\r\n                  <FormControl sx={{ mt: { xs: 0, md: 0 } }}>\r\n                    <TextField\r\n                      id=\"outlined-basic\"\r\n                      name=\"searchString\"\r\n                      value={search}\r\n                      onChange={(e) => searchData(e)}\r\n                      label=\"Search\"\r\n                      variant=\"outlined\"\r\n                      size=\"small\"\r\n                      InputProps={{\r\n                        startAdornment: (\r\n                          <InputAdornment position=\"start\">\r\n                            <SearchIcon />\r\n                          </InputAdornment>\r\n                        )\r\n                      }}\r\n                    />\r\n                  </FormControl>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </Box>\r\n      </PageTitleWrapper>\r\n      <Container maxWidth=\"lg\">\r\n        <Grid\r\n          container\r\n          direction=\"row\"\r\n          justifyContent=\"center\"\r\n          alignItems=\"stretch\"\r\n          spacing={3}\r\n        >\r\n          <Grid item xs={12}>\r\n            <>\r\n              <Card className=\"appcard\">\r\n                <div>\r\n                  {isLoading ? (\r\n                    <Loader1 title=\"Loading...\" />\r\n                  ) : (\r\n                    <>\r\n                      <Divider />\r\n                      {isReadPermission && users && users.length > 0 ? (\r\n                        <>\r\n                        <SnackbarComponent />\r\n                          <TableContainer className=\"apptableContainer\">\r\n                            <Table stickyHeader>\r\n                              <TableHead>\r\n                                <TableRow>\r\n                                  <TableCell>\r\n                                    <Typography\r\n                                      noWrap\r\n                                      style={{\r\n                                        fontSize: '13px',\r\n                                        fontWeight: 'bold',\r\n                                        marginBottom: 'none'\r\n                                      }}\r\n                                    >\r\n                                      Sr. No\r\n                                    </Typography>\r\n                                  </TableCell>\r\n                                  <TableCell align=\"left\">\r\n                                    <Typography\r\n                                      noWrap\r\n                                      style={{\r\n                                        fontSize: '13px',\r\n                                        fontWeight: 'bold',\r\n                                        marginBottom: 'none'\r\n                                      }}\r\n                                    >\r\n                                      Name\r\n                                    </Typography>\r\n                                  </TableCell>\r\n                                  <TableCell align=\"center\">\r\n                                    <Typography\r\n                                      style={{\r\n                                        fontSize: '13px',\r\n                                        fontWeight: 'bold',\r\n                                        marginBottom: 'none'\r\n                                      }}\r\n                                    >\r\n                                      Email\r\n                                    </Typography>\r\n                                  </TableCell>\r\n                                  <TableCell align=\"center\">\r\n                                    <Typography\r\n                                      style={{\r\n                                        fontSize: '13px',\r\n                                        fontWeight: 'bold',\r\n                                        marginBottom: 'none'\r\n                                      }}\r\n                                      noWrap\r\n                                    >\r\n                                      Contact No\r\n                                    </Typography>\r\n                                  </TableCell>\r\n                                  <TableCell align=\"center\">\r\n                                    <Typography\r\n                                      noWrap\r\n                                      style={{\r\n                                        fontSize: '13px',\r\n                                        fontWeight: 'bold',\r\n                                        marginBottom: 'none'\r\n                                      }}\r\n                                    >\r\n                                      Gender\r\n                                    </Typography>\r\n                                  </TableCell>\r\n                                  {/* <TableCell align=\"center\">Created Date</TableCell> */}\r\n                                  <TableCell align=\"center\">\r\n                                    <Typography\r\n                                      noWrap\r\n                                      style={{\r\n                                        fontSize: '13px',\r\n                                        fontWeight: 'bold',\r\n                                        marginBottom: 'none'\r\n                                      }}\r\n                                    >\r\n                                      Document Status\r\n                                    </Typography>\r\n                                  </TableCell>\r\n                                  <TableCell align=\"right\">\r\n                                    <Typography\r\n                                      noWrap\r\n                                      style={{\r\n                                        fontSize: '13px',\r\n                                        fontWeight: 'bold',\r\n                                        marginBottom: 'none'\r\n                                      }}\r\n                                    >\r\n                                      Actions\r\n                                    </Typography>\r\n                                  </TableCell>\r\n                                </TableRow>\r\n                              </TableHead>\r\n                              <TableBody>\r\n                                {users.map((arr: any, index: number) => {\r\n                                  return (\r\n                                    <TableRow hover key={arr.id}>\r\n                                      <TableCell>\r\n                                        <Typography\r\n                                          variant=\"body1\"\r\n                                          fontWeight=\"bold\"\r\n                                          color=\"text.primary\"\r\n                                          gutterBottom\r\n                                          noWrap\r\n                                        >\r\n                                          {page * limit + index + 1}\r\n                                        </Typography>\r\n                                      </TableCell>\r\n                                      <TableCell align=\"center\">\r\n                                        <Stack\r\n                                          direction=\"row\"\r\n                                          alignItems=\"center\"\r\n                                          spacing={2}\r\n                                        >\r\n                                          {arr.imageUrl ? (\r\n                                            <Avatar src={arr.imageUrl}></Avatar>\r\n                                          ) : (\r\n                                            <Avatar>\r\n                                              {arr.firstName\r\n                                                ? arr.firstName[0]\r\n                                                : null}\r\n                                            </Avatar>\r\n                                          )}\r\n                                          <Typography\r\n                                            variant=\"body1\"\r\n                                            fontWeight=\"bold\"\r\n                                            color=\"text.primary\"\r\n                                            gutterBottom\r\n                                            noWrap\r\n                                          >\r\n                                            {arr.firstName} {arr.middleName}{' '}\r\n                                            {arr.lastName}\r\n                                          </Typography>\r\n                                        </Stack>\r\n                                        {arr.imageId &&\r\n                                        arr.isVerifyProfilePic &&\r\n                                        isUserProfilePicApprove ? (\r\n                                          <>\r\n                                            <Box\r\n                                              sx={{\r\n                                                backgroundColor: '#78b144',\r\n                                                padding: '10px',\r\n                                                borderRadius: '50%',\r\n                                                height: '20px',\r\n                                                width: '20px',\r\n                                                top: '-16px',\r\n                                                position: 'relative',\r\n                                                right: '-20px',\r\n                                                display: 'flex',\r\n                                                alignItems: 'center',\r\n                                                justifyContent: 'center'\r\n                                              }}\r\n                                            >\r\n                                              <CheckIcon\r\n                                                sx={{\r\n                                                  'font-size': '16px',\r\n                                                  color: '#fff'\r\n                                                }}\r\n                                              />\r\n                                            </Box>\r\n                                          </>\r\n                                        ) : (\r\n                                          <></>\r\n                                        )}\r\n                                      </TableCell>\r\n                                      <TableCell align=\"center\">\r\n                                        <Typography\r\n                                          variant=\"body1\"\r\n                                          fontWeight=\"bold\"\r\n                                          color=\"text.primary\"\r\n                                          gutterBottom\r\n                                          noWrap\r\n                                        >\r\n                                          {arr.email}\r\n                                        </Typography>\r\n                                      </TableCell>\r\n                                      <TableCell align=\"center\">\r\n                                        <Typography\r\n                                          variant=\"body1\"\r\n                                          fontWeight=\"bold\"\r\n                                          color=\"text.primary\"\r\n                                          gutterBottom\r\n                                          noWrap\r\n                                        >\r\n                                          {arr.contactNo ? arr.contactNo : '--'}\r\n                                        </Typography>\r\n                                      </TableCell>\r\n                                      <TableCell align=\"center\">\r\n                                        <Typography\r\n                                          variant=\"body1\"\r\n                                          fontWeight=\"bold\"\r\n                                          color=\"text.primary\"\r\n                                          gutterBottom\r\n                                          noWrap\r\n                                        >\r\n                                          {arr.gender}\r\n                                        </Typography>\r\n                                      </TableCell>\r\n                                      <TableCell align=\"right\">\r\n                                        <Typography\r\n                                          variant=\"body1\"\r\n                                          fontWeight=\"bold\"\r\n                                          color=\"text.primary\"\r\n                                          gutterBottom\r\n                                          noWrap\r\n                                        >\r\n                                          {arr.isDocumentUploaded ? (\r\n                                            <>\r\n                                              {isEditPermission ? (\r\n                                                <>\r\n                                                  {arr.isDocumentVerified ? (\r\n                                                    <span\r\n                                                      style={{\r\n                                                        color: '#1fb71f'\r\n                                                      }}\r\n                                                    >\r\n                                                      Verified\r\n                                                    </span>\r\n                                                  ) : (\r\n                                                    <Button\r\n                                                      sx={{ float: 'right' }}\r\n                                                      className=\"buttonLarge\"\r\n                                                      variant=\"contained\"\r\n                                                      onClick={() => {\r\n                                                        handleClickOpenDoc(arr);\r\n                                                      }}\r\n                                                      size=\"small\"\r\n                                                    >\r\n                                                      Verify Doc\r\n                                                    </Button>\r\n                                                  )}\r\n                                                </>\r\n                                              ) : (\r\n                                                <></>\r\n                                              )}\r\n                                            </>\r\n                                          ) : (\r\n                                            <span style={{ color: '#ff0000' }}>\r\n                                              Not Uploaded\r\n                                            </span>\r\n                                          )}\r\n                                        </Typography>\r\n                                      </TableCell>\r\n                                      <TableCell\r\n                                        align=\"right\"\r\n                                        sx={{ diaplay: 'flex' }}\r\n                                      >\r\n                                        <Tooltip title=\"Edit \" arrow>\r\n                                          <IconButton\r\n                                            sx={{\r\n                                              '&:hover': {\r\n                                                background:\r\n                                                  theme.colors.error.lighter\r\n                                              },\r\n                                              color: theme.palette.primary.main\r\n                                            }}\r\n                                            color=\"inherit\"\r\n                                            size=\"small\"\r\n                                            onClick={() => handlerEdit(arr)}\r\n                                          >\r\n                                            <EditTwoToneIcon fontSize=\"small\" />\r\n                                          </IconButton>\r\n                                        </Tooltip>\r\n\r\n                                        <Tooltip title=\"Delete\" arrow>\r\n                                          <IconButton\r\n                                            sx={{\r\n                                              '&:hover': {\r\n                                                background:\r\n                                                  theme.colors.error.lighter\r\n                                              },\r\n                                              color: theme.palette.primary.main\r\n                                            }}\r\n                                            color=\"inherit\"\r\n                                            size=\"small\"\r\n                                            onClick={(e) =>\r\n                                              checkIsDemoUser(() =>handleOpenDeleteDialog(arr), showSnackBar)()\r\n                                            }\r\n                                            \r\n                                          >\r\n                                            <DeleteIcon fontSize=\"small\" />\r\n                                          </IconButton>\r\n                                        </Tooltip>\r\n\r\n                                        <Tooltip title=\"View\" arrow>\r\n                                          <IconButton\r\n                                            sx={{\r\n                                              '&:hover': {\r\n                                                background:\r\n                                                  theme.colors.error.lighter\r\n                                              },\r\n                                              color: theme.palette.primary.main\r\n                                            }}\r\n                                            color=\"inherit\"\r\n                                            size=\"small\"\r\n                                            onClick={(e) => {\r\n                                              handleClickVisible(arr);\r\n                                            }}\r\n                                          >\r\n                                            <VisibilityIcon />\r\n                                          </IconButton>\r\n                                        </Tooltip>\r\n                                        {!arr.isVerifyProfilePic &&\r\n                                        arr.imageId &&\r\n                                        isUserProfilePicApprove ? (\r\n                                          <>\r\n                                            <Tooltip\r\n                                              title=\"Verify User Profile Pic\"\r\n                                              arrow\r\n                                            >\r\n                                              <IconButton\r\n                                                sx={{\r\n                                                  '&:hover': {\r\n                                                    background:\r\n                                                      theme.colors.error.lighter\r\n                                                  },\r\n                                                  color:\r\n                                                    theme.palette.primary.main\r\n                                                }}\r\n                                                color=\"inherit\"\r\n                                                size=\"small\"\r\n                                                onClick={(e) => {\r\n                                                  checkIsDemoUser(\r\n                                                    () =>\r\n                                                      handleVerifyProfilePic(\r\n                                                        arr\r\n                                                      ),\r\n                                                    showSnackBar\r\n                                                  )();\r\n                                                }}\r\n                                              >\r\n                                                {/* <HowToRegIcon /> */}\r\n                                                <AdminPanelSettingsIcon />\r\n                                              </IconButton>\r\n                                            </Tooltip>\r\n                                          </>\r\n                                        ) : (\r\n                                          <></>\r\n                                        )}\r\n                                        {false ? (\r\n                                          <>\r\n                                            {arr.isDisable === 1 && (\r\n                                              <Tooltip title=\"Block\" arrow>\r\n                                                <IconButton\r\n                                                  sx={{\r\n                                                    '&:hover': {\r\n                                                      background:\r\n                                                        theme.colors.error\r\n                                                          .lighter\r\n                                                    },\r\n                                                    color:\r\n                                                      theme.palette.primary.main\r\n                                                  }}\r\n                                                  color=\"inherit\"\r\n                                                  size=\"small\"\r\n                                                  onClick={(e) =>\r\n                                                    handleClickUnBlock(arr.id)\r\n                                                  }\r\n                                                >\r\n                                                  <LockIcon />\r\n                                                </IconButton>\r\n                                              </Tooltip>\r\n                                            )}\r\n                                          </>\r\n                                        ) : (\r\n                                          <></>\r\n                                        )}\r\n                                        {/* <IconButton\r\n                                          aria-label=\"more\"\r\n                                          id=\"long-button\"\r\n                                          aria-controls={open ? 'long-menu' : undefined}\r\n                                          aria-expanded={open ? 'true' : undefined}\r\n                                          aria-haspopup=\"true\"\r\n                                          onClick={handleClick}\r\n                                        >\r\n                                          <MoreVertIcon />\r\n                                        </IconButton>\r\n                                        <Menu\r\n                                          id=\"long-menu\"\r\n                                          MenuListProps={{\r\n                                            'aria-labelledby': 'long-button',\r\n                                          }}\r\n                                          anchorEl={anchorEl}\r\n                                          open={open}\r\n                                          onClose={handleCloseMenu}\r\n                                          PaperProps={{\r\n                                            style: {\r\n                                              maxHeight: ITEM_HEIGHT * 4.5,\r\n                                              width: '20ch',\r\n                                            },\r\n                                          }}\r\n                                        >\r\n                                          <MenuItem key=\"view\" sx={{ 'padding': '0px' }} selected>\r\n                                            <IconButton\r\n                                              sx={{\r\n                                                '&:hover': {\r\n                                                  background:\r\n                                                    theme.colors.error.lighter\r\n                                                },\r\n                                                color: theme.palette.primary.main,\r\n                                                'font-size': '16px'\r\n                                              }}\r\n                                              color=\"inherit\"\r\n                                              size=\"small\"\r\n                                              onClick={(e) => {\r\n                                                handleClickVisible(arr);\r\n                                              }}\r\n                                            >\r\n                                              <VisibilityIcon sx={{ fontSize: '26px', paddingRight: '10px' }} />View Profile\r\n                                            </IconButton>\r\n                                          </MenuItem>\r\n                                          {!arr.isVerifyProfilePic && arr.imageId && isUserProfilePicApprove && (\r\n                                            <MenuItem key=\"verify\" sx={{ 'padding': '0px' }}>\r\n                                              <IconButton\r\n                                                sx={{\r\n                                                  '&:hover': {\r\n                                                    background:\r\n                                                      theme.colors.error.lighter\r\n                                                  },\r\n                                                  color: theme.palette.primary.main,\r\n                                                  'font-size': '16px'\r\n                                                }}\r\n                                                color=\"inherit\"\r\n                                                size=\"small\"\r\n                                                onClick={(e) => {\r\n                                                  handleVerifyProfilePic(arr);\r\n                                                }}\r\n                                              >\r\n                                                <HowToRegIcon sx={{ fontSize: '26px', paddingRight: '10px' }} />Verify ProfilePic\r\n                                              </IconButton>\r\n                                            </MenuItem>\r\n                                          )}\r\n                                        </Menu> */}\r\n                                      </TableCell>\r\n                                    </TableRow>\r\n                                  );\r\n                                })}\r\n                              </TableBody>\r\n                            </Table>\r\n                          </TableContainer>\r\n                          <Box p={2}>\r\n                            <TablePagination\r\n                              component=\"div\"\r\n                              count={row} //totalrecord\r\n                              onPageChange={handlePageChange}\r\n                              onRowsPerPageChange={handleLimitChange}\r\n                              page={page}\r\n                              rowsPerPage={limit}\r\n                              rowsPerPageOptions={[10, 20, 30, 40]}\r\n                            />\r\n                          </Box>\r\n                        </>\r\n                      ) : (\r\n                        <Paper\r\n                          sx={{\r\n                            display: 'flex',\r\n                            justifyContent: 'center',\r\n                            alignItems: 'center',\r\n                            textAlign: 'center',\r\n                            verticalAlign: 'middle',\r\n                            boxShadow: 'none'\r\n                          }}\r\n                          className=\"appcard\"\r\n                        >\r\n                          <Typography variant=\"h5\" paragraph>\r\n                            Data not Found\r\n                          </Typography>\r\n                        </Paper>\r\n                      )}\r\n                    </>\r\n                  )}\r\n                </div>\r\n              </Card>\r\n\r\n              <div>\r\n                <Dialog\r\n                  open={isOpen}\r\n                  onClose={handleDelClose}\r\n                  fullWidth\r\n                  maxWidth=\"xs\"\r\n                >\r\n                  <DialogTitle\r\n                    sx={{\r\n                      m: 0,\r\n                      p: 2,\r\n                      fontSize: '20px',\r\n                      fontWeight: 'bolder'\r\n                    }}\r\n                  >\r\n                    Delete\r\n                  </DialogTitle>\r\n                  <DialogContent>\r\n                    <DialogContentText\r\n                      style={{\r\n                        fontSize: '1rem',\r\n                        letterSpacing: '0.00938em'\r\n                      }}\r\n                    >\r\n                      Are you sure you want to Delete?\r\n                    </DialogContentText>\r\n                  </DialogContent>\r\n                  <DialogActions>\r\n                    <Button\r\n                      onClick={handleDelClose}\r\n                      variant=\"outlined\"\r\n                      style={{ marginRight: '10px' }}\r\n                    >\r\n                      Cancel\r\n                    </Button>\r\n                    <Button\r\n                      onClick={() => handleDelete(arrr)}\r\n                      variant=\"outlined\"\r\n                      style={{ marginRight: '10px' }}\r\n                    >\r\n                      Yes\r\n                    </Button>\r\n                  </DialogActions>\r\n                </Dialog>\r\n              </div>\r\n              <div>\r\n                <Dialog\r\n                  open={ischeckUnBlock}\r\n                  onClose={handleClose}\r\n                  fullWidth\r\n                  maxWidth=\"xs\"\r\n                >\r\n                  <DialogTitle\r\n                    sx={{ m: 0, p: 2, fontSize: '20px', fontWeight: 'bolder' }}\r\n                  >\r\n                    UnBlock\r\n                  </DialogTitle>\r\n                  <DialogContent>\r\n                    <DialogContentText\r\n                      style={{ fontSize: '1rem', letterSpacing: '0.00938em' }}\r\n                    >\r\n                      Are you sure you want to UnBlock?\r\n                    </DialogContentText>\r\n                  </DialogContent>\r\n                  <DialogActions>\r\n                    <Button\r\n                      onClick={handleClose}\r\n                      variant=\"outlined\"\r\n                      style={{ marginRight: '10px' }}\r\n                    >\r\n                      Cancel\r\n                    </Button>\r\n                    <Button\r\n                      disabled={credentail?.isDemoAdmin}\r\n                      onClick={handleCheckUnBlock}\r\n                      variant=\"outlined\"\r\n                      style={{ marginRight: '10px' }}\r\n                    >\r\n                      Yes\r\n                    </Button>\r\n                  </DialogActions>\r\n                </Dialog>\r\n              </div>\r\n\r\n              <div>\r\n                <Dialog\r\n                  open={isDocumentUpload}\r\n                  onClose={handleDocumentUploadClose}\r\n                  fullWidth\r\n                  maxWidth=\"md\"\r\n                >\r\n                  <SnackbarComponent />\r\n                  <DialogTitle\r\n                    sx={{ m: 0, p: 2, fontSize: '20px', fontWeight: 'bolder' }}\r\n                  >\r\n                    Documents\r\n                  </DialogTitle>\r\n                  <DialogContent>\r\n                    <DialogContentText\r\n                      style={{ fontSize: '1rem', letterSpacing: '0.00938em' }}\r\n                    >\r\n                      <Grid container spacing={2}>\r\n                        {userDocuments &&\r\n                          userDocuments.length > 0 &&\r\n                          userDocuments.map(\r\n                            (ele: AppUserDocuments, ind: number) => {\r\n                              return (\r\n                                <Grid key={ele.id} item xs={6}>\r\n                                  <div>\r\n                                    {errorArray[ind] ? (\r\n                                      <img\r\n                                        src=\"/defaultDocument.jpg\"\r\n                                        alt=\"Default Image\"\r\n                                        style={{\r\n                                          height: 'calc(100vh - 650px)',\r\n                                          width: 'auto'\r\n                                        }}\r\n                                      />\r\n                                    ) : (\r\n                                      <img\r\n                                        src={ele.documentUrl}\r\n                                        style={{\r\n                                          height: 'calc(100vh - 650px)',\r\n                                          width: 'auto'\r\n                                        }}\r\n                                        onError={() => {\r\n                                          handleImageError(ele, ind);\r\n                                          ele.isError = true;\r\n                                        }}\r\n                                      ></img>\r\n                                    )}\r\n                                    <br></br>\r\n                                    {ele.documentTypeName}\r\n                                  </div>\r\n                                </Grid>\r\n                              );\r\n                            }\r\n                          )}\r\n                      </Grid>\r\n                    </DialogContentText>\r\n                  </DialogContent>\r\n                  <DialogActions>\r\n                  \r\n                    <Button\r\n                      onClick={handleDocumentUploadClose}\r\n                      variant=\"outlined\"\r\n                      style={{ marginRight: '10px' }}\r\n                    >\r\n                      Cancel\r\n                    </Button>\r\n                    <Button\r\n                      // disabled={credentail?.isDemoAdmin}\r\n                      onClick={() =>\r\n                        checkIsDemoUser(handleApprovedDocument, showSnackBar)()\r\n                      }\r\n                      variant=\"outlined\"\r\n                      style={{ marginRight: '10px' }}\r\n                    >\r\n                      Aproved\r\n                    </Button>\r\n                  </DialogActions>\r\n                </Dialog>\r\n              </div>\r\n              <div>\r\n                <Dialog\r\n                  open={isVerifyProfile}\r\n                  onClose={handleVerifyProfilePicClose}\r\n                  fullWidth\r\n                  maxWidth=\"xs\"\r\n                >\r\n                  <DialogTitle\r\n                    sx={{\r\n                      m: 0,\r\n                      p: 2,\r\n                      fontSize: '16px',\r\n                      fontWeight: 'bolder'\r\n                      // borderBottom: '1px solid #ddd'\r\n                    }}\r\n                  >\r\n                    Verify User Profile\r\n                  </DialogTitle>\r\n                  <DialogContent>\r\n                    {imageUrl && (\r\n                      <Box\r\n                        sx={{\r\n                          height: '230px',\r\n                          width: '170px',\r\n                          margin: 'auto',\r\n                          marginBottom: '10px',\r\n                          marginTop: '10px'\r\n                        }}\r\n                      >\r\n                        <img\r\n                          style={{\r\n                            height: '100%',\r\n                            width: '100%',\r\n                            objectFit: 'contain'\r\n                          }}\r\n                          src={imageUrl}\r\n                        ></img>\r\n                      </Box>\r\n                      // <Avatar\r\n                      //   sx={{ margin: 'auto', height: '140px', width: '140px', marginBottom: '10px', marginTop: '10px', borderRadius: '0px' }}\r\n                      //   src={\r\n                      //     process.env\r\n                      //       .REACT_APP_IMAGE_URL +\r\n                      //     imageUrl\r\n                      //   }\r\n\r\n                      // ></Avatar>\r\n                    )}\r\n\r\n                    {/* <DialogContentText\r\n                      style={{\r\n                        fontSize: '24px',\r\n                        letterSpacing: '0.00938em',\r\n                        textAlign: 'center'\r\n                      }}\r\n                    >\r\n                      Verify Profile\r\n                    </DialogContentText> */}\r\n                  </DialogContent>\r\n                  <DialogActions>\r\n                    <Button\r\n                      onClick={handleVerifyProfilePicClose}\r\n                      variant=\"outlined\"\r\n                      style={{ marginRight: '10px' }}\r\n                    >\r\n                      Cancel\r\n                    </Button>\r\n                    <Button\r\n                      onClick={(e) => {\r\n                        handleProfileConfirmation(true);\r\n                      }}\r\n                      variant=\"outlined\"\r\n                      style={{ marginRight: '10px' }}\r\n                    >\r\n                      Approve\r\n                    </Button>\r\n                    <Button\r\n                      disabled={credentail?.isDemoAdmin}\r\n                      onClick={(e) => {\r\n                        handleProfileConfirmation(false);\r\n                      }}\r\n                      variant=\"outlined\"\r\n                      style={{ marginRight: '10px' }}\r\n                    >\r\n                      Reject\r\n                    </Button>\r\n                  </DialogActions>\r\n                </Dialog>\r\n              </div>\r\n              <div>\r\n                <Dialog\r\n                  open={isProfileConfirmation}\r\n                  onClose={handleVerifyProfilePicClose}\r\n                  fullWidth\r\n                  maxWidth=\"xs\"\r\n                >\r\n                  <DialogTitle\r\n                    sx={{\r\n                      m: 0,\r\n                      p: 2,\r\n                      fontSize: '20px',\r\n                      fontWeight: 'bolder'\r\n                    }}\r\n                  ></DialogTitle>\r\n                  <DialogContent>\r\n                    <DialogContentText\r\n                      style={{\r\n                        letterSpacing: '0.00938em'\r\n                      }}\r\n                    >\r\n                      <Typography\r\n                        sx={{ paddingLeft: '10px', fontSize: '1rem' }}\r\n                      >\r\n                        Are You sure you want to{' '}\r\n                        {isVerified ? (\r\n                          <Typography style={{ display: 'inline' }}>\r\n                            Approve\r\n                          </Typography>\r\n                        ) : (\r\n                          <Typography style={{ display: 'inline' }}>\r\n                            Reject\r\n                          </Typography>\r\n                        )}{' '}\r\n                        user profile Image?\r\n                      </Typography>\r\n\r\n                      {!isVerified && (\r\n                        <Typography\r\n                          style={{\r\n                            paddingLeft: '10px',\r\n                            color: '#ff0000',\r\n                            paddingTop: '10px',\r\n                            fontSize: '12px',\r\n                            fontWeight: '600'\r\n                          }}\r\n                        >\r\n                          Note: If You Reject this request the image will also\r\n                          remove from system\r\n                        </Typography>\r\n                      )}\r\n                    </DialogContentText>\r\n                  </DialogContent>\r\n                  <DialogActions>\r\n                    <Button\r\n                      onClick={handleVerifyProfilePicClose}\r\n                      variant=\"outlined\"\r\n                      style={{ marginRight: '10px' }}\r\n                    >\r\n                      Cancel\r\n                    </Button>\r\n                    <Button\r\n                      disabled={credentail?.isDemoAdmin}\r\n                      onClick={(e) => {\r\n                        handleVerifyProfile();\r\n                      }}\r\n                      variant=\"outlined\"\r\n                      style={{ marginRight: '10px' }}\r\n                    >\r\n                      Confirm\r\n                    </Button>\r\n                  </DialogActions>\r\n                </Dialog>\r\n              </div>\r\n            </>\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n      {/* <Footer /> */}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ApplicationsUser;\r\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)([/*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M17 11c.34 0 .67.04 1 .09V6.27L10.5 3 3 6.27v4.91c0 4.54 3.2 8.79 7.5 9.82.55-.13 1.08-.32 1.6-.55-.69-.98-1.1-2.17-1.1-3.45 0-3.31 2.69-6 6-6z\"\n}, \"0\"), /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M17 13c-2.21 0-4 1.79-4 4s1.79 4 4 4 4-1.79 4-4-1.79-4-4-4zm0 1.38c.62 0 1.12.51 1.12 1.12s-.51 1.12-1.12 1.12-1.12-.51-1.12-1.12.5-1.12 1.12-1.12zm0 5.37c-.93 0-1.74-.46-2.24-1.17.05-.72 1.51-1.08 2.24-1.08s2.19.36 2.24 1.08c-.5.71-1.31 1.17-2.24 1.17z\"\n}, \"1\")], 'AdminPanelSettings');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M9 16.17 4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z\"\n}), 'Check');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)([/*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M5 18.08V19h.92l9.06-9.06-.92-.92z\",\n  opacity: \".3\"\n}, \"0\"), /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34c-.2-.2-.45-.29-.71-.29s-.51.1-.7.29l-1.83 1.83 3.75 3.75 1.83-1.83zM3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM5.92 19H5v-.92l9.06-9.06.92.92L5.92 19z\"\n}, \"1\")], 'EditTwoTone');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\"\n}), 'Search');\nexports.default = _default;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getDialogContentTextUtilityClass(slot) {\n  return generateUtilityClass('MuiDialogContentText', slot);\n}\nconst dialogContentTextClasses = generateUtilityClasses('MuiDialogContentText', ['root']);\nexport default dialogContentTextClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\", \"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport styled, { rootShouldForwardProp } from '../styles/styled';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport Typography from '../Typography';\nimport { getDialogContentTextUtilityClass } from './dialogContentTextClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  const composedClasses = composeClasses(slots, getDialogContentTextUtilityClass, classes);\n  return _extends({}, classes, composedClasses);\n};\nconst DialogContentTextRoot = styled(Typography, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  name: 'MuiDialogContentText',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({});\nconst DialogContentText = /*#__PURE__*/React.forwardRef(function DialogContentText(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiDialogContentText'\n  });\n  const {\n      className\n    } = props,\n    ownerState = _objectWithoutPropertiesLoose(props, _excluded);\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(DialogContentTextRoot, _extends({\n    component: \"p\",\n    variant: \"body1\",\n    color: \"text.secondary\",\n    ref: ref,\n    ownerState: ownerState,\n    className: clsx(classes.root, className)\n  }, props, {\n    classes: classes\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? DialogContentText.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default DialogContentText;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getTableHeadUtilityClass(slot) {\n  return generateUtilityClass('MuiTableHead', slot);\n}\nconst tableHeadClasses = generateUtilityClasses('MuiTableHead', ['root']);\nexport default tableHeadClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport Tablelvl2Context from '../Table/Tablelvl2Context';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport styled from '../styles/styled';\nimport { getTableHeadUtilityClass } from './tableHeadClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getTableHeadUtilityClass, classes);\n};\nconst TableHeadRoot = styled('thead', {\n  name: 'MuiTableHead',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  display: 'table-header-group'\n});\nconst tablelvl2 = {\n  variant: 'head'\n};\nconst defaultComponent = 'thead';\nconst TableHead = /*#__PURE__*/React.forwardRef(function TableHead(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiTableHead'\n  });\n  const {\n      className,\n      component = defaultComponent\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    component\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(Tablelvl2Context.Provider, {\n    value: tablelvl2,\n    children: /*#__PURE__*/_jsx(TableHeadRoot, _extends({\n      as: component,\n      className: clsx(classes.root, className),\n      ref: ref,\n      role: component === defaultComponent ? null : 'rowgroup',\n      ownerState: ownerState\n    }, other))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? TableHead.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component, normally `TableRow`.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default TableHead;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getTableUtilityClass(slot) {\n  return generateUtilityClass('MuiTable', slot);\n}\nconst tableClasses = generateUtilityClasses('MuiTable', ['root', 'stickyHeader']);\nexport default tableClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"component\", \"padding\", \"size\", \"stickyHeader\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport TableContext from './TableContext';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport styled from '../styles/styled';\nimport { getTableUtilityClass } from './tableClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    stickyHeader\n  } = ownerState;\n  const slots = {\n    root: ['root', stickyHeader && 'stickyHeader']\n  };\n  return composeClasses(slots, getTableUtilityClass, classes);\n};\nconst TableRoot = styled('table', {\n  name: 'MuiTable',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.stickyHeader && styles.stickyHeader];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  display: 'table',\n  width: '100%',\n  borderCollapse: 'collapse',\n  borderSpacing: 0,\n  '& caption': _extends({}, theme.typography.body2, {\n    padding: theme.spacing(2),\n    color: (theme.vars || theme).palette.text.secondary,\n    textAlign: 'left',\n    captionSide: 'bottom'\n  })\n}, ownerState.stickyHeader && {\n  borderCollapse: 'separate'\n}));\nconst defaultComponent = 'table';\nconst Table = /*#__PURE__*/React.forwardRef(function Table(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiTable'\n  });\n  const {\n      className,\n      component = defaultComponent,\n      padding = 'normal',\n      size = 'medium',\n      stickyHeader = false\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    component,\n    padding,\n    size,\n    stickyHeader\n  });\n  const classes = useUtilityClasses(ownerState);\n  const table = React.useMemo(() => ({\n    padding,\n    size,\n    stickyHeader\n  }), [padding, size, stickyHeader]);\n  return /*#__PURE__*/_jsx(TableContext.Provider, {\n    value: table,\n    children: /*#__PURE__*/_jsx(TableRoot, _extends({\n      as: component,\n      role: component === defaultComponent ? null : 'table',\n      ref: ref,\n      className: clsx(classes.root, className),\n      ownerState: ownerState\n    }, other))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Table.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the table, normally `TableHead` and `TableBody`.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * Allows TableCells to inherit padding of the Table.\n   * @default 'normal'\n   */\n  padding: PropTypes.oneOf(['checkbox', 'none', 'normal']),\n  /**\n   * Allows TableCells to inherit size of the Table.\n   * @default 'medium'\n   */\n  size: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.string]),\n  /**\n   * Set the header sticky.\n   *\n   * ⚠️ It doesn't work with IE11.\n   * @default false\n   */\n  stickyHeader: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Table;"],"names":["PageTitle","styled","Box","_ref","theme","spacing","_ref2","children","_jsx","className","Container","maxWidth","props","title","page","setPage","useState","limit","setLimit","row","setRow","isLoading","setIsLoading","users","setUsers","React","ischeckUnBlock","setIsCheckUnBlock","unblock","setUnblock","search","setSearch","credentail","setCredentail","isDocumentUpload","setIsDocumentUpload","userDocuments","setUserDocuments","isOpen","setIsOpen","arrr","setArrr","isDel","setIsDel","isEdit","setIsEdit","isReadPermission","setIsReadPermission","isWritePermission","setIsWritePermission","isEditPermission","setIsEditPermission","isDeletePermission","setIsDeletePermission","isVerifyProfile","setVerifyProfile","userId","setUserId","imageUrl","setImageUrl","isUserProfilePicApprove","setUserProfilePicApproval","isProfileConfirmation","setIsProfileConfirmationDialog","navigate","useNavigate","isVerified","setIsVerified","showSnackBar","SnackbarComponent","useSnackbar","apiUrl","setApiUrl","handlerEdit","element","localStorage","setItem","id","handleEdit","handleDelClose","cred","JSON","parse","getItem","roleId","ind","pagePermissions","findIndex","c","isAddPermission","getData","loadjson","async","res","fetch","url","json","console","log","startIndex","fetchRecord","token","refreshToken","obj","searchString","APIservice","httpPost","i","recordList","length","isDocumentUploaded","isDocumentVerified","j","isError","totalRecords","status","clear","toast","error","message","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","position","POSITION","TOP_RIGHT","handleClose","useTheme","handleDocumentUploadClose","handleVerifyProfilePicClose","handleApprovedDocument","handleProfileConfirmation","errorArray","setErrorArray","anchorEl","setAnchorEl","Boolean","_jsxs","_Fragment","ToastContainer","style","top","left","newestOnTop","rtl","pauseOnFocusLoss","Helmet","PageTitleWrapper","pt","pb","pl","Grid","container","justifyContent","alignItems","item","Stack","Breadcrumbs","Link","to","display","color","HomeIcon","Typography","variant","fontWeight","Button","sx","mt","xs","md","padding","size","onClick","textDecoration","FormControl","TextField","name","value","onChange","e","target","charAt","toUpperCase","slice","searchData","label","InputProps","startAdornment","InputAdornment","SearchIcon","direction","Card","Loader1","Divider","TableContainer","Table","stickyHeader","TableHead","TableRow","TableCell","noWrap","fontSize","marginBottom","align","TableBody","map","arr","index","hover","gutterBottom","Avatar","src","firstName","middleName","lastName","imageId","isVerifyProfilePic","backgroundColor","borderRadius","height","width","right","CheckIcon","email","contactNo","gender","float","handleClickOpenDoc","diaplay","Tooltip","arrow","IconButton","background","colors","lighter","palette","primary","main","EditTwoToneIcon","checkIsDemoUser","handleOpenDeleteDialog","DeleteIcon","handleClickVisible","VisibilityIcon","handleVerifyProfilePic","AdminPanelSettingsIcon","p","TablePagination","component","count","onPageChange","handlePageChange","event","newPage","onRowsPerPageChange","parseInt","rowsPerPage","rowsPerPageOptions","Paper","textAlign","verticalAlign","boxShadow","paragraph","Dialog","open","onClose","fullWidth","DialogTitle","m","DialogContent","DialogContentText","letterSpacing","DialogActions","marginRight","prev","handleDelete","disabled","isDemoAdmin","ele","alt","documentUrl","onError","handleImageError","prevErrors","newErrors","documentTypeName","margin","marginTop","objectFit","paddingLeft","paddingTop","msg","success","handleVerifyProfile","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d","opacity","getDialogContentTextUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","DialogContentTextRoot","shouldForwardProp","prop","rootShouldForwardProp","overridesResolver","styles","root","inProps","ref","useDefaultProps","ownerState","_objectWithoutPropertiesLoose","classes","composedClasses","composeClasses","_extends","useUtilityClasses","clsx","getTableHeadUtilityClass","TableHeadRoot","tablelvl2","defaultComponent","other","Tablelvl2Context","Provider","as","role","getTableUtilityClass","TableRoot","borderCollapse","borderSpacing","typography","body2","vars","text","secondary","captionSide","slots","table","TableContext"],"sourceRoot":""}